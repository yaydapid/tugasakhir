{"version":3,"file":"src_app_pages_report_report_module_ts.js","mappings":"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","sources":["./src/app/pages/dashboard/piping-assets/piping-assets.service.ts","./src/app/pages/report/piping-assets/chart/remaining-chart.component.ts","./src/app/pages/report/piping-assets/chart/thickness-chart.component.ts","./src/app/pages/report/piping-assets/report-piping-assets.ts","./src/app/pages/report/piping-assets/report-piping-assets.html","./src/app/pages/report/piping-circuits/chart/piping-circuit-trend-chart.ts","./src/app/pages/report/piping-circuits/report-piping-circuit.ts","./src/app/pages/report/piping-circuits/report-piping-circuit.html","./src/app/pages/report/report-service.ts","./src/app/pages/report/report.component.ts","./src/app/pages/report/report.module.ts","./src/app/pages/report/repot.routing.ts"],"sourcesContent":["import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"../../../../environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n}) \r\nexport class PipingAssetsService {\r\n\r\n    constructor(private httpClient : HttpClient) { }\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    getPipingAssets() {\r\n        const url = this.apiUrl + \"/assets\";\r\n        const httpHeaders = new HttpHeaders();\r\n        httpHeaders.append(\"enctype\",\"multipart/form-data\");\r\n        httpHeaders.append(\"Accept\",\"*/*\");\r\n        return this.httpClient.get(url);\r\n    }\r\n\r\n    addPipingAssets(data) {\r\n        const url = this.apiUrl + \"/assets\";\r\n        return this.httpClient.post(url, data);\r\n    }\r\n\r\n    updatePipingAssets(data) {  \r\n        const url = this.apiUrl + \"/assets/\" + data.id;\r\n        return this.httpClient.put(url, data);\r\n    }\r\n\r\n    deletePipingAssets(id) {\r\n        const url = this.apiUrl + \"/assets/\" + id;\r\n        return this.httpClient.delete(url);\r\n    }\r\n\r\n    uploadImage(postBody){\r\n        const url = this.apiUrl + \"/file/upload\";\r\n        return this.httpClient.post(url, postBody, {\r\n          reportProgress : true, observe : 'events'\r\n        })\r\n    }\r\n}","import { Component } from \"@angular/core\";\r\nimport { ChartsComponent } from \"../../../../component/chart/charts-component\";\r\n\r\n@Component({\r\n  selector: 'ngx-dashboard-remaining-chart',\r\n  template : '<canvas id=\"DashboardRemaining\">'\r\n})\r\nexport class DashboardRemainingChart extends ChartsComponent {\r\n  constructor() {\r\n    super()\r\n    this.defineOptions({\r\n      chartTitle : \"Remaining Life vs Year\", \r\n      yTitle : 'Remaining Life (years)', \r\n      xTitle : 'Year'\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.generateChart('DashboardRemaining')\r\n  }\r\n}","import { Component } from \"@angular/core\";\r\nimport { ChartsComponent } from \"../../../../component/chart/charts-component\";\r\n\r\n@Component({\r\n  selector: 'ngx-dashboard-thickness-chart',\r\n  template : '<canvas id=\"DashboardThickness\">'\r\n})\r\nexport class DashboardThicknessChart extends ChartsComponent {\r\n  constructor() {\r\n    super()\r\n    this.defineOptions({\r\n      chartTitle : \"Thickness vs Year\", \r\n      yTitle : 'Thickness (mm)', \r\n      xTitle : 'Year'\r\n    })\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.generateChart('DashboardThickness')\r\n  }\r\n}","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { \r\n    NgxQrcodeElementTypes, \r\n    NgxQrcodeErrorCorrectionLevels \r\n} from '@techiediaries/ngx-qrcode';\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { PipingAssetsService } from \"../../dashboard/piping-assets/piping-assets.service\";\r\nimport { environment } from \"../../../../environments/environment\";\r\nimport { ReportService } from \"../report-service\";\r\nimport { MatTableComponent } from \"../../../component/mat-table/mat-table.component\";\r\nimport { Variables } from \"../../../component/common-variable\";\r\nimport { NbToastrService } from \"@nebular/theme\";\r\nimport { DashboardThicknessChart } from \"./chart/thickness-chart.component\";\r\nimport { DashboardRemainingChart } from \"./chart/remaining-chart.component\";\r\nimport { ThicknessService } from \"../../assesment/thickness/thickness-service\";\r\n\r\n@Component({\r\n    selector: 'ngx-report-piping-assets',\r\n    templateUrl: './report-piping-assets.html',\r\n})\r\nexport class ReportPipingAssets implements OnInit {\r\n\r\n    elementType = NgxQrcodeElementTypes.URL;\r\n    correctionLevel = NgxQrcodeErrorCorrectionLevels.HIGH;\r\n    value = 'https://www.google.com/';\r\n\r\n    constructor(\r\n        private pipingAssetsService : PipingAssetsService,\r\n        private reportService : ReportService,\r\n        private variables : Variables,\r\n        private toastr : NbToastrService,\r\n        private thicknesService : ThicknessService\r\n    ) {}    \r\n\r\n    ngOnInit(): void {\r\n        this.thicknesService.getDataThickness()\r\n        .subscribe(({data} : any) => {\r\n            this.tablePosition = data\r\n            const firsData = data[0]\r\n            console.log(firsData)\r\n            if(!firsData) return\r\n            this.showData(firsData)\r\n            this.getReportData(firsData?.id)\r\n            this.dataSource = new MatTableDataSource(data);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n        }, \r\n        () => this.toastr.danger('Please add asset data.', 'Data not found.')\r\n        )\r\n    }\r\n\r\n    @ViewChild(MatTableComponent) viewTable : MatTableComponent;\r\n    getReportData(id) {\r\n        this.reportService.getAssetsReport(id)\r\n        .subscribe(({data : {damage_mechanism, visual_condition, proposal, asset, cml}} : any) => {\r\n\r\n            this.damageMechanismData = this.variables.damageMechanismName.map(({id ,piping_damage_mechanism} : any) => {\r\n                const damage = damage_mechanism?.[id]\r\n                if(damage) return {...damage, piping_damage_mechanism}\r\n                return null\r\n            }) \r\n            .filter(item => item!=null)\r\n            this.viewTable.regenerateTable(this.damageMechanismData)\r\n\r\n            this.pipingVisual = this.pipingVisual.map(({name, props}) => ({\r\n                name, props, data : visual_condition[props] ?? null\r\n            })) \r\n\r\n            this.inspectionHistoryData = [{\r\n                ...proposal, \r\n                inspection_summary : proposal\r\n                ?.inspection_method\r\n                ?.map(({type, method, technique}) => ` ${type} ${method} ${technique}`) \r\n            }]\r\n            \r\n            this.pipingThickness = this.pipingThickness.map(({name, props}) => {\r\n                const { \r\n                    reading, \r\n                    min_required_thickness, \r\n                    lt_cr, st_cr, \r\n                    remaining_life, \r\n                    half_life, \r\n                    retirement_date, \r\n                    next_tm_insp_date, \r\n                    next_ve_insp_date, \r\n                    mawp \r\n                } = this.variables.getThicknessCalculation({...asset, cml})\r\n                const dataThickness = {\r\n                    ...asset,\r\n                    reading : reading.toFixed(4),\r\n                    t_min : min_required_thickness.toFixed(4),\r\n                    lt_cr : lt_cr.toFixed(4),\r\n                    st_cr : st_cr.toFixed(4),\r\n                    remaining_life : remaining_life.toFixed(4),\r\n                    half_life : half_life.toFixed(4),\r\n                    retirement_date,\r\n                    next_tm_insp_date,\r\n                    next_ve_insp_date,\r\n                    mawp : mawp.toFixed(4)\r\n                }\r\n                return {\r\n                    name,\r\n                    props,\r\n                    data : dataThickness[props]\r\n                }\r\n            })\r\n\r\n\r\n\r\n        },\r\n        () => this.toastr.danger('Please add asset data.', 'Data not found.')\r\n        )\r\n    }\r\n  \r\n    tablePosition:any[] = []\r\n    dataSource\r\n    displayedColumns: string[] = ['piping_id'];\r\n    resultsLength = 0;\r\n    pipeData : any;\r\n\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    @ViewChild(MatSort) sort: MatSort;\r\n\r\n    @ViewChild(DashboardThicknessChart) thicknessChart : DashboardThicknessChart\r\n    @ViewChild(DashboardRemainingChart) remainingChart : DashboardRemainingChart\r\n\r\n    imageLink : any[] = []\r\n    showData(element) {\r\n        this.pipeData = element;\r\n        this.imageLink = typeof element.images == \"object\" \r\n        ? element.images.map(image => \r\n            ({src : environment.apiUrl + '/image/' + image, alt : 'Pipe Asssets' })\r\n        )\r\n        : []\r\n\r\n        this.variables.removeChartData(this.thicknessChart)\r\n        this.variables.removeChartData(this.remainingChart)\r\n        this.thicknessChartData(this.thicknessChart, element)\r\n        this.remainingLifeChartData(this.remainingChart, element)\r\n    }\r\n\r\n    thicknessChartData(chart, {cml}) {\r\n        const {datasets, allYear} = this.variables.getCharCML(cml, \"last_thickness_reading\")\r\n        chart.data.labels = allYear\r\n        chart.chart.data.datasets = datasets\r\n        chart.chart.update();\r\n    } \r\n\r\n    corrosionChartData(chart, asset) {\r\n        const cml = this.variables.getCMLCalc(asset)\r\n        const {datasets, allYear} = this.variables.getCharCML(cml, \"lt_cr\")\r\n        chart.data.labels = allYear\r\n        chart.chart.data.datasets = datasets\r\n        chart.chart.update();\r\n    }\r\n\r\n    remainingLifeChartData(chart, asset) {\r\n        const cml = this.variables.getCMLCalc(asset)\r\n        const {datasets, allYear} = this.variables.getCharCML(cml, \"remaining_life\")\r\n        chart.data.labels = allYear\r\n        chart.chart.data.datasets = datasets\r\n        chart.chart.update();\r\n    }\r\n\r\n    filterByClass(val) {\r\n        let tableData = this.tablePosition.filter(item => item.class == val)\r\n        if(val == \"All\") tableData = this.tablePosition\r\n        this.dataSource = new MatTableDataSource(tableData)\r\n    }\r\n\r\n    spesificationItem = [\r\n        { props : 'nominal_pipe_size', name : \"Nominal Pipe Size\", unit : 'mm' },\r\n        { props : 'pipe_design_code', name : \"Pipe Design Code\" },\r\n        { props : 'schedule', name : \"Schedule\", unit : 'mm' },\r\n        { props : 'outside_diameter', name : \"Outside Diameter\" },\r\n        { props : 'longtd_quality_factor', name : \"Longtd. Quality Factor (E)\" },\r\n        { props : 'weld_joint_factor', name : \"Weld Joint Factor (W)\" },\r\n        { props : 'allowable_unit_stress', name : \"Allowable Unit Stress (S)\", unit : 'psi' },\r\n        { props : 'coefficient', name : \"Coefficient (Y)\" },\r\n        { props : 'min_design_pressure', name : \"Min. Design Pressure (P min)\", unit : 'psig' },\r\n        { props : 'max_design_pressure', name : \"Max. Design Pressure (P max)\", unit : 'psig' },\r\n        { props : 'min_design_temperature', name : \"Min. Design Temperature (T min)\", unit : 'F' },\r\n        { props : 'max_design_temperature', name : \"Max Design Temperature (T max)\", unit : 'F' },\r\n        { props : 'corrosion_allowance', name : \"Corrosion Allowance\", unit : 'mm' },\r\n        { props : 'mechanical_allowance', name : \"Mechanical Allowances\", unit : 'mm' },\r\n        { props : 'min_structural_thickness', name : \"Min. Structural Thickness\", unit : 'mm' },\r\n        { props : 'min_alert_thickness', name : \"Min. Alert Thickness\", unit : 'mm' },\r\n        { props : 'nominal_thickness', name : \"Nominal Thickness\", unit : 'mm' },\r\n    ];\r\n\r\n    pipingVisual : any = [\r\n        { name : 'Leaks', props : 'leaks_condition', data : null },\r\n        { name : 'Misalignment', props : 'misalignment_condition', data : null},\r\n        { name : 'Vibration', props : 'vibration_condition', data : null },\r\n        { name : 'Supports', props : 'supports_condition', data : null },\r\n        { name : 'Corrosion', props : 'corrosion_condition', data : null },\r\n        { name : 'Insulation', props : 'insulation_condition', data : null },\r\n    ]\r\n\r\n    pipingThickness = [\r\n        { name : 'Reading', props : 'reading' },\r\n        { name : 'Long Term Cr', props : 'lt_cr' },\r\n        { name : 'Remaining Life', props : 'remaining_life' },\r\n        { name : 'Thick. Min', props : 't_min' },\r\n        { name : 'Short Term CR', props : 'st_cr' },\r\n        { name : 'Half Life', props : 'half_life' },\r\n        { name : 'Retirement Date', props : 'retirement_date' },\r\n    ]\r\n\r\n    damageMechanismData : any[];\r\n    damageMechanismDetails = [ \r\n        { type : 'text', prop : 'piping_damage_mechanism', head : 'Piping Damage Mechanism', width : '200px' },\r\n        { type : 'text', prop : 'notes', head : 'Notes', width : '200px' },\r\n        { type : 'text', prop : 'type_location', head : 'Expected Type/Location', width : '200px' },\r\n        { type : 'text', prop : 'last_insp_date', head : 'Last Insp.Date', width : '200px' },\r\n        { type : 'text', prop : 'insp_due_date', head : 'Insp. Due Date', width : '200px' },\r\n    ]\r\n\r\n    inspectionHistoryData:any[] = []\r\n    inspectionHistoryDetails = [ \r\n        { type : 'text', prop : 'proposal_id', head : 'Inspection Id', width : '100px' },\r\n        { type : 'editable date', prop : 'inspection_date', head : 'Inspection Date', width : '200px' },\r\n        { type : 'text', prop : 'inspection_summary', head : 'Inspection Summary', width : '300px' },\r\n        { type : 'check', prop : 'caried_out', head : 'Caried Out', width : '50px' },\r\n    ]\r\n\r\n    applyFilter(event: Event) {\r\n        const filterValue = (event.target as HTMLInputElement).value;\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  \r\n        if (this.dataSource.paginator) {\r\n          this.dataSource.paginator.firstPage();\r\n        }\r\n    }\r\n}","<nb-card>\r\n    <nb-card-header class=\"d-flex justify-content-between\">\r\n        <div>\r\n            <h5>Piping Assets</h5>\r\n            <mat-form-field>\r\n                <mat-label>Hit Enter To Search</mat-label>\r\n                <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col\">Class</div>\r\n          <div class=\"col\">\r\n            <nb-select placeholder=\"Class\" class=\"mx-5\" status=\"primary\" size=\"small\">\r\n              <nb-option \r\n              (click)=\"filterByClass(option)\"\r\n              [value]=\"option\"\r\n              *ngFor=\"let option of ['All',1,2,3,4]\"\r\n              >{{ option }}</nb-option>\r\n            </nb-select>\r\n          </div>\r\n        </div>\r\n    </nb-card-header>\r\n    <nb-card-body class=\"row\">\r\n      \r\n        <div class=\"col-3\">\r\n            <table style=\"width: 100%; box-shadow: none;\" mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n                <!-- Position Column -->\r\n                <ng-container matColumnDef=\"piping_id\">\r\n                    <th mat-header-cell *matHeaderCellDef [ngStyle]=\" {'width' : '40px'} \"> Piping ID </th>\r\n                    <td mat-cell *matCellDef=\"let element\" #nameCell\r\n                      style=\"cursor : pointer\"\r\n                      [ngStyle]=\"{'color' : pipeData == element ? '#0492c2' : 'black'}\"\r\n                      (mouseover)=\"nameCell.style.color = '#0492c2'\"\r\n                      (mouseout)=\"pipeData == element \r\n                      ? nameCell.style.color = '#0492c2' \r\n                      : nameCell.style.color = 'black'\"\r\n                      (click)=\"showData(element)\"\r\n                    > {{element.piping_id}} </td>\r\n                </ng-container>\r\n    \r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                </tr>\r\n            </table>\r\n\r\n                        \r\n            <mat-paginator \r\n                [length]=\"resultsLength\" \r\n                [pageSize]=\"30\" \r\n                aria-label=\"Select page of GitHub search results\">\r\n            </mat-paginator>\r\n        </div>\r\n\r\n        <div class=\"col-9\">\r\n            <h5 *ngIf=\"!pipeData\">Please Add Asset Data.</h5>\r\n            <nb-card>\r\n              <nb-card-body>\r\n                <section *ngIf=\"pipeData\">\r\n                  <h6 class=\"fw-bolder text-primary mb-2 d-block\">Piping Assets {{ pipeData?.piping_id }}</h6>\r\n\r\n                  <div class=\"row\">\r\n\r\n                    <div class=\"col-8\">\r\n                      <div id=\"carouselExampleInterval\" class=\"carousel slide\" data-bs-ride=\"carousel\">\r\n                          <div class=\"carousel-inner\">\r\n                            <span *ngIf=\"!imageLink\">No Image Available</span>\r\n                            <div *ngFor=\"let image of imageLink; let i = index;\" class=\"carousel-item\" [ngClass]=\"i == 0 ? 'active' : ''\" data-bs-interval=\"10000\">\r\n                              <div class=\"overflow-hidden d-flex align-justify-center\" style=\"height: 15rem;\">\r\n                                  <img [src]=\"image.src\" class=\"w-100 img-fluid\" [alt]=\"image?.alt\">\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <button class=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselExampleInterval\" data-bs-slide=\"prev\">\r\n                            <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                            <span class=\"visually-hidden\">Previous</span>\r\n                          </button>\r\n                          <button class=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExampleInterval\" data-bs-slide=\"next\">\r\n                            <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                            <span class=\"visually-hidden\">Next</span>\r\n                          </button>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-4 d-flex justify-content-center align-self-center\">\r\n                      <div>\r\n                        <div class=\"border rounded\">\r\n                          <ngx-qrcode\r\n                            [elementType]=\"elementType\"\r\n                            [errorCorrectionLevel]=\"correctionLevel\"\r\n                            [value]=\"value\"\r\n                          ></ngx-qrcode>\r\n                        </div>\r\n                        <button nbButton status=\"primary\" class=\"mt-2 w-100\" size=\"small\" outline>See Attachment</button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"row mt-3\">\r\n                    <span class=\"text-secondary col-4\">Date In Service</span>\r\n                    <span class=\"col-8\">{{ pipeData?.date_in_service || '-' }}</span>\r\n                    <span class=\"text-secondary col-4\">Class</span>\r\n                    <span class=\"col-8\">{{ pipeData?.class || '-' }}</span>\r\n                    <span class=\"text-secondary col-4\">Notes</span>\r\n                    <span class=\"col-8\">{{ pipeData?.notes || '-' }}</span>\r\n                  </div>\r\n\r\n                  <span class=\"text-secondary\">Recomendation</span>\r\n                  <p>{{ pipeData?.recomendation || '-' }}</p>\r\n\r\n                  <div class=\"row row-cols-2 mt-3\">\r\n                    <div *ngFor=\"let spec of spesificationItem\" class=\"row mb-2\">\r\n                      <span class=\"col-8 text-secondary\" >{{ spec.name }}</span>\r\n                      <span class=\"col\" >{{ pipeData[spec.props] }}</span>\r\n                    </div>\r\n                  </div>  \r\n\r\n                </section>\r\n\r\n                <section>\r\n                  <h6 class=\"fw-bolder text-primary mb-2 d-block\">Piping Visual</h6>\r\n\r\n                  <div class=\"row row-cols-3\">\r\n                    <div *ngFor=\"let visual of pipingVisual\" class=\"row\">\r\n                      <span class=\"col text-secondary\" >{{ visual.name }}</span>\r\n                      <span class=\"col\" >{{ visual.data || '-' }}</span>\r\n                    </div>\r\n                  </div>\r\n                </section>\r\n\r\n                <section class=\"mt-2\">\r\n                  <h6 class=\"fw-bolder text-primary mb-2 d-block\">Piping Calculation</h6>\r\n\r\n                  <div class=\"row row-cols-2 mt-3\">\r\n                    <div *ngFor=\"let spec of pipingThickness\" class=\"row mb-2\">\r\n                      <span class=\"col-8 text-secondary\" >{{ spec.name }}</span>\r\n                      <span class=\"col\" >{{ spec?.data || '-' }}</span>\r\n                    </div>\r\n                  </div>  \r\n                </section>\r\n\r\n                <section>\r\n                  <h6 class=\"fw-bolder text-primary mb-2 d-block\">Piping Damage Mechanism</h6>\r\n\r\n                  <ngx-mat-table  \r\n                      [tableHeader]=\"{ show : false }\"\r\n                      [tableFooter]=\"{ pageSize : 5 }\"\r\n                      [columnDetails]=\"damageMechanismDetails\"\r\n                      [tableData]=\"damageMechanismData\"\r\n                  ></ngx-mat-table>\r\n\r\n                </section>\r\n\r\n                <section>\r\n                  <h6 class=\"fw-bolder text-primary mb-2 d-block\">Inspection History</h6>\r\n\r\n                  <ngx-mat-table \r\n                    *ngIf=\"inspectionHistoryData.length\"\r\n                    [tableHeader]=\"{ show : false }\"\r\n                    [tableFooter]=\"{ show : false }\"\r\n                    [columnDetails]=\"inspectionHistoryDetails\"\r\n                    [tableData]=\"inspectionHistoryData\"\r\n                ></ngx-mat-table>\r\n                </section>\r\n\r\n                <section>\r\n                  <h6 class=\"fw-bolder text-primary mb-2 d-block\">Trend</h6>\r\n                  <ngx-dashboard-remaining-chart></ngx-dashboard-remaining-chart>\r\n                  <ngx-dashboard-thickness-chart></ngx-dashboard-thickness-chart>\r\n                </section>\r\n\r\n              </nb-card-body>\r\n            </nb-card>\r\n\r\n        </div>\r\n\r\n    </nb-card-body>\r\n</nb-card>","import { Component } from \"@angular/core\";\r\nimport { ChartsComponent } from \"../../../../component/chart/charts-component\";\r\n\r\n@Component({\r\n  selector: 'ngx-piping-circuit-chart',\r\n  template : '<canvas id=\"piping_circuit_chart\">'\r\n})\r\nexport class PipingCircuitChart extends ChartsComponent {\r\n    constructor() {\r\n        super()\r\n        this.defineOptions({\r\n          chartTitle : \"Chart Piping Circuit\", \r\n        })\r\n    }\r\n    \r\n    public chartType: any = 'bar'; \r\n    public yLabels: any[] = ['Pipe 101A', 'Pipe 102A', 'Pipe 103A', 'Pipe 104A', 'Pipe 105A'];\r\n    public legendPosition = 'bottom';\r\n    public showRightSclae: any = true;\r\n    public datasets: any = [\r\n        {\r\n            label: \"Reading (mm)\",\r\n            yAxisID: 'A',\r\n            data: ['467', '576', '572', '79', '92'],\r\n            backgroundColor: 'rgba(255,0,0,.5)',\r\n            borderColor: 'rgba(255,0,0,.5)',\r\n        },\r\n        {\r\n            label: \"T minimum (mm)\",\r\n            yAxisID: 'A',\r\n            data: ['542', '542', '536', '327', '17'],\r\n            backgroundColor: 'rgba(100,100,0,.5)',\r\n            borderColor: 'rgba(100,100,0,.5)',\r\n        },\r\n        {\r\n            label: \"Nominal Thickness (mm)\",\r\n            yAxisID: 'A',\r\n            data: ['504', '142', '336', '317', '100'],\r\n            backgroundColor: 'rgba(10,50,100,.5)',\r\n            borderColor: 'rgba(10,50,100,.5)',\r\n        },\r\n        {\r\n            label: \"Corrosion Rate (mm/Year)\",\r\n            yAxisID: 'B',\r\n            data: ['0.052', '0.042', '0.336', '0.527', '0.517'],\r\n            backgroundColor: 'rgba(90,190,90,.5)',\r\n            borderColor: 'rgba(90,190,90,.5)',\r\n        },\r\n    ]\r\n    \r\n    ngOnInit(): void {\r\n        this.generateChart('piping_circuit_chart')\r\n    }\r\n}","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { NgxQrcodeElementTypes, NgxQrcodeErrorCorrectionLevels } \r\n        from '@techiediaries/ngx-qrcode';\r\nimport { MatPaginator } from \"@angular/material/paginator\";\r\nimport { PipingCircuitService } from \"../../dashboard/piping-circuits/piping-circuits.service\";\r\nimport { environment } from \"../../../../environments/environment\";\r\nimport { ReportService } from \"../report-service\";\r\nimport { Variables } from \"../../../component/common-variable\";\r\n\r\n@Component({\r\n    selector: 'ngx-report-piping-circuit',\r\n    templateUrl: './report-piping-circuit.html',\r\n})\r\nexport class ReportPipingCircuit implements OnInit {\r\n    \r\n    elementType = NgxQrcodeElementTypes.URL;\r\n    correctionLevel = NgxQrcodeErrorCorrectionLevels.HIGH;\r\n    value = 'https://www.google.com/';\r\n\r\n    constructor (\r\n        private pipingCircuitService : PipingCircuitService,\r\n        private reportService : ReportService,\r\n        private variables : Variables\r\n    ) {}\r\n\r\n    ngOnInit(): void {\r\n        this.pipingCircuitService.getPipingCircuits()\r\n        .subscribe(({data} : any) => {\r\n            this.tablePosition = data\r\n            const firstData = data[0] \r\n            if(!firstData) return\r\n            this.showData(firstData)\r\n            this.getCircuitReport(firstData?.id)\r\n\r\n            this.dataSource = new MatTableDataSource(data);\r\n            this.dataSource.paginator = this.paginator;\r\n            this.dataSource.sort = this.sort;\r\n        })\r\n    }\r\n\r\n    getCircuitReport(id) {\r\n\r\n        this.reportService.getCircuitReport(id)\r\n        .subscribe(({data : {assets, circuit}} : any) => {\r\n\r\n            this.pipingVisual = this.pipingVisual.map(({name, props}) => ({\r\n                name, props,\r\n                data : this.switchToLevel(Math.round(this.visualConditionAvg(assets, props) / assets.length))  \r\n            }))\r\n\r\n            assets.filter(x => x !=null).forEach(({damage_mechanism, proposal} : any) => {\r\n                const inspectionProposal = this.inspectionHistoryData.find(i => i.id == proposal?.id)\r\n                if(!inspectionProposal) {\r\n\r\n                    const inspection_summary = proposal \r\n                    ? proposal.inspection_method?.map(({type, technique,method}) => ` ${type} ${method} ${technique}`)\r\n                    : []\r\n\r\n                    this.inspectionHistoryData.push({...proposal, inspection_summary})\r\n                }\r\n\r\n                const damage = this.variables.damageMechanismName\r\n                .map(({id ,piping_damage_mechanism} : any) => {\r\n                    const damage = damage_mechanism?.[id]\r\n                    if(damage) return {...damage, piping_damage_mechanism}\r\n                    return null\r\n                })  \r\n                .filter(item => item!=null)\r\n                .map(({piping_damage_mechanism}) => piping_damage_mechanism)\r\n\r\n                damage.forEach(element => {\r\n                    if(!this.activeDamageMechaninsm.includes(element)) \r\n                    this.activeDamageMechaninsm.push(element)\r\n                });\r\n\r\n            });\r\n\r\n            this.pipingThicknessData = assets.map(asset => {\r\n                const {\r\n                    min_required_thickness,\r\n                    reading,\r\n                    lt_cr,\r\n                    st_cr,\r\n                    remaining_life,\r\n                    half_life,\r\n                    retirement_date,\r\n                    next_tm_insp_date,\r\n                    next_ve_insp_date,\r\n                    mawp\r\n                } = this.variables.getThicknessCalculation({...asset.asset, cml : asset.cml})\r\n\r\n                return {\r\n                    ...asset.asset,\r\n                    min_required_thickness : min_required_thickness.toFixed(2),\r\n                    reading : reading.toFixed(2),\r\n                    lt_cr : lt_cr.toFixed(2),\r\n                    st_cr : st_cr.toFixed(2),\r\n                    remaining_life : remaining_life.toFixed(2),\r\n                    half_life : half_life.toFixed(2),\r\n                    retirement_date,\r\n                    next_tm_insp_date,\r\n                    next_ve_insp_date,\r\n                    mawp : mawp.toFixed(2)\r\n                }\r\n            })\r\n\r\n        })\r\n    }\r\n\r\n    visualConditionAvg(asset, props) {\r\n        return asset?.map(x => this.switchToPoint(x?.visual_condition?.[props]))\r\n        .reduce((x,y) =>  x + y , 0)\r\n    }\r\n\r\n    switchToPoint(c) {\r\n        if(c == 'Excellent')        return 5\r\n        if(c == 'Good')             return 4\r\n        if(c == 'Average')          return 3\r\n        if(c == 'Below Average')    return 2\r\n        if(c == 'Poor')             return 1  \r\n        return 0\r\n    }\r\n\r\n    switchToLevel(l) {\r\n        if(l == 5) return 'Excellent'\r\n        if(l == 4) return 'Good'\r\n        if(l == 3) return 'Average'\r\n        if(l == 2) return 'Below Average'\r\n        if(l == 1) return 'Poor'\r\n        return null\r\n    }\r\n    \r\n    filterByClass(val) {\r\n        let tableData = this.tablePosition.filter(item => item.class == val)\r\n        if(val == \"All\") tableData = this.tablePosition\r\n        this.dataSource = new MatTableDataSource(tableData)\r\n    }\r\n  \r\n    tablePosition:any[] = []\r\n    dataSource = new MatTableDataSource(this.tablePosition);\r\n    displayedColumns: string[] = ['piping_circuit_name' ];\r\n    resultsLength = 0;\r\n    selectionData;\r\n    @ViewChild(MatPaginator) paginator: MatPaginator;\r\n    @ViewChild(MatSort) sort: MatSort;\r\n\r\n    imageLink : any[] = []\r\n\r\n    pipingVisual = [\r\n        { name : 'Leaks', props : 'leaks_condition', data : null },\r\n        { name : 'Misalignment', props : 'misalignment_condition', data : null },\r\n        { name : 'Vibration', props : 'vibration_condition', data : null },\r\n        { name : 'Supports', props : 'supports_condition', data : null },\r\n        { name : 'Corrosion', props : 'corrosion_condition', data : null },\r\n        { name : 'Insulation', props : 'insulation_condition', data : null },\r\n    ]\r\n\r\n    activeDamageMechaninsm : any[] = [ ]\r\n    pipingThicknessData:any[]\r\n    columnDetails = [ \r\n        { type : 'text', prop : 'piping_id', head : 'Piping Id', width : '200px' },\r\n        { type : 'text', prop : 'reading', head : 'Reading (mm)', width : '200px' },\r\n        { type : 'text', prop : 'min_required_thickness', head : 'T min (mm)', width : '200px' },\r\n        { type : 'text', prop : 'lt_cr', head : 'LT CR (mm/Year)', width : '200px' },\r\n        { type : 'text', prop : 'st_cr', head : 'ST CR (mm/Year)', width : '200px' },\r\n        { type : 'text', prop : 'remaining_life', head : 'RL (Years)', width : '200px' },\r\n        { type : 'text', prop : 'half_life', head : 'HL (Years)', width : '200px' },\r\n        { type : 'text', prop : 'retirement_date', head : 'Retirement date', width : '200px' },\r\n        { type : 'text', prop : 'next_tm_insp_date', head : 'Next TM', width : '200px' },\r\n        { type : 'text', prop : 'next_ve_insp_date', head : 'Next VE', width : '200px' },\r\n        { type : 'text', prop : 'mawp', head : 'MAWP', width : '200px' },\r\n    ]\r\n\r\n    inspectionHistoryData : any[] = []\r\n    inspectionHistoryDetails = [\r\n        { type : 'text', prop : 'proposal_id', head : 'Inspection Id', width : '100px' },\r\n        { type : 'editable date', prop : 'inspection_date', head : 'Inspection Date', width : '200px' },\r\n        { type : 'text', prop : 'inspection_summary', head : 'Inspection Summary', width : '300px' },\r\n        { type : 'check', prop : 'caried_out', head : 'Caried Out', width : '50px' },\r\n    ]\r\n\r\n    showData(element) {\r\n        this.selectionData = element;\r\n        this.getCircuitReport(element.id)\r\n        this.imageLink = element?.images?.map(image => \r\n            ({src : environment.apiUrl + '/image/' + image, alt : 'Pipe Asssets' })\r\n        );  \r\n    }\r\n  \r\n    applyFilter(event: Event) {\r\n        const filterValue = (event.target as HTMLInputElement).value;\r\n        this.dataSource.filter = filterValue.trim().toLowerCase();\r\n  \r\n        if (this.dataSource.paginator) {\r\n          this.dataSource.paginator.firstPage();\r\n        }\r\n    }\r\n}","<nb-card>\r\n    <nb-card-header class=\"d-flex justify-content-between\">\r\n        <div>\r\n            <h5>Piping Circuit</h5>\r\n            <mat-form-field>\r\n                <mat-label>Hit Enter To Search</mat-label>\r\n                <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\r\n            </mat-form-field>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col\">Class</div>\r\n          <div class=\"col\">\r\n            <nb-select placeholder=\"Class\" class=\"mx-5\" status=\"primary\" size=\"small\">\r\n              <nb-option \r\n              (click)=\"filterByClass(option)\"\r\n              [value]=\"option\"\r\n              *ngFor=\"let option of ['All',1,2,3,4]\"\r\n              >{{ option }}</nb-option>\r\n            </nb-select>\r\n          </div>\r\n        </div>\r\n    </nb-card-header>\r\n    <nb-card-body class=\"row\">\r\n      \r\n        <div class=\"col-3\">\r\n            <table style=\"width: 100%; box-shadow: none;\" mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n                <!-- Position Column -->\r\n                <ng-container matColumnDef=\"piping_circuit_name\">\r\n                    <th mat-header-cell *matHeaderCellDef [ngStyle]=\" {'width' : '40px'} \"> Circuit Id </th>\r\n                    <td mat-cell *matCellDef=\"let element\" #nameCell\r\n                      style=\"cursor : pointer\"\r\n                      [ngStyle]=\"{'color' : selectionData.piping_circuit_name == element.piping_circuit_name ? '#0492c2' : 'black'}\"\r\n                      (mouseover)=\"nameCell.style.color = '#0492c2'\"\r\n                      (mouseout)=\"selectionData.piping_circuit_name == element.piping_circuit_name \r\n                      ? nameCell.style.color = '#0492c2' \r\n                      : nameCell.style.color = 'black'\"\r\n                      (click)=\"showData(element)\"\r\n                    > {{element.piping_circuit_name}} </td>\r\n                </ng-container>\r\n    \r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                </tr>\r\n            </table>\r\n\r\n                        \r\n            <mat-paginator \r\n                [length]=\"resultsLength\" \r\n                [pageSize]=\"30\" \r\n                aria-label=\"Select page of GitHub search results\">\r\n            </mat-paginator>\r\n        </div>\r\n\r\n\r\n        <div class=\"col-9\">\r\n          <h5 *ngIf=\"!selectionData\">Please Add Circuit Data.</h5>\r\n          <nb-card *ngIf=\"selectionData\">\r\n              <nb-card-body>\r\n                <section>\r\n                  <h6 class=\"fw-bolder text-primary mb-2 d-block\">{{ selectionData?.piping_circuit_name }}</h6>\r\n\r\n                  <div class=\"row\">\r\n\r\n                    <div class=\"col-8\">\r\n                      <div id=\"carouselExampleInterval\" class=\"carousel slide\" data-bs-ride=\"carousel\">\r\n                          <div class=\"carousel-inner\">\r\n                            <span *ngIf=\"!imageLink\">No Image Available</span>\r\n                            <div *ngFor=\"let image of imageLink; let i = index;\" class=\"carousel-item\" [ngClass]=\"i == 0 ? 'active' : ''\" data-bs-interval=\"10000\">\r\n                              <div class=\"overflow-hidden d-flex align-justify-center\" style=\"height: 15rem;\">\r\n                                  <img [src]=\"image.src\" class=\"w-100 img-fluid\" [alt]=\"image?.alt\">\r\n                              </div>\r\n                            </div>\r\n                          </div>\r\n                          <button class=\"carousel-control-prev\" type=\"button\" data-bs-target=\"#carouselExampleInterval\" data-bs-slide=\"prev\">\r\n                            <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\r\n                            <span class=\"visually-hidden\">Previous</span>\r\n                          </button>\r\n                          <button class=\"carousel-control-next\" type=\"button\" data-bs-target=\"#carouselExampleInterval\" data-bs-slide=\"next\">\r\n                            <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\r\n                            <span class=\"visually-hidden\">Next</span>\r\n                          </button>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div class=\"col-4 d-flex justify-content-center align-self-center\">\r\n                      <div>\r\n                        <div class=\"border rounded\">\r\n                          <ngx-qrcode\r\n                            [elementType]=\"elementType\"\r\n                            [errorCorrectionLevel]=\"correctionLevel\"\r\n                            [value]=\"value\"\r\n                          ></ngx-qrcode>\r\n                        </div>\r\n                        <button nbButton status=\"primary\" class=\"mt-2 w-100\" size=\"small\" outline>See Attachment</button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div class=\"row mt-3\">\r\n                    <span class=\"text-secondary col-4\">Date In Service</span>\r\n                    <span class=\"col-8\">{{ selectionData?.date_in_service }}</span>\r\n                    <span class=\"text-secondary col-4\">Class</span>\r\n                    <span class=\"col-8\">{{ selectionData?.class }}</span>\r\n                    <span class=\"text-secondary col-4\">Notes</span>\r\n                    <span class=\"col-8\">{{ selectionData?.notes }}</span>\r\n                  </div>\r\n\r\n                  <span class=\"text-secondary\">Recomendation</span>\r\n                  <p>{{ selectionData?.recomendation }}</p>\r\n                </section>\r\n\r\n                <section>\r\n                  <h6 class=\"fw-bolder text-primary mb-2 d-block\">Piping Visual</h6>\r\n\r\n                  <div class=\"row row-cols-3\">\r\n                    <div *ngFor=\"let visual of pipingVisual\" class=\"row\">\r\n                      <span class=\"col text-secondary\" >{{ visual.name }}</span>\r\n                      <span class=\"col\" >{{ visual.data }}</span>\r\n                    </div>\r\n                  </div>\r\n                </section>\r\n\r\n                <section class=\"mt-3\">\r\n                    <h6 class=\"fw-bolder text-primary mb-2 d-block\">Piping Thickness</h6>\r\n                    <ngx-mat-table \r\n                      *ngIf=\"pipingThicknessData\"\r\n                      [tableHeader]=\"{ show : false }\"\r\n                      [tableFooter]=\"{ pageSize : 5 }\"\r\n                      [columnDetails]=\"columnDetails\"\r\n                      [tableData]=\"pipingThicknessData\"\r\n                  ></ngx-mat-table>\r\n                </section>\r\n\r\n                <section>\r\n                  <h6 class=\"fw-bolder text-primary mb-2 d-block\">Piping Circuit Damage Mechanisms</h6>\r\n\r\n                  <span class=\"text-secondary\" >Active Damage Mechanism</span>\r\n                  <nb-list>\r\n                    <nb-list-item *ngFor=\"let mechanism of activeDamageMechaninsm\" style=\"height: 1rem;\">\r\n                      {{ mechanism }}\r\n                    </nb-list-item>\r\n                  </nb-list>\r\n\r\n                </section>\r\n\r\n                <section>\r\n                  <h6 class=\"fw-bolder text-primary mb-2 d-block\">Inspection History</h6>\r\n\r\n                  <ngx-mat-table \r\n                    *ngIf=\"inspectionHistoryData.length\"\r\n                    [tableHeader]=\"{ show : false }\"\r\n                    [tableFooter]=\"{ pageSize : 5 }\"\r\n                    [columnDetails]=\"inspectionHistoryDetails\"\r\n                    [tableData]=\"inspectionHistoryData\"\r\n                ></ngx-mat-table>\r\n                </section>\r\n\r\n                <section>\r\n                  <h6 class=\"fw-bolder text-primary mb-2 d-block\">Trend</h6>\r\n\r\n                  <ngx-piping-circuit-chart></ngx-piping-circuit-chart>\r\n                </section>\r\n\r\n              </nb-card-body>\r\n            </nb-card>\r\n        </div>\r\n    </nb-card-body>\r\n</nb-card>","import { Injectable } from \"@angular/core\";\r\nimport { environment } from \"../../../environments/environment\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n    providedIn : 'root'\r\n})\r\nexport class ReportService {\r\n    apiUrl = environment.apiUrl\r\n    constructor(private httpClient : HttpClient) { }\r\n\r\n    getAssetsReport(id) {\r\n        const url = this.apiUrl + '/asset_report/' + id;\r\n        return this.httpClient.get(url);\r\n    }\r\n\r\n    getCircuitReport(id) {\r\n        const url = this.apiUrl + '/circuit_report/' + id;\r\n        return this.httpClient.get(url);\r\n    }\r\n}","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-report',\r\n  template : '<router-outlet></router-outlet>',\r\n})\r\nexport class ReportComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","import { CommonModule } from \"@angular/common\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { ThemeModule } from \"../../@theme/theme.module\";\r\nimport { ReportComponent } from \"./report.component\";\r\nimport { ReportRoutingModule } from \"./repot.routing\";\r\nimport { NbButtonModule, NbCardModule, NbGlobalPhysicalPosition, NbInputModule, NbListModule, NbOptionModule, NbSelectModule, NbToastrModule } from \"@nebular/theme\";\r\nimport { DashboardThicknessChart } from \"./piping-assets/chart/thickness-chart.component\";\r\nimport { DashboardRemainingChart } from \"./piping-assets/chart/remaining-chart.component\";\r\nimport { ReportPipingAssets } from \"./piping-assets/report-piping-assets\";\r\nimport { MaterialTableModule } from \"../../component/mat-table/mat-table.module\";\r\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\r\nimport { MatTableModule } from \"@angular/material/table\";\r\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\r\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { NgxQRCodeModule } from \"@techiediaries/ngx-qrcode\";\r\nimport { ReportPipingCircuit } from \"./piping-circuits/report-piping-circuit\";\r\nimport { PipingCircuitChart } from \"./piping-circuits/chart/piping-circuit-trend-chart\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ThemeModule,\r\n        ReportRoutingModule,\r\n        NbCardModule,\r\n        NbOptionModule,\r\n        NbSelectModule,\r\n        NbInputModule,\r\n        NbListModule,\r\n        NbButtonModule,\r\n        MaterialTableModule,\r\n        MatSlideToggleModule,\r\n        MatTableModule, \r\n        MatCheckboxModule,\r\n        MatPaginatorModule,\r\n        MatFormFieldModule, \r\n        MatInputModule,\r\n        MatSelectModule,\r\n        NgxQRCodeModule,\r\n        NbToastrModule.forRoot({\r\n            destroyByClick\t: true,\r\n            duration : 3000,\r\n            position : NbGlobalPhysicalPosition.BOTTOM_RIGHT,\r\n            preventDuplicates : true,\r\n            limit : 3\r\n        }),\r\n    ],\r\n    declarations: [\r\n        ReportComponent,\r\n        DashboardThicknessChart,\r\n        DashboardRemainingChart,\r\n        ReportPipingAssets,\r\n        ReportPipingCircuit,\r\n        PipingCircuitChart\r\n    ],\r\n  })\r\nexport class ReportModule { }","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { ReportComponent } from \"./report.component\";\r\nimport { ReportPipingAssets } from \"./piping-assets/report-piping-assets\";\r\nimport { ReportPipingCircuit } from \"./piping-circuits/report-piping-circuit\";\r\n\r\nconst routes: Routes = [{\r\n    path: '',\r\n    component: ReportComponent,\r\n    children: [\r\n      {\r\n        path: 'piping-assets',\r\n        component : ReportPipingAssets\r\n      },\r\n      {\r\n        path: 'piping-circuits',\r\n        component : ReportPipingCircuit\r\n      },\r\n    ],\r\n}];\r\n  \r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class ReportRoutingModule { }"],"names":[],"sourceRoot":"webpack:///"}