{"version":3,"file":"default-src_app_component_mat-table_mat-table_module_ts-src_app_pages_dashboard_piping-assets-982835.js","mappings":"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WAAW,CAAC,QAAQ;QAChB,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,cAAc,CAAC;QACzC,OAAO,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,EAAE;YACzC,cAAc,EAAG,IAAI,EAAE,OAAO,EAAG,QAAQ;SAC1C,CAAC;IACN,CAAC;;sFAjCQ,mBAAmB;oHAAnB,mBAAmB,WAAnB,mBAAmB,mBAFhB,MAAM;;;;;;;;;;;;;;;;;;;;;;ACLa;AACuE;AAC9E;;AAEY;;AAExC;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,sDAAsD;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,wEAAwE;;AAEzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,eAAe,6CAAgB;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,eAAe,4CAAe;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,kCAAkC,+DAAwB,CAAC,oDAAgB;AACxI,qCAAqC,+DAAwB,GAAG,yGAAyG;AACzK,QAAQ,yDAAkB;AAC1B,MAAM;AACN;AACA,QAAQ,4DAAqB,MAAM,yDAAkB;AACrD,OAAO,YAAY,oPAAoP,aAAa,kEAA2B,2GAA2G;AAC1Z,QAAQ,uDAAgB;AACxB,MAAM;AACN,QAAQ,wDAAiB;AACzB,OAAO,wCAAwC;AAC/C;AACA,MAAM,MAAM,oDAAS;AACrB;AACA,iDAAU;AACV,IAAI,oDAAK;AACT;AACA,iDAAU;AACV,IAAI,oDAAK;AACT;AACA,iDAAU;AACV,IAAI,oDAAK;AACT;AACA,iDAAU;AACV,IAAI,oDAAK;AACT;AACA,iDAAU;AACV,IAAI,oDAAK;AACT;AACA,iDAAU;AACV,IAAI,oDAAK;AACT;AACA,iDAAU;AACV,IAAI,oDAAK;AACT;AACA,iDAAU;AACV,IAAI,oDAAK;AACT;AACA,iDAAU;AACV,IAAI,oDAAK;AACT;AACA,iDAAU;AACV,IAAI,oDAAK;AACT;AACA,iDAAU;AACV,IAAI,oDAAK;AACT;AACA,iDAAU;AACV,IAAI,wDAAS;AACb;;AAEA;AACA;AACA,6DAA6D;AAC7D,qCAAqC,8DAAuB,GAAG,uBAAuB;AACtF,qCAAqC,8DAAuB,GAAG;AAC/D,eAAe,mDAAmD,+DAAwB;AAC1F,cAAc,oDAAS;AACvB;AACA;AACA;AACA,iCAAiC,yEAA8B;AAC/D,aAAa;AACb,KAAK,iBAAiB,UAAU,MAAM,oDAAgB,EAAE,IAAI,IAAI;AAChE,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,gDAAK;AACvB,SAAS;AACT,kBAAkB,oDAAS;AAC3B;AACA,SAAS,GAAG,IAAI;AAChB,eAAe,mDAAmD,+DAAwB;AAC1F,cAAc,mDAAQ;AACtB;AACA;AACA;AACA,aAAa;AACb,KAAK,iBAAiB;AACtB,eAAe,mDAAmD,gEAAyB,oBAAoB,6DAA6D,IAAI;;AAEhL;AACA;AACA;;AAEA;AACA;AACA;;AAEmG;;;;;;;;;;;;;AC9NtF;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,gEAAgE;AAChE;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;AACA,KAAK;;AAEL;AACA;AACA;AACA;AACA;;;AAGA;AACA,IAAI,IAA6B;AACjC;AACA;;;;;;;;;;;;ACpKY;;AAEZ;AACA;AACA;;AAEA,sBAAsB,cAAc;AACpC;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;ACrDA,mBAAmB,mBAAO,CAAC,0BAAe;;AAE1C,eAAe,mBAAO,CAAC,0BAAe;AACtC,uBAAuB,mBAAO,CAAC,8BAAmB;AAClD,oBAAoB,mBAAO,CAAC,kCAAuB;;AAEnD;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA,cAAc;AACd,gBAAgB;AAChB,iBAAiB;;AAEjB;AACA,gBAAgB;AAChB;AACA,CAAC;;;;;;;;;;;AC3ED;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;ACNA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBAAsB,yDAAgC;;AAEtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B;AACA,uBAAuB;AACvB;;AAEA;AACA;AACA;AACA;;AAEA,kBAAkB,kBAAkB;AACpC;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,gFAAgF;AAChF;AACA;AACA;AACA,2BAA2B,uBAAuB;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B;AACA,oBAAoB;AACpB;AACA;AACA;;AAEA,kBAAkB,eAAe;AACjC,oBAAoB,eAAe;AACnC;AACA;AACA;AACA,8CAA8C;AAC9C;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;AClFA,aAAa,mBAAO,CAAC,mBAAQ;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,2BAA2B;AACzC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AC1DA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA,oBAAoB,YAAY;AAChC;AACA;AACA,GAAG;;AAEH;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;ACpCA;AACA;AACA;AACA,WAAW,QAAQ;AACnB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,SAAS;AACrB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB,WAAW,SAAS;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,UAAU;AACrB,WAAW,UAAU;AACrB,YAAY;AACZ;AACA;AACA;AACA;;AAEA;;;;;;;;;;;AChEA,mBAAmB,mBAAO,CAAC,wBAAa;AACxC,aAAa,mBAAO,CAAC,mBAAQ;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,wCAAwC,OAAO;AAC/C;AACA;AACA;;AAEA;;;;;;;;;;;AC7BA,gBAAgB,mBAAO,CAAC,qCAA0B;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,6BAA6B;AACzC;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,6BAA6B;AACzC;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACtIA,SAAS,KAAK;AACd,SAAS,KAAK;AACd,SAAS,KAAK;AACd,SAAS,KAAK;;AAEd;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,eAAe;AACf;AACA;AACA;;AAEA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;;;;;;;;;ACjDA,sBAAsB,yDAAgC;AACtD;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;ACrBA,cAAc,mBAAO,CAAC,oBAAS;;AAE/B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,6BAA6B;AACzC;AACA,sBAAsB;AACtB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ;AACR;AACA,CAAC;AACD;AACA,kBAAkB,SAAS;AAC3B;AACA;;AAEA;;AAEA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX,oBAAoB,SAAS;AAC7B;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA,WAAW;AACX;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY;AACZ;AACA,WAAW;AACX;;AAEA;AACA,WAAW;AACX;AACA;;;;;;;;;;;ACpEA,aAAa,mBAAO,CAAC,mBAAQ;AAC7B,cAAc,mBAAO,CAAC,oBAAS;;AAE/B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,cAAc,sBAAsB;AACpC;;AAEA;AACA;AACA;AACA;;AAEA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;;;;;;;;;;ACrDA;AACA;AACA,UAAU;AACV;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,iBAAiB;AAC7B;AACA,eAAe;AACf;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B,YAAY,4BAA4B;AACxC;AACA,YAAY;AACZ;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA,oBAAoB,YAAY;AAChC;AACA;;AAEA,sBAAsB,YAAY;AAClC;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,QAAQ;AACR;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;;AAEA,oBAAoB,gBAAgB;AACpC,sBAAsB,gBAAgB;AACtC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA,oBAAoB,YAAY;AAChC;AACA,sBAAsB,YAAY;AAClC;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;;AAEA,kBAAkB,kBAAkB;;AAEpC;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,oBAAoB;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,WAAW;AACvB,YAAY,WAAW;AACvB;AACA,iBAAiB;AACjB;;AAEA,oBAAoB,YAAY;AAChC,sBAAsB,YAAY;AAClC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,WAAW;AACvB,YAAY,QAAQ;AACpB;AACA,mBAAmB;AACnB;AACA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;ACzOA,qBAAqB,mBAAO,CAAC,4BAAiB;AAC9C,cAAc,mBAAO,CAAC,mBAAS;;AAE/B;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,eAAe;AACf;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,oBAAoB;AACpB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,UAAU;AACV;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,aAAa;AACb;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA,aAAa;AACb;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B;AACA,6BAA6B;AAC7B;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,MAAM;AACjB,aAAa,SAAS;AACtB;AACA,gBAAgB;AAChB;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,SAAS;AACtB,aAAa,SAAS;AACtB;AACA,eAAe;AACf;AACA;;AAEA;AACA;AACA;AACA,aAAa,QAAQ;AACrB,aAAa,eAAe;AAC5B;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,aAAa;AACzB,YAAY,aAAa;AACzB,YAAY,0BAA0B;AACtC;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;AACA;AACA;;;;;;;;;;;ACtKA,aAAa,mBAAO,CAAC,mBAAQ;;AAE7B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,cAAc,2BAA2B;AACzC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;;;;;;;;;;AC1CA,WAAW,mBAAO,CAAC,2BAAgB;;AAEnC;AACA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,YAAY;AACxB,YAAY,eAAe;AAC3B;AACA,WAAW;AACX;;AAEA,kBAAkB,eAAe;AACjC,oBAAoB,eAAe;AACnC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,YAAY;AACxB,YAAY,qBAAqB;AACjC;AACA,WAAW;AACX;;AAEA;AACA;;AAEA,oBAAoB,oBAAoB;AACxC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,eAAe;AAC3B;AACA,4BAA4B;AAC5B;AACA,kBAAkB,YAAY;AAC9B;AACA;;AAEA;AACA;;;;;;;;;;;AC7DA,cAAc,mBAAO,CAAC,oBAAS;AAC/B,gBAAgB,mBAAO,CAAC,qCAA0B;AAClD,kBAAkB,mBAAO,CAAC,yBAAc;AACxC,kBAAkB,mBAAO,CAAC,yBAAc;AACxC,yBAAyB,mBAAO,CAAC,gCAAqB;AACtD,sBAAsB,mBAAO,CAAC,6BAAkB;AAChD,oBAAoB,mBAAO,CAAC,2BAAgB;AAC5C,eAAe,mBAAO,CAAC,oCAAyB;AAChD,2BAA2B,mBAAO,CAAC,mCAAwB;AAC3D,gBAAgB,mBAAO,CAAC,sBAAW;AACnC,mBAAmB,mBAAO,CAAC,0BAAe;AAC1C,aAAa,mBAAO,CAAC,mBAAQ;AAC7B,iBAAiB,mBAAO,CAAC,uBAAY;;AAErC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,WAAW;AACvB,YAAY,WAAW;AACvB;AACA;AACA;AACA;;AAEA,kBAAkB,gBAAgB;AAClC;AACA;;AAEA,qBAAqB,QAAQ;AAC7B;;AAEA,uBAAuB,QAAQ;AAC/B;;AAEA;AACA;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,8CAA8C;AAC9C;AACA,YAAY,WAAW;AACvB;AACA;AACA;;AAEA,kBAAkB,cAAc;AAChC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,YAAY,WAAW;AACvB,YAAY,WAAW;AACvB;AACA;AACA;;AAEA,kBAAkB,gBAAgB;AAClC;AACA;;AAEA,qBAAqB,QAAQ;AAC7B,uBAAuB,QAAQ;AAC/B;AACA;AACA;AACA,UAAU;AACV;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,WAAW;AACvB,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,QAAQ;AAC1B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,WAAW;AACvB,YAAY,yBAAyB;AACrC,YAAY,WAAW;AACvB;AACA;AACA;AACA;AACA;;AAEA,cAAc,QAAQ;AACtB;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;;AAEA;AACA;AACA;AACA,MAAM;AACN;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,2BAA2B,SAAS;AACpC;;AAEA;AACA,sBAAsB,OAAO;AAC7B;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,UAAU;AACtB,YAAY,wBAAwB;AACpC,YAAY,UAAU;AACtB,YAAY,+BAA+B;AAC3C;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,iCAAiC;AAC9C;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,kBAAkB,mBAAmB;AACrC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,WAAW;AACvB,YAAY,WAAW;AACvB,YAAY,sBAAsB;AAClC,YAAY,gCAAgC;AAC5C;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,kBAAkB,mBAAmB;AACrC;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,iBAAiB;AAC/B,gBAAgB,mBAAmB;AACnC;AACA;AACA;AACA;AACA;;AAEA;AACA,cAAc,aAAa;AAC3B,gBAAgB,mBAAmB;AACnC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,qBAAqB;AACjC,YAAY,aAAa;AACzB,YAAY,6BAA6B;AACzC;AACA;AACA;;AAEA;AACA;AACA,IAAI;AACJ;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA,gEAAgE;AAChE;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,gBAAgB;AAC3B,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,QAAQ;AACnB,WAAW,UAAU;AACrB;AACA,cAAc;AACd;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;AC9eA,mBAAmB,mBAAO,CAAC,yBAAc;;AAEzC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,YAAY;AACxB,YAAY,iBAAiB;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;;;;;;;;;;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,aAAa;AACb,kBAAkB;AAClB,YAAY;AACZ,eAAe;AACf,oBAAoB;;AAEpB;AACA;AACA;;AAEA,iBAAiB;AACjB;AACA;;AAEA,mBAAmB;AACnB;AACA;;AAEA,wBAAwB;AACxB;AACA;;;;;;;;;;;AC9BA,aAAa,mBAAO,CAAC,mBAAQ;AAC7B,oBAAoB,mBAAO,CAAC,2BAAgB;AAC5C,yBAAyB,mBAAO,CAAC,gCAAqB;AACtD,iBAAiB,mBAAO,CAAC,wBAAa;AACtC,kBAAkB,mBAAO,CAAC,yBAAc;AACxC,cAAc,mBAAO,CAAC,mBAAS;AAC/B,cAAc,mBAAO,CAAC,oBAAS;AAC/B,iBAAiB,mBAAO,CAAC,uBAAY;;AAErC;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,YAAY;AACxB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,aAAa;AACzB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,MAAM;AAClB,YAAY,eAAe;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,YAAY;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,YAAY;AACxB;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;;AAEA;AACA;AACA;AACA,YAAY,6DAA6D;AACzE,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B;AACA;AACA;AACA,kBAAkB;AAClB;;AAEA,kBAAkB,kBAAkB;AACpC;AACA;;AAEA,oBAAoB,sBAAsB;AAC1C;AACA;;AAEA;AACA,qBAAqB;AACrB;;AAEA,sBAAsB,wBAAwB;AAC9C;;AAEA;AACA;AACA;AACA;;AAEA;AACA,UAAU;AACV;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,kBAAkB,wBAAwB;AAC1C;AACA;;AAEA,WAAW;AACX;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,eAAe;AAC3B,YAAY,yBAAyB;AACrC;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,OAAO;AACnB,YAAY,aAAa;AACzB;AACA,iBAAiB;AACjB;AACA;AACA;AACA,MAAM;AACN;AACA;;AAEA;AACA,GAAG;AACH;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B;AACA,kBAAkB;AAClB;;AAEA;AACA;AACA;;AAEA;AACA,kBAAkB,qBAAqB;AACvC;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,aAAa;AACzB;AACA,gBAAgB;AAChB;AACA;AACA;AACA;;;;;;;;;;;ACzUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B;AACA,qBAAqB;AACrB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B;AACA,+BAA+B;AAC/B;AACA;;AAEA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,aAAa;AACzB;AACA,mBAAmB;AACnB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,yBAAyB;AACzB;AACA;AACA;;AAEA;AACA;;AAEA,0BAA0B;AAC1B;AACA;;AAEA,cAAc;AACd;AACA;;;;;;;;;;;AC9DA;AACA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,iBAAiB;AAC7B;AACA,eAAe;AACf;AACA;;;;;;;;;;;ACRA,cAAc,mBAAO,CAAC,oBAAS;AAC/B,eAAe,mBAAO,CAAC,oCAAyB;AAChD,gBAAgB,mBAAO,CAAC,qCAA0B;AAClD,aAAa,mBAAO,CAAC,mBAAQ;AAC7B,qBAAqB,mBAAO,CAAC,4BAAiB;;AAE9C;AACA;AACA;;AAEA;AACA,+BAA+B,sBAAsB;AACrD;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA,+BAA+B,sBAAsB;AACrD;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,eAAe;AAC3B,YAAY,eAAe;AAC3B,YAAY,4BAA4B;AACxC;AACA,YAAY;AACZ;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,QAAQ;AACpB,YAAY,6BAA6B;AACzC;AACA,mBAAmB;AACnB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,YAAY,SAAS;AACrB,YAAY,QAAQ;AACpB,YAAY,MAAM;AAClB,YAAY,iCAAiC;AAC7C;AACA,6BAA6B;AAC7B;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,IAAI;AACJ;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,QAAQ;AACpB,YAAY,gBAAgB;AAC5B;AACA,sBAAsB;AACtB;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;AClKA,cAAc,mBAAO,CAAC,oBAAS;;AAE/B;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;;AAEA,cAAc;AACd;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA,uBAAuB;AACvB;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;;;;;;;;;;AC9DA,cAAc,mBAAO,CAAC,oBAAS;;AAE/B;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,iBAAiB;AACnC;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA;;AAEA;AACA;;AAEA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;AChFA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,gBAAgB;AAChB;AACA;AACA;AACA;;AAEA,qBAAqB;AACrB;AACA;AACA;;AAEA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB,gBAAgB;AAClC,oBAAoB,gBAAgB;AACpC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,gBAAgB,sCAAsC,kBAAkB;AACnF,0BAA0B;AAC1B;AACA;AACA;AACO;AACP;AACA,oBAAoB;AACpB;AACA;AACA;AACO;AACP;AACA,iDAAiD,OAAO;AACxD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,6DAA6D,cAAc;AAC3E;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA,6CAA6C,QAAQ;AACrD;AACA;AACA;AACO;AACP,oCAAoC;AACpC;AACA;AACO;AACP;AACA;AACA;AACO;AACP,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACO;AACP,cAAc,6BAA6B,0BAA0B,cAAc,qBAAqB;AACxG,iBAAiB,oDAAoD,qEAAqE,cAAc;AACxJ,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,mCAAmC,SAAS;AAC5C,mCAAmC,WAAW,UAAU;AACxD,0CAA0C,cAAc;AACxD;AACA,8GAA8G,OAAO;AACrH,iFAAiF,iBAAiB;AAClG,yDAAyD,gBAAgB,QAAQ;AACjF,+CAA+C,gBAAgB,gBAAgB;AAC/E;AACA,kCAAkC;AAClC;AACA;AACA,UAAU,YAAY,aAAa,SAAS,UAAU;AACtD,oCAAoC,SAAS;AAC7C;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,MAAM;AAC1B;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACO;AACP,6BAA6B,sBAAsB;AACnD;AACA;AACA;AACA;AACO;AACP,kDAAkD,QAAQ;AAC1D,yCAAyC,QAAQ;AACjD,yDAAyD,QAAQ;AACjE;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACO;AACP;AACA;AACA,iBAAiB,uFAAuF,cAAc;AACtH,uBAAuB,gCAAgC,qCAAqC,2CAA2C;AACvI,4BAA4B,MAAM,iBAAiB,YAAY;AAC/D,uBAAuB;AACvB,8BAA8B;AAC9B,6BAA6B;AAC7B,4BAA4B;AAC5B;AACA;AACO;AACP;AACA,iBAAiB,6CAA6C,UAAU,sDAAsD,cAAc;AAC5I,0BAA0B,6BAA6B,oBAAoB,gDAAgD,kBAAkB;AAC7I;AACA;AACO;AACP;AACA;AACA,2GAA2G,uFAAuF,cAAc;AAChN,uBAAuB,8BAA8B,gDAAgD,wDAAwD;AAC7J,6CAA6C,sCAAsC,UAAU,mBAAmB,IAAI;AACpH;AACA;AACO;AACP,iCAAiC,uCAAuC,YAAY,KAAK,OAAO;AAChG;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP,6CAA6C;AAC7C;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;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","sources":["./src/app/component/mat-table/mat-table.component.ts","./src/app/component/mat-table/mat-table.component.html","./src/app/component/mat-table/mat-table.module.ts","./src/app/pages/dashboard/piping-assets/piping-assets.service.ts","./node_modules/@techiediaries/ngx-qrcode/__ivy_ngcc__/fesm2015/techiediaries-ngx-qrcode.js","./node_modules/dijkstrajs/dijkstra.js","./node_modules/encode-utf8/index.js","./node_modules/qrcode/lib/browser.js","./node_modules/qrcode/lib/can-promise.js","./node_modules/qrcode/lib/core/alignment-pattern.js","./node_modules/qrcode/lib/core/alphanumeric-data.js","./node_modules/qrcode/lib/core/bit-buffer.js","./node_modules/qrcode/lib/core/bit-matrix.js","./node_modules/qrcode/lib/core/byte-data.js","./node_modules/qrcode/lib/core/error-correction-code.js","./node_modules/qrcode/lib/core/error-correction-level.js","./node_modules/qrcode/lib/core/finder-pattern.js","./node_modules/qrcode/lib/core/format-info.js","./node_modules/qrcode/lib/core/galois-field.js","./node_modules/qrcode/lib/core/kanji-data.js","./node_modules/qrcode/lib/core/mask-pattern.js","./node_modules/qrcode/lib/core/mode.js","./node_modules/qrcode/lib/core/numeric-data.js","./node_modules/qrcode/lib/core/polynomial.js","./node_modules/qrcode/lib/core/qrcode.js","./node_modules/qrcode/lib/core/reed-solomon-encoder.js","./node_modules/qrcode/lib/core/regex.js","./node_modules/qrcode/lib/core/segments.js","./node_modules/qrcode/lib/core/utils.js","./node_modules/qrcode/lib/core/version-check.js","./node_modules/qrcode/lib/core/version.js","./node_modules/qrcode/lib/renderer/canvas.js","./node_modules/qrcode/lib/renderer/svg-tag.js","./node_modules/qrcode/lib/renderer/utils.js","./node_modules/@techiediaries/ngx-qrcode/node_modules/tslib/tslib.es6.js","./node_modules/@angular/cdk/fesm2015/cdk.mjs","./node_modules/@angular/cdk/fesm2015/layout.mjs","./node_modules/@angular/cdk/fesm2015/text-field.mjs","./node_modules/@angular/material/fesm2015/button.mjs","./node_modules/@angular/material/fesm2015/checkbox.mjs","./node_modules/@angular/material/fesm2015/core.mjs","./node_modules/@angular/material/fesm2015/form-field.mjs","./node_modules/@angular/material/fesm2015/input.mjs","./node_modules/@angular/material/fesm2015/paginator.mjs","./node_modules/@angular/material/fesm2015/select.mjs","./node_modules/@angular/material/fesm2015/slide-toggle.mjs","./node_modules/@angular/material/fesm2015/sort.mjs","./node_modules/@angular/material/fesm2015/table.mjs","./node_modules/@angular/material/fesm2015/tooltip.mjs"],"sourcesContent":["import { Component, EventEmitter, Input, OnInit, Output, ViewChild } from '@angular/core';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'ngx-mat-table',\r\n  templateUrl: './mat-table.component.html',\r\n})\r\nexport class MatTableComponent implements OnInit {\r\n  constructor( \r\n    private router : Router\r\n  ) { }\r\n\r\n  ngOnInit(): void { \r\n    this.displayedColumns = this.columnDetails.map(column => column.prop);\r\n    this.dataSource = new MatTableDataSource(this.tableData)\r\n  }\r\n\r\n  ngAfterViewInit() { \r\n    this.dataSource.paginator = this.paginator;\r\n    this.dataSource.sort = this.sort;\r\n  }\r\n\r\n  @Input() tableHeader;\r\n  @Input() tableFooter = {\r\n    show : true,\r\n    pageSize : 30\r\n  }; \r\n  @Input() public tableData;\r\n  @Input() columnDetails\r\n  displayedColumns: string[]\r\n  \r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  @Output(\"onClickTable\") onClickTable: EventEmitter<any> = new EventEmitter();\r\n\r\n  resultsLength = 0;\r\n  selection = new SelectionModel(true,[], true);\r\n  public dataSource\r\n\r\n  checked = false;\r\n\r\n  regenerateTable(tableData) {\r\n    this.tableData = tableData\r\n    this.dataSource = new MatTableDataSource(tableData)\r\n    this.ngAfterViewInit()\r\n  }\r\n\r\n  toggle(checked: boolean) {\r\n    this.checked = checked;\r\n  }\r\n\r\n  navigateTo(nav, element) {\r\n    this.router.navigateByUrl(nav + element.id)\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n\r\n  selectTableRow() {\r\n    return this.selection.selected\r\n  }\r\n\r\n  getDataSource() {\r\n    return this.dataSource\r\n  }\r\n\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.data.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  toggleAllRows() {\r\n    if (this.isAllSelected()) {\r\n      this.selection.clear();\r\n      return;\r\n    }\r\n\r\n    this.selection.select(...this.dataSource.data);\r\n  }\r\n\r\n  /** The label for the checkbox on the passed row */\r\n  checkboxLabel(row): string {\r\n    if (!row) {\r\n      return `${this.isAllSelected() ? 'deselect' : 'select'} all`;\r\n    }\r\n    return `${this.selection.isSelected(row) ? 'deselect' : 'select'} row ${row.position + 1}`;\r\n  }\r\n}\r\n","<nb-card>\r\n    <nb-card-header class=\"d-flex justify-content-between\" *ngIf=\"tableHeader?.show ?? true\">\r\n        <div>\r\n            <h5>{{ tableHeader?.title }}</h5>\r\n            <mat-form-field>\r\n                <mat-label>Hit Enter To Search</mat-label>\r\n                <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\r\n            </mat-form-field>\r\n        </div>\r\n        <div *ngFor=\"let filter of tableHeader?.filter\" class=\"row\">\r\n            <div class=\"col\">{{ filter?.name }}</div>\r\n            <div class=\"col\"> \r\n                <nb-select [placeholder]=\"filter?.name\" size='small' class=\"mx-5\" status=\"primary\">\r\n                    <nb-option \r\n                    [value]=\"option\" \r\n                    *ngFor=\"let option of filter?.value\"\r\n                    (click)=\"onClickTable.emit({data : option, title : filter?.title})\"\r\n                    >{{ option }}</nb-option>\r\n                </nb-select>\r\n            </div>\r\n        </div>\r\n    </nb-card-header>\r\n    \r\n    <nb-card-body class=\"row\">\r\n        <table style=\"width: 100%; box-shadow: none;\" mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n\r\n            <ng-container *ngFor=\"let column of columnDetails\" [matColumnDef]=\"column.prop\">\r\n                <!-- Checkbox Column -->\r\n                <div *ngIf=\"column.type == 'select'\">\r\n                    <th mat-header-cell *matHeaderCellDef [ngStyle]=\" {'width' : '60px'} \">\r\n                        <mat-checkbox (change)=\"$event ? toggleAllRows() : null\"\r\n                                    [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                                    [indeterminate]=\"selection.hasValue() && !isAllSelected()\"\r\n                                    [aria-label]=\"checkboxLabel()\"\r\n                                    (click)=\"selectTableRow();\"\r\n                                    >\r\n                        </mat-checkbox>\r\n                    </th>\r\n                    <td mat-cell *matCellDef=\"let row\">\r\n                        <mat-checkbox \r\n                                    (click)=\"$event.stopPropagation(); selectTableRow();\" \r\n                                    (change)=\"$event ? selection.toggle(row) : null\"\r\n                                    [checked]=\"selection.isSelected(row)\"\r\n                                    [aria-label]=\"checkboxLabel(row)\">\r\n                        </mat-checkbox>\r\n                    </td>\r\n                </div>\r\n\r\n                <!-- Column type position -->\r\n                <div *ngIf=\"column.type == 'position'\">\r\n                    <th mat-header-cell *matHeaderCellDef [ngStyle]=\" {'width' : column.width} \"> {{ column?.head }} </th>\r\n                    <td mat-cell *matCellDef=\"let element; let index = index;\"> {{ index + 1 }} </td>\r\n                </div>\r\n\r\n                <!-- Column type text -->\r\n                <div *ngIf=\"column.type == 'text'\">\r\n                    <th mat-header-cell *matHeaderCellDef [ngStyle]=\" {'width' : column.width} \"> {{ column.head }} </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> \r\n                        {{element[column.prop] || '-'}}\r\n                    </td>\r\n                </div>\r\n\r\n                <!-- Column type Button -->\r\n                <div *ngIf=\"column.type == 'button'\">\r\n                    <th mat-header-cell *matHeaderCellDef [ngStyle]=\" {'width' : column.width} \"> {{ column.head }} </th>\r\n                    <td mat-cell *matCellDef=\"let element\">\r\n                        <div class=\"d-flex justify-content-between\">\r\n                            <button *ngFor=\"let button of column.button\" nbButton size=\"tiny\" status=\"basic\" (click)=\"onClickTable.emit({data : element, title : button.title})\">\r\n                                <nb-icon [icon]=\"button.icon\" [status]=\"button.status\"></nb-icon>\r\n                            </button>\r\n                        </div> \r\n                    </td>\r\n                </div>\r\n\r\n                <!-- Column type Check -->\r\n                <div *ngIf=\"column.type == 'check'\">\r\n                    <th mat-header-cell *matHeaderCellDef [ngStyle]=\" {'width' : column.width} \"> {{ column.head }} </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> \r\n                        <div class=\"d-flex justify-content-center w-50\">\r\n                            <nb-checkbox (checkedChange)=\"toggle($event)\" [checked]=\"element[column.prop]\" [(ngModel)]=\"element[column.prop]\"></nb-checkbox>\r\n                        </div>\r\n                    </td>\r\n                </div>\r\n\r\n                <!-- Column type Navigate to -->\r\n                <div *ngIf=\"column.type == 'navto'\">\r\n                    <th mat-header-cell *matHeaderCellDef [ngStyle]=\" {'width' : column.width} \"> {{ column.head }} </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> \r\n                        <span class=\"text-primary\" style=\"cursor: pointer;\" (click)=\"navigateTo(column.nav, element)\">{{element[column.prop] || '-'}}</span>\r\n                    </td>\r\n                </div>\r\n\r\n                <div *ngIf=\"column.type == 'drop-down'\">\r\n                    <th mat-header-cell *matHeaderCellDef [ngStyle]=\" {'width' : column.width} \"> {{ column.head }} </th>\r\n                    <td mat-cell *matCellDef=\"let element\"> \r\n                        <mat-form-field class=\"my-2\">\r\n                            <mat-label>{{ column.head }}</mat-label>\r\n                            <mat-select [(ngModel)]=\"element[column.prop]\">\r\n                            <mat-option [value]=\"item\" *ngFor=\"let item of column.value\">{{ item }}</mat-option>\r\n                            </mat-select>\r\n                        </mat-form-field>\r\n                    </td>\r\n                </div>\r\n\r\n                <div *ngIf=\"column.type == 'editable text'\">\r\n                    <th mat-header-cell *matHeaderCellDef [ngStyle]=\" {'width' : column.width} \"> {{ column.head }} </th>\r\n                    <td mat-cell *matCellDef=\"let element\" (dblclick)=\"onClickTable.emit({data : element, title : 'edit row'})\"> \r\n                        <!-- <span>{{element | json}}</span> -->\r\n                        <input type=\"text\" nbInput fieldSize=\"small\" class=\"m-1\" [(ngModel)]=\"element[column.prop]\" >\r\n                    </td>\r\n                </div>\r\n\r\n                <div *ngIf=\"column.type == 'editable date'\">\r\n                    <th mat-header-cell *matHeaderCellDef [ngStyle]=\" {'width' : column.width} \"> {{ column.head }} </th>\r\n                    <td mat-cell *matCellDef=\"let element\" (dblclick)=\"onClickTable.emit({data : element, title : 'edit row'})\"> \r\n                        <input type=\"text\" nbInput fieldSize=\"small\" [nbDatepicker]=\"datepicker\" class=\"m-1\" value=\"\" [(ngModel)]=\"element[column?.prop]\" >\r\n                        <nb-datepicker #datepicker></nb-datepicker>\r\n                    </td>\r\n                </div>\r\n\r\n            </ng-container>\r\n        \r\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\"\r\n                (click)=\"selection.toggle(row)\">\r\n            </tr>\r\n        </table>\r\n\r\n        <mat-paginator *ngIf=\"tableFooter?.show ?? true\"\r\n            [length]=\"resultsLength\" \r\n            [pageSize]=\"tableFooter.pageSize ?? 30\" \r\n            aria-label=\"Select page of GitHub search results\">\r\n        </mat-paginator>\r\n        \r\n    </nb-card-body>\r\n</nb-card>","import { CommonModule } from \"@angular/common\";\r\nimport { ThemeModule } from \"../../@theme/theme.module\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { MatTableComponent } from \"./mat-table.component\";\r\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { \r\n    NbAccordionModule, \r\n    NbButtonModule, \r\n    NbCardModule, \r\n    NbCheckboxModule, \r\n    NbDatepickerModule, \r\n    NbIconModule, \r\n    NbInputModule, \r\n    NbListModule, \r\n    NbOptionModule, \r\n    NbSelectModule \r\n} from \"@nebular/theme\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { NgxQRCodeModule } from \"@techiediaries/ngx-qrcode\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ThemeModule,\r\n        MatSlideToggleModule,\r\n        MatTableModule, \r\n        MatCheckboxModule,\r\n        MatPaginatorModule,\r\n        MatFormFieldModule, \r\n        MatInputModule,\r\n        MatSelectModule,\r\n        NbOptionModule,\r\n        NbSelectModule,\r\n        NbCardModule,\r\n        NbAccordionModule,\r\n        NbInputModule,\r\n        NbIconModule,\r\n        FormsModule,\r\n        NgxQRCodeModule,\r\n        NbSelectModule,\r\n        NbOptionModule,\r\n        NbListModule,\r\n        NbCheckboxModule,\r\n        NbButtonModule,\r\n        NbDatepickerModule\r\n    ],\r\n    declarations: [\r\n        MatTableComponent,\r\n    ],\r\n    exports : [\r\n        MatTableComponent\r\n    ]\r\n  })\r\nexport class MaterialTableModule { }","import { HttpClient, HttpHeaders } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"../../../../environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n}) \r\nexport class PipingAssetsService {\r\n\r\n    constructor(private httpClient : HttpClient) { }\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    getPipingAssets() {\r\n        const url = this.apiUrl + \"/assets\";\r\n        const httpHeaders = new HttpHeaders();\r\n        httpHeaders.append(\"enctype\",\"multipart/form-data\");\r\n        httpHeaders.append(\"Accept\",\"*/*\");\r\n        return this.httpClient.get(url);\r\n    }\r\n\r\n    addPipingAssets(data) {\r\n        const url = this.apiUrl + \"/assets\";\r\n        return this.httpClient.post(url, data);\r\n    }\r\n\r\n    updatePipingAssets(data) {  \r\n        const url = this.apiUrl + \"/assets/\" + data.id;\r\n        return this.httpClient.put(url, data);\r\n    }\r\n\r\n    deletePipingAssets(id) {\r\n        const url = this.apiUrl + \"/assets/\" + id;\r\n        return this.httpClient.delete(url);\r\n    }\r\n\r\n    uploadImage(postBody){\r\n        const url = this.apiUrl + \"/file/upload\";\r\n        return this.httpClient.post(url, postBody, {\r\n          reportProgress : true, observe : 'events'\r\n        })\r\n    }\r\n}","import { __decorate } from 'tslib';\nimport { Renderer2, Input, ViewChild, Component, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport QRCode from 'qrcode';\n\nimport * as ɵngcc0 from '@angular/core';\n\nconst _c0 = [\"qrcElement\"];\nvar NgxQrcodeElementTypes;\n(function (NgxQrcodeElementTypes) {\n    NgxQrcodeElementTypes[\"URL\"] = \"url\";\n    NgxQrcodeElementTypes[\"IMG\"] = \"img\";\n    NgxQrcodeElementTypes[\"CANVAS\"] = \"canvas\";\n})(NgxQrcodeElementTypes || (NgxQrcodeElementTypes = {}));\nvar NgxQrcodeErrorCorrectionLevels;\n(function (NgxQrcodeErrorCorrectionLevels) {\n    NgxQrcodeErrorCorrectionLevels[\"LOW\"] = \"L\";\n    NgxQrcodeErrorCorrectionLevels[\"MEDIUM\"] = \"M\";\n    NgxQrcodeErrorCorrectionLevels[\"QUARTILE\"] = \"Q\";\n    NgxQrcodeErrorCorrectionLevels[\"HIGH\"] = \"H\";\n})(NgxQrcodeErrorCorrectionLevels || (NgxQrcodeErrorCorrectionLevels = {}));\n\nconst DEFAULT_VALUES = {\n    elementType: NgxQrcodeElementTypes.URL,\n    cssClass: 'qrcode',\n    value: 'https://www.techiediaries.com',\n    version: '',\n    errorCorrectionLevel: NgxQrcodeErrorCorrectionLevels.MEDIUM,\n    margin: 4,\n    scale: 4,\n    width: 10,\n    colorDark: '#000',\n    colorLight: '#FFF'\n};\n\nlet QrcodeComponent = class QrcodeComponent {\n    constructor(renderer) {\n        this.renderer = renderer;\n        this.elementType = DEFAULT_VALUES.elementType;\n        this.cssClass = DEFAULT_VALUES.cssClass;\n        this.value = DEFAULT_VALUES.value;\n        this.version = DEFAULT_VALUES.version;\n        this.errorCorrectionLevel = DEFAULT_VALUES.errorCorrectionLevel;\n        this.margin = DEFAULT_VALUES.margin;\n        this.scale = DEFAULT_VALUES.scale;\n        this.width = DEFAULT_VALUES.width;\n        this.colorDark = DEFAULT_VALUES.colorDark;\n        this.colorLight = DEFAULT_VALUES.colorLight;\n    }\n    ngOnChanges() {\n        this.createQRCode();\n    }\n    createQRCode() {\n        if (!this.value) {\n            return;\n        }\n        let element;\n        switch (this.elementType) {\n            case NgxQrcodeElementTypes.CANVAS:\n                element = this.renderer.createElement('canvas');\n                this.toCanvas(element).then(() => {\n                    this.renderElement(element);\n                }).catch(e => {\n                    this.removeElementChildren();\n                    console.error(e);\n                });\n                break;\n            default:\n                element = this.renderer.createElement('img');\n                this.toDataURL().then((src) => {\n                    element.setAttribute('src', src);\n                    if (this.alt) {\n                        element.setAttribute('alt', this.alt);\n                    }\n                    this.renderElement(element);\n                }).catch(e => {\n                    this.removeElementChildren();\n                    console.error(e);\n                });\n        }\n    }\n    toDataURL() {\n        return QRCode.toDataURL(this.value, {\n            version: this.version,\n            errorCorrectionLevel: this.errorCorrectionLevel,\n            margin: this.margin,\n            scale: this.scale,\n            width: this.width,\n            color: {\n                dark: this.colorDark,\n                light: this.colorLight\n            }\n        });\n    }\n    toCanvas(canvas) {\n        return QRCode.toCanvas(canvas, this.value, {\n            version: this.version,\n            errorCorrectionLevel: this.errorCorrectionLevel,\n            margin: this.margin,\n            scale: this.scale,\n            width: this.width,\n            color: {\n                dark: this.colorDark,\n                light: this.colorLight\n            }\n        });\n    }\n    renderElement(element) {\n        this.removeElementChildren();\n        this.renderer.appendChild(this.qrcElement.nativeElement, element);\n    }\n    removeElementChildren() {\n        for (const node of this.qrcElement.nativeElement.childNodes) {\n            this.renderer.removeChild(this.qrcElement.nativeElement, node);\n        }\n    }\n};\nQrcodeComponent.ɵfac = function QrcodeComponent_Factory(t) { return new (t || QrcodeComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };\nQrcodeComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: QrcodeComponent, selectors: [[\"ngx-qrcode\"]], viewQuery: function QrcodeComponent_Query(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(_c0, 5);\n    } if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.qrcElement = _t.first);\n    } }, inputs: { elementType: \"elementType\", cssClass: \"cssClass\", value: \"value\", version: \"version\", errorCorrectionLevel: \"errorCorrectionLevel\", margin: \"margin\", scale: \"scale\", width: \"width\", colorDark: \"colorDark\", colorLight: \"colorLight\", alt: \"alt\" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 2, consts: [[\"qrcElement\", \"\"]], template: function QrcodeComponent_Template(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵelement(0, \"div\", null, 0);\n    } if (rf & 2) {\n        ɵngcc0.ɵɵclassMap(ctx.cssClass);\n    } }, encapsulation: 2, changeDetection: 0 });\nQrcodeComponent.ctorParameters = () => [\n    { type: Renderer2 }\n];\n__decorate([\n    Input()\n], QrcodeComponent.prototype, \"elementType\", void 0);\n__decorate([\n    Input()\n], QrcodeComponent.prototype, \"cssClass\", void 0);\n__decorate([\n    Input()\n], QrcodeComponent.prototype, \"alt\", void 0);\n__decorate([\n    Input()\n], QrcodeComponent.prototype, \"value\", void 0);\n__decorate([\n    Input()\n], QrcodeComponent.prototype, \"version\", void 0);\n__decorate([\n    Input()\n], QrcodeComponent.prototype, \"errorCorrectionLevel\", void 0);\n__decorate([\n    Input()\n], QrcodeComponent.prototype, \"margin\", void 0);\n__decorate([\n    Input()\n], QrcodeComponent.prototype, \"scale\", void 0);\n__decorate([\n    Input()\n], QrcodeComponent.prototype, \"width\", void 0);\n__decorate([\n    Input()\n], QrcodeComponent.prototype, \"colorDark\", void 0);\n__decorate([\n    Input()\n], QrcodeComponent.prototype, \"colorLight\", void 0);\n__decorate([\n    ViewChild('qrcElement')\n], QrcodeComponent.prototype, \"qrcElement\", void 0);\n\nlet NgxQRCodeModule = class NgxQRCodeModule {\n};\nNgxQRCodeModule.ɵfac = function NgxQRCodeModule_Factory(t) { return new (t || NgxQRCodeModule)(); };\nNgxQRCodeModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgxQRCodeModule });\nNgxQRCodeModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(QrcodeComponent, [{\n        type: Component,\n        args: [{\n                selector: 'ngx-qrcode',\n                template: `<div #qrcElement [class]=\"cssClass\"></div>`,\n                changeDetection: ChangeDetectionStrategy.OnPush\n            }]\n    }], function () { return [{ type: ɵngcc0.Renderer2 }]; }, { elementType: [{\n            type: Input\n        }], cssClass: [{\n            type: Input\n        }], value: [{\n            type: Input\n        }], version: [{\n            type: Input\n        }], errorCorrectionLevel: [{\n            type: Input\n        }], margin: [{\n            type: Input\n        }], scale: [{\n            type: Input\n        }], width: [{\n            type: Input\n        }], colorDark: [{\n            type: Input\n        }], colorLight: [{\n            type: Input\n        }], alt: [{\n            type: Input\n        }], qrcElement: [{\n            type: ViewChild,\n            args: ['qrcElement']\n        }] }); })();\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgxQRCodeModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [QrcodeComponent],\n                exports: [QrcodeComponent]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgxQRCodeModule, { declarations: [QrcodeComponent], exports: [QrcodeComponent] }); })();\n\n/*\n * Public API Surface of ngx-qrcode\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgxQRCodeModule, NgxQrcodeElementTypes, NgxQrcodeErrorCorrectionLevels, QrcodeComponent };\n\n","'use strict';\n\n/******************************************************************************\n * Created 2008-08-19.\n *\n * Dijkstra path-finding functions. Adapted from the Dijkstar Python project.\n *\n * Copyright (C) 2008\n *   Wyatt Baldwin <self@wyattbaldwin.com>\n *   All rights reserved\n *\n * Licensed under the MIT license.\n *\n *   http://www.opensource.org/licenses/mit-license.php\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n *****************************************************************************/\nvar dijkstra = {\n  single_source_shortest_paths: function(graph, s, d) {\n    // Predecessor map for each node that has been encountered.\n    // node ID => predecessor node ID\n    var predecessors = {};\n\n    // Costs of shortest paths from s to all nodes encountered.\n    // node ID => cost\n    var costs = {};\n    costs[s] = 0;\n\n    // Costs of shortest paths from s to all nodes encountered; differs from\n    // `costs` in that it provides easy access to the node that currently has\n    // the known shortest path from s.\n    // XXX: Do we actually need both `costs` and `open`?\n    var open = dijkstra.PriorityQueue.make();\n    open.push(s, 0);\n\n    var closest,\n        u, v,\n        cost_of_s_to_u,\n        adjacent_nodes,\n        cost_of_e,\n        cost_of_s_to_u_plus_cost_of_e,\n        cost_of_s_to_v,\n        first_visit;\n    while (!open.empty()) {\n      // In the nodes remaining in graph that have a known cost from s,\n      // find the node, u, that currently has the shortest path from s.\n      closest = open.pop();\n      u = closest.value;\n      cost_of_s_to_u = closest.cost;\n\n      // Get nodes adjacent to u...\n      adjacent_nodes = graph[u] || {};\n\n      // ...and explore the edges that connect u to those nodes, updating\n      // the cost of the shortest paths to any or all of those nodes as\n      // necessary. v is the node across the current edge from u.\n      for (v in adjacent_nodes) {\n        if (adjacent_nodes.hasOwnProperty(v)) {\n          // Get the cost of the edge running from u to v.\n          cost_of_e = adjacent_nodes[v];\n\n          // Cost of s to u plus the cost of u to v across e--this is *a*\n          // cost from s to v that may or may not be less than the current\n          // known cost to v.\n          cost_of_s_to_u_plus_cost_of_e = cost_of_s_to_u + cost_of_e;\n\n          // If we haven't visited v yet OR if the current known cost from s to\n          // v is greater than the new cost we just found (cost of s to u plus\n          // cost of u to v across e), update v's cost in the cost list and\n          // update v's predecessor in the predecessor list (it's now u).\n          cost_of_s_to_v = costs[v];\n          first_visit = (typeof costs[v] === 'undefined');\n          if (first_visit || cost_of_s_to_v > cost_of_s_to_u_plus_cost_of_e) {\n            costs[v] = cost_of_s_to_u_plus_cost_of_e;\n            open.push(v, cost_of_s_to_u_plus_cost_of_e);\n            predecessors[v] = u;\n          }\n        }\n      }\n    }\n\n    if (typeof d !== 'undefined' && typeof costs[d] === 'undefined') {\n      var msg = ['Could not find a path from ', s, ' to ', d, '.'].join('');\n      throw new Error(msg);\n    }\n\n    return predecessors;\n  },\n\n  extract_shortest_path_from_predecessor_list: function(predecessors, d) {\n    var nodes = [];\n    var u = d;\n    var predecessor;\n    while (u) {\n      nodes.push(u);\n      predecessor = predecessors[u];\n      u = predecessors[u];\n    }\n    nodes.reverse();\n    return nodes;\n  },\n\n  find_path: function(graph, s, d) {\n    var predecessors = dijkstra.single_source_shortest_paths(graph, s, d);\n    return dijkstra.extract_shortest_path_from_predecessor_list(\n      predecessors, d);\n  },\n\n  /**\n   * A very naive priority queue implementation.\n   */\n  PriorityQueue: {\n    make: function (opts) {\n      var T = dijkstra.PriorityQueue,\n          t = {},\n          key;\n      opts = opts || {};\n      for (key in T) {\n        if (T.hasOwnProperty(key)) {\n          t[key] = T[key];\n        }\n      }\n      t.queue = [];\n      t.sorter = opts.sorter || T.default_sorter;\n      return t;\n    },\n\n    default_sorter: function (a, b) {\n      return a.cost - b.cost;\n    },\n\n    /**\n     * Add a new item to the queue and ensure the highest priority element\n     * is at the front of the queue.\n     */\n    push: function (value, cost) {\n      var item = {value: value, cost: cost};\n      this.queue.push(item);\n      this.queue.sort(this.sorter);\n    },\n\n    /**\n     * Return the highest priority element in the queue.\n     */\n    pop: function () {\n      return this.queue.shift();\n    },\n\n    empty: function () {\n      return this.queue.length === 0;\n    }\n  }\n};\n\n\n// node.js module exports\nif (typeof module !== 'undefined') {\n  module.exports = dijkstra;\n}\n","'use strict'\n\nmodule.exports = function encodeUtf8 (input) {\n  var result = []\n  var size = input.length\n\n  for (var index = 0; index < size; index++) {\n    var point = input.charCodeAt(index)\n\n    if (point >= 0xD800 && point <= 0xDBFF && size > index + 1) {\n      var second = input.charCodeAt(index + 1)\n\n      if (second >= 0xDC00 && second <= 0xDFFF) {\n        // https://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n        point = (point - 0xD800) * 0x400 + second - 0xDC00 + 0x10000\n        index += 1\n      }\n    }\n\n    // US-ASCII\n    if (point < 0x80) {\n      result.push(point)\n      continue\n    }\n\n    // 2-byte UTF-8\n    if (point < 0x800) {\n      result.push((point >> 6) | 192)\n      result.push((point & 63) | 128)\n      continue\n    }\n\n    // 3-byte UTF-8\n    if (point < 0xD800 || (point >= 0xE000 && point < 0x10000)) {\n      result.push((point >> 12) | 224)\n      result.push(((point >> 6) & 63) | 128)\n      result.push((point & 63) | 128)\n      continue\n    }\n\n    // 4-byte UTF-8\n    if (point >= 0x10000 && point <= 0x10FFFF) {\n      result.push((point >> 18) | 240)\n      result.push(((point >> 12) & 63) | 128)\n      result.push(((point >> 6) & 63) | 128)\n      result.push((point & 63) | 128)\n      continue\n    }\n\n    // Invalid character\n    result.push(0xEF, 0xBF, 0xBD)\n  }\n\n  return new Uint8Array(result).buffer\n}\n","\nconst canPromise = require('./can-promise')\n\nconst QRCode = require('./core/qrcode')\nconst CanvasRenderer = require('./renderer/canvas')\nconst SvgRenderer = require('./renderer/svg-tag.js')\n\nfunction renderCanvas (renderFunc, canvas, text, opts, cb) {\n  const args = [].slice.call(arguments, 1)\n  const argsNum = args.length\n  const isLastArgCb = typeof args[argsNum - 1] === 'function'\n\n  if (!isLastArgCb && !canPromise()) {\n    throw new Error('Callback required as last argument')\n  }\n\n  if (isLastArgCb) {\n    if (argsNum < 2) {\n      throw new Error('Too few arguments provided')\n    }\n\n    if (argsNum === 2) {\n      cb = text\n      text = canvas\n      canvas = opts = undefined\n    } else if (argsNum === 3) {\n      if (canvas.getContext && typeof cb === 'undefined') {\n        cb = opts\n        opts = undefined\n      } else {\n        cb = opts\n        opts = text\n        text = canvas\n        canvas = undefined\n      }\n    }\n  } else {\n    if (argsNum < 1) {\n      throw new Error('Too few arguments provided')\n    }\n\n    if (argsNum === 1) {\n      text = canvas\n      canvas = opts = undefined\n    } else if (argsNum === 2 && !canvas.getContext) {\n      opts = text\n      text = canvas\n      canvas = undefined\n    }\n\n    return new Promise(function (resolve, reject) {\n      try {\n        const data = QRCode.create(text, opts)\n        resolve(renderFunc(data, canvas, opts))\n      } catch (e) {\n        reject(e)\n      }\n    })\n  }\n\n  try {\n    const data = QRCode.create(text, opts)\n    cb(null, renderFunc(data, canvas, opts))\n  } catch (e) {\n    cb(e)\n  }\n}\n\nexports.create = QRCode.create\nexports.toCanvas = renderCanvas.bind(null, CanvasRenderer.render)\nexports.toDataURL = renderCanvas.bind(null, CanvasRenderer.renderToDataURL)\n\n// only svg for now.\nexports.toString = renderCanvas.bind(null, function (data, _, opts) {\n  return SvgRenderer.render(data, opts)\n})\n","// can-promise has a crash in some versions of react native that dont have\n// standard global objects\n// https://github.com/soldair/node-qrcode/issues/157\n\nmodule.exports = function () {\n  return typeof Promise === 'function' && Promise.prototype && Promise.prototype.then\n}\n","/**\n * Alignment pattern are fixed reference pattern in defined positions\n * in a matrix symbology, which enables the decode software to re-synchronise\n * the coordinate mapping of the image modules in the event of moderate amounts\n * of distortion of the image.\n *\n * Alignment patterns are present only in QR Code symbols of version 2 or larger\n * and their number depends on the symbol version.\n */\n\nconst getSymbolSize = require('./utils').getSymbolSize\n\n/**\n * Calculate the row/column coordinates of the center module of each alignment pattern\n * for the specified QR Code version.\n *\n * The alignment patterns are positioned symmetrically on either side of the diagonal\n * running from the top left corner of the symbol to the bottom right corner.\n *\n * Since positions are simmetrical only half of the coordinates are returned.\n * Each item of the array will represent in turn the x and y coordinate.\n * @see {@link getPositions}\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinate\n */\nexports.getRowColCoords = function getRowColCoords (version) {\n  if (version === 1) return []\n\n  const posCount = Math.floor(version / 7) + 2\n  const size = getSymbolSize(version)\n  const intervals = size === 145 ? 26 : Math.ceil((size - 13) / (2 * posCount - 2)) * 2\n  const positions = [size - 7] // Last coord is always (size - 7)\n\n  for (let i = 1; i < posCount - 1; i++) {\n    positions[i] = positions[i - 1] - intervals\n  }\n\n  positions.push(6) // First coord is always 6\n\n  return positions.reverse()\n}\n\n/**\n * Returns an array containing the positions of each alignment pattern.\n * Each array's element represent the center point of the pattern as (x, y) coordinates\n *\n * Coordinates are calculated expanding the row/column coordinates returned by {@link getRowColCoords}\n * and filtering out the items that overlaps with finder pattern\n *\n * @example\n * For a Version 7 symbol {@link getRowColCoords} returns values 6, 22 and 38.\n * The alignment patterns, therefore, are to be centered on (row, column)\n * positions (6,22), (22,6), (22,22), (22,38), (38,22), (38,38).\n * Note that the coordinates (6,6), (6,38), (38,6) are occupied by finder patterns\n * and are not therefore used for alignment patterns.\n *\n * let pos = getPositions(7)\n * // [[6,22], [22,6], [22,22], [22,38], [38,22], [38,38]]\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nexports.getPositions = function getPositions (version) {\n  const coords = []\n  const pos = exports.getRowColCoords(version)\n  const posLength = pos.length\n\n  for (let i = 0; i < posLength; i++) {\n    for (let j = 0; j < posLength; j++) {\n      // Skip if position is occupied by finder patterns\n      if ((i === 0 && j === 0) || // top-left\n          (i === 0 && j === posLength - 1) || // bottom-left\n          (i === posLength - 1 && j === 0)) { // top-right\n        continue\n      }\n\n      coords.push([pos[i], pos[j]])\n    }\n  }\n\n  return coords\n}\n","const Mode = require('./mode')\n\n/**\n * Array of characters available in alphanumeric mode\n *\n * As per QR Code specification, to each character\n * is assigned a value from 0 to 44 which in this case coincides\n * with the array index\n *\n * @type {Array}\n */\nconst ALPHA_NUM_CHARS = [\n  '0', '1', '2', '3', '4', '5', '6', '7', '8', '9',\n  'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I', 'J', 'K', 'L', 'M',\n  'N', 'O', 'P', 'Q', 'R', 'S', 'T', 'U', 'V', 'W', 'X', 'Y', 'Z',\n  ' ', '$', '%', '*', '+', '-', '.', '/', ':'\n]\n\nfunction AlphanumericData (data) {\n  this.mode = Mode.ALPHANUMERIC\n  this.data = data\n}\n\nAlphanumericData.getBitsLength = function getBitsLength (length) {\n  return 11 * Math.floor(length / 2) + 6 * (length % 2)\n}\n\nAlphanumericData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nAlphanumericData.prototype.getBitsLength = function getBitsLength () {\n  return AlphanumericData.getBitsLength(this.data.length)\n}\n\nAlphanumericData.prototype.write = function write (bitBuffer) {\n  let i\n\n  // Input data characters are divided into groups of two characters\n  // and encoded as 11-bit binary codes.\n  for (i = 0; i + 2 <= this.data.length; i += 2) {\n    // The character value of the first character is multiplied by 45\n    let value = ALPHA_NUM_CHARS.indexOf(this.data[i]) * 45\n\n    // The character value of the second digit is added to the product\n    value += ALPHA_NUM_CHARS.indexOf(this.data[i + 1])\n\n    // The sum is then stored as 11-bit binary number\n    bitBuffer.put(value, 11)\n  }\n\n  // If the number of input data characters is not a multiple of two,\n  // the character value of the final character is encoded as a 6-bit binary number.\n  if (this.data.length % 2) {\n    bitBuffer.put(ALPHA_NUM_CHARS.indexOf(this.data[i]), 6)\n  }\n}\n\nmodule.exports = AlphanumericData\n","function BitBuffer () {\n  this.buffer = []\n  this.length = 0\n}\n\nBitBuffer.prototype = {\n\n  get: function (index) {\n    const bufIndex = Math.floor(index / 8)\n    return ((this.buffer[bufIndex] >>> (7 - index % 8)) & 1) === 1\n  },\n\n  put: function (num, length) {\n    for (let i = 0; i < length; i++) {\n      this.putBit(((num >>> (length - i - 1)) & 1) === 1)\n    }\n  },\n\n  getLengthInBits: function () {\n    return this.length\n  },\n\n  putBit: function (bit) {\n    const bufIndex = Math.floor(this.length / 8)\n    if (this.buffer.length <= bufIndex) {\n      this.buffer.push(0)\n    }\n\n    if (bit) {\n      this.buffer[bufIndex] |= (0x80 >>> (this.length % 8))\n    }\n\n    this.length++\n  }\n}\n\nmodule.exports = BitBuffer\n","/**\n * Helper class to handle QR Code symbol modules\n *\n * @param {Number} size Symbol size\n */\nfunction BitMatrix (size) {\n  if (!size || size < 1) {\n    throw new Error('BitMatrix size must be defined and greater than 0')\n  }\n\n  this.size = size\n  this.data = new Uint8Array(size * size)\n  this.reservedBit = new Uint8Array(size * size)\n}\n\n/**\n * Set bit value at specified location\n * If reserved flag is set, this bit will be ignored during masking process\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n * @param {Boolean} reserved\n */\nBitMatrix.prototype.set = function (row, col, value, reserved) {\n  const index = row * this.size + col\n  this.data[index] = value\n  if (reserved) this.reservedBit[index] = true\n}\n\n/**\n * Returns bit value at specified location\n *\n * @param  {Number}  row\n * @param  {Number}  col\n * @return {Boolean}\n */\nBitMatrix.prototype.get = function (row, col) {\n  return this.data[row * this.size + col]\n}\n\n/**\n * Applies xor operator at specified location\n * (used during masking process)\n *\n * @param {Number}  row\n * @param {Number}  col\n * @param {Boolean} value\n */\nBitMatrix.prototype.xor = function (row, col, value) {\n  this.data[row * this.size + col] ^= value\n}\n\n/**\n * Check if bit at specified location is reserved\n *\n * @param {Number}   row\n * @param {Number}   col\n * @return {Boolean}\n */\nBitMatrix.prototype.isReserved = function (row, col) {\n  return this.reservedBit[row * this.size + col]\n}\n\nmodule.exports = BitMatrix\n","const encodeUtf8 = require('encode-utf8')\nconst Mode = require('./mode')\n\nfunction ByteData (data) {\n  this.mode = Mode.BYTE\n  if (typeof (data) === 'string') {\n    data = encodeUtf8(data)\n  }\n  this.data = new Uint8Array(data)\n}\n\nByteData.getBitsLength = function getBitsLength (length) {\n  return length * 8\n}\n\nByteData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nByteData.prototype.getBitsLength = function getBitsLength () {\n  return ByteData.getBitsLength(this.data.length)\n}\n\nByteData.prototype.write = function (bitBuffer) {\n  for (let i = 0, l = this.data.length; i < l; i++) {\n    bitBuffer.put(this.data[i], 8)\n  }\n}\n\nmodule.exports = ByteData\n","const ECLevel = require('./error-correction-level')\r\n\r\nconst EC_BLOCKS_TABLE = [\r\n// L  M  Q  H\r\n  1, 1, 1, 1,\r\n  1, 1, 1, 1,\r\n  1, 1, 2, 2,\r\n  1, 2, 2, 4,\r\n  1, 2, 4, 4,\r\n  2, 4, 4, 4,\r\n  2, 4, 6, 5,\r\n  2, 4, 6, 6,\r\n  2, 5, 8, 8,\r\n  4, 5, 8, 8,\r\n  4, 5, 8, 11,\r\n  4, 8, 10, 11,\r\n  4, 9, 12, 16,\r\n  4, 9, 16, 16,\r\n  6, 10, 12, 18,\r\n  6, 10, 17, 16,\r\n  6, 11, 16, 19,\r\n  6, 13, 18, 21,\r\n  7, 14, 21, 25,\r\n  8, 16, 20, 25,\r\n  8, 17, 23, 25,\r\n  9, 17, 23, 34,\r\n  9, 18, 25, 30,\r\n  10, 20, 27, 32,\r\n  12, 21, 29, 35,\r\n  12, 23, 34, 37,\r\n  12, 25, 34, 40,\r\n  13, 26, 35, 42,\r\n  14, 28, 38, 45,\r\n  15, 29, 40, 48,\r\n  16, 31, 43, 51,\r\n  17, 33, 45, 54,\r\n  18, 35, 48, 57,\r\n  19, 37, 51, 60,\r\n  19, 38, 53, 63,\r\n  20, 40, 56, 66,\r\n  21, 43, 59, 70,\r\n  22, 45, 62, 74,\r\n  24, 47, 65, 77,\r\n  25, 49, 68, 81\r\n]\r\n\r\nconst EC_CODEWORDS_TABLE = [\r\n// L  M  Q  H\r\n  7, 10, 13, 17,\r\n  10, 16, 22, 28,\r\n  15, 26, 36, 44,\r\n  20, 36, 52, 64,\r\n  26, 48, 72, 88,\r\n  36, 64, 96, 112,\r\n  40, 72, 108, 130,\r\n  48, 88, 132, 156,\r\n  60, 110, 160, 192,\r\n  72, 130, 192, 224,\r\n  80, 150, 224, 264,\r\n  96, 176, 260, 308,\r\n  104, 198, 288, 352,\r\n  120, 216, 320, 384,\r\n  132, 240, 360, 432,\r\n  144, 280, 408, 480,\r\n  168, 308, 448, 532,\r\n  180, 338, 504, 588,\r\n  196, 364, 546, 650,\r\n  224, 416, 600, 700,\r\n  224, 442, 644, 750,\r\n  252, 476, 690, 816,\r\n  270, 504, 750, 900,\r\n  300, 560, 810, 960,\r\n  312, 588, 870, 1050,\r\n  336, 644, 952, 1110,\r\n  360, 700, 1020, 1200,\r\n  390, 728, 1050, 1260,\r\n  420, 784, 1140, 1350,\r\n  450, 812, 1200, 1440,\r\n  480, 868, 1290, 1530,\r\n  510, 924, 1350, 1620,\r\n  540, 980, 1440, 1710,\r\n  570, 1036, 1530, 1800,\r\n  570, 1064, 1590, 1890,\r\n  600, 1120, 1680, 1980,\r\n  630, 1204, 1770, 2100,\r\n  660, 1260, 1860, 2220,\r\n  720, 1316, 1950, 2310,\r\n  750, 1372, 2040, 2430\r\n]\r\n\r\n/**\r\n * Returns the number of error correction block that the QR Code should contain\r\n * for the specified version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction blocks\r\n */\r\nexports.getBlocksCount = function getBlocksCount (version, errorCorrectionLevel) {\r\n  switch (errorCorrectionLevel) {\r\n    case ECLevel.L:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 0]\r\n    case ECLevel.M:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 1]\r\n    case ECLevel.Q:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 2]\r\n    case ECLevel.H:\r\n      return EC_BLOCKS_TABLE[(version - 1) * 4 + 3]\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n\r\n/**\r\n * Returns the number of error correction codewords to use for the specified\r\n * version and error correction level.\r\n *\r\n * @param  {Number} version              QR Code version\r\n * @param  {Number} errorCorrectionLevel Error correction level\r\n * @return {Number}                      Number of error correction codewords\r\n */\r\nexports.getTotalCodewordsCount = function getTotalCodewordsCount (version, errorCorrectionLevel) {\r\n  switch (errorCorrectionLevel) {\r\n    case ECLevel.L:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 0]\r\n    case ECLevel.M:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 1]\r\n    case ECLevel.Q:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 2]\r\n    case ECLevel.H:\r\n      return EC_CODEWORDS_TABLE[(version - 1) * 4 + 3]\r\n    default:\r\n      return undefined\r\n  }\r\n}\r\n","exports.L = { bit: 1 }\nexports.M = { bit: 0 }\nexports.Q = { bit: 3 }\nexports.H = { bit: 2 }\n\nfunction fromString (string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string')\n  }\n\n  const lcStr = string.toLowerCase()\n\n  switch (lcStr) {\n    case 'l':\n    case 'low':\n      return exports.L\n\n    case 'm':\n    case 'medium':\n      return exports.M\n\n    case 'q':\n    case 'quartile':\n      return exports.Q\n\n    case 'h':\n    case 'high':\n      return exports.H\n\n    default:\n      throw new Error('Unknown EC Level: ' + string)\n  }\n}\n\nexports.isValid = function isValid (level) {\n  return level && typeof level.bit !== 'undefined' &&\n    level.bit >= 0 && level.bit < 4\n}\n\nexports.from = function from (value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value\n  }\n\n  try {\n    return fromString(value)\n  } catch (e) {\n    return defaultValue\n  }\n}\n","const getSymbolSize = require('./utils').getSymbolSize\nconst FINDER_PATTERN_SIZE = 7\n\n/**\n * Returns an array containing the positions of each finder pattern.\n * Each array's element represent the top-left point of the pattern as (x, y) coordinates\n *\n * @param  {Number} version QR Code version\n * @return {Array}          Array of coordinates\n */\nexports.getPositions = function getPositions (version) {\n  const size = getSymbolSize(version)\n\n  return [\n    // top-left\n    [0, 0],\n    // top-right\n    [size - FINDER_PATTERN_SIZE, 0],\n    // bottom-left\n    [0, size - FINDER_PATTERN_SIZE]\n  ]\n}\n","const Utils = require('./utils')\n\nconst G15 = (1 << 10) | (1 << 8) | (1 << 5) | (1 << 4) | (1 << 2) | (1 << 1) | (1 << 0)\nconst G15_MASK = (1 << 14) | (1 << 12) | (1 << 10) | (1 << 4) | (1 << 1)\nconst G15_BCH = Utils.getBCHDigit(G15)\n\n/**\n * Returns format information with relative error correction bits\n *\n * The format information is a 15-bit sequence containing 5 data bits,\n * with 10 error correction bits calculated using the (15, 5) BCH code.\n *\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Number} mask                 Mask pattern\n * @return {Number}                      Encoded format information bits\n */\nexports.getEncodedBits = function getEncodedBits (errorCorrectionLevel, mask) {\n  const data = ((errorCorrectionLevel.bit << 3) | mask)\n  let d = data << 10\n\n  while (Utils.getBCHDigit(d) - G15_BCH >= 0) {\n    d ^= (G15 << (Utils.getBCHDigit(d) - G15_BCH))\n  }\n\n  // xor final data with mask pattern in order to ensure that\n  // no combination of Error Correction Level and data mask pattern\n  // will result in an all-zero data string\n  return ((data << 10) | d) ^ G15_MASK\n}\n","const EXP_TABLE = new Uint8Array(512)\nconst LOG_TABLE = new Uint8Array(256)\n/**\n * Precompute the log and anti-log tables for faster computation later\n *\n * For each possible value in the galois field 2^8, we will pre-compute\n * the logarithm and anti-logarithm (exponential) of this value\n *\n * ref {@link https://en.wikiversity.org/wiki/Reed%E2%80%93Solomon_codes_for_coders#Introduction_to_mathematical_fields}\n */\n;(function initTables () {\n  let x = 1\n  for (let i = 0; i < 255; i++) {\n    EXP_TABLE[i] = x\n    LOG_TABLE[x] = i\n\n    x <<= 1 // multiply by 2\n\n    // The QR code specification says to use byte-wise modulo 100011101 arithmetic.\n    // This means that when a number is 256 or larger, it should be XORed with 0x11D.\n    if (x & 0x100) { // similar to x >= 256, but a lot faster (because 0x100 == 256)\n      x ^= 0x11D\n    }\n  }\n\n  // Optimization: double the size of the anti-log table so that we don't need to mod 255 to\n  // stay inside the bounds (because we will mainly use this table for the multiplication of\n  // two GF numbers, no more).\n  // @see {@link mul}\n  for (let i = 255; i < 512; i++) {\n    EXP_TABLE[i] = EXP_TABLE[i - 255]\n  }\n}())\n\n/**\n * Returns log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nexports.log = function log (n) {\n  if (n < 1) throw new Error('log(' + n + ')')\n  return LOG_TABLE[n]\n}\n\n/**\n * Returns anti-log value of n inside Galois Field\n *\n * @param  {Number} n\n * @return {Number}\n */\nexports.exp = function exp (n) {\n  return EXP_TABLE[n]\n}\n\n/**\n * Multiplies two number inside Galois Field\n *\n * @param  {Number} x\n * @param  {Number} y\n * @return {Number}\n */\nexports.mul = function mul (x, y) {\n  if (x === 0 || y === 0) return 0\n\n  // should be EXP_TABLE[(LOG_TABLE[x] + LOG_TABLE[y]) % 255] if EXP_TABLE wasn't oversized\n  // @see {@link initTables}\n  return EXP_TABLE[LOG_TABLE[x] + LOG_TABLE[y]]\n}\n","const Mode = require('./mode')\nconst Utils = require('./utils')\n\nfunction KanjiData (data) {\n  this.mode = Mode.KANJI\n  this.data = data\n}\n\nKanjiData.getBitsLength = function getBitsLength (length) {\n  return length * 13\n}\n\nKanjiData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nKanjiData.prototype.getBitsLength = function getBitsLength () {\n  return KanjiData.getBitsLength(this.data.length)\n}\n\nKanjiData.prototype.write = function (bitBuffer) {\n  let i\n\n  // In the Shift JIS system, Kanji characters are represented by a two byte combination.\n  // These byte values are shifted from the JIS X 0208 values.\n  // JIS X 0208 gives details of the shift coded representation.\n  for (i = 0; i < this.data.length; i++) {\n    let value = Utils.toSJIS(this.data[i])\n\n    // For characters with Shift JIS values from 0x8140 to 0x9FFC:\n    if (value >= 0x8140 && value <= 0x9FFC) {\n      // Subtract 0x8140 from Shift JIS value\n      value -= 0x8140\n\n    // For characters with Shift JIS values from 0xE040 to 0xEBBF\n    } else if (value >= 0xE040 && value <= 0xEBBF) {\n      // Subtract 0xC140 from Shift JIS value\n      value -= 0xC140\n    } else {\n      throw new Error(\n        'Invalid SJIS character: ' + this.data[i] + '\\n' +\n        'Make sure your charset is UTF-8')\n    }\n\n    // Multiply most significant byte of result by 0xC0\n    // and add least significant byte to product\n    value = (((value >>> 8) & 0xff) * 0xC0) + (value & 0xff)\n\n    // Convert result to a 13-bit binary string\n    bitBuffer.put(value, 13)\n  }\n}\n\nmodule.exports = KanjiData\n","/**\n * Data mask pattern reference\n * @type {Object}\n */\nexports.Patterns = {\n  PATTERN000: 0,\n  PATTERN001: 1,\n  PATTERN010: 2,\n  PATTERN011: 3,\n  PATTERN100: 4,\n  PATTERN101: 5,\n  PATTERN110: 6,\n  PATTERN111: 7\n}\n\n/**\n * Weighted penalty scores for the undesirable features\n * @type {Object}\n */\nconst PenaltyScores = {\n  N1: 3,\n  N2: 3,\n  N3: 40,\n  N4: 10\n}\n\n/**\n * Check if mask pattern value is valid\n *\n * @param  {Number}  mask    Mask pattern\n * @return {Boolean}         true if valid, false otherwise\n */\nexports.isValid = function isValid (mask) {\n  return mask != null && mask !== '' && !isNaN(mask) && mask >= 0 && mask <= 7\n}\n\n/**\n * Returns mask pattern from a value.\n * If value is not valid, returns undefined\n *\n * @param  {Number|String} value        Mask pattern value\n * @return {Number}                     Valid mask pattern or undefined\n */\nexports.from = function from (value) {\n  return exports.isValid(value) ? parseInt(value, 10) : undefined\n}\n\n/**\n* Find adjacent modules in row/column with the same color\n* and assign a penalty value.\n*\n* Points: N1 + i\n* i is the amount by which the number of adjacent modules of the same color exceeds 5\n*/\nexports.getPenaltyN1 = function getPenaltyN1 (data) {\n  const size = data.size\n  let points = 0\n  let sameCountCol = 0\n  let sameCountRow = 0\n  let lastCol = null\n  let lastRow = null\n\n  for (let row = 0; row < size; row++) {\n    sameCountCol = sameCountRow = 0\n    lastCol = lastRow = null\n\n    for (let col = 0; col < size; col++) {\n      let module = data.get(row, col)\n      if (module === lastCol) {\n        sameCountCol++\n      } else {\n        if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)\n        lastCol = module\n        sameCountCol = 1\n      }\n\n      module = data.get(col, row)\n      if (module === lastRow) {\n        sameCountRow++\n      } else {\n        if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)\n        lastRow = module\n        sameCountRow = 1\n      }\n    }\n\n    if (sameCountCol >= 5) points += PenaltyScores.N1 + (sameCountCol - 5)\n    if (sameCountRow >= 5) points += PenaltyScores.N1 + (sameCountRow - 5)\n  }\n\n  return points\n}\n\n/**\n * Find 2x2 blocks with the same color and assign a penalty value\n *\n * Points: N2 * (m - 1) * (n - 1)\n */\nexports.getPenaltyN2 = function getPenaltyN2 (data) {\n  const size = data.size\n  let points = 0\n\n  for (let row = 0; row < size - 1; row++) {\n    for (let col = 0; col < size - 1; col++) {\n      const last = data.get(row, col) +\n        data.get(row, col + 1) +\n        data.get(row + 1, col) +\n        data.get(row + 1, col + 1)\n\n      if (last === 4 || last === 0) points++\n    }\n  }\n\n  return points * PenaltyScores.N2\n}\n\n/**\n * Find 1:1:3:1:1 ratio (dark:light:dark:light:dark) pattern in row/column,\n * preceded or followed by light area 4 modules wide\n *\n * Points: N3 * number of pattern found\n */\nexports.getPenaltyN3 = function getPenaltyN3 (data) {\n  const size = data.size\n  let points = 0\n  let bitsCol = 0\n  let bitsRow = 0\n\n  for (let row = 0; row < size; row++) {\n    bitsCol = bitsRow = 0\n    for (let col = 0; col < size; col++) {\n      bitsCol = ((bitsCol << 1) & 0x7FF) | data.get(row, col)\n      if (col >= 10 && (bitsCol === 0x5D0 || bitsCol === 0x05D)) points++\n\n      bitsRow = ((bitsRow << 1) & 0x7FF) | data.get(col, row)\n      if (col >= 10 && (bitsRow === 0x5D0 || bitsRow === 0x05D)) points++\n    }\n  }\n\n  return points * PenaltyScores.N3\n}\n\n/**\n * Calculate proportion of dark modules in entire symbol\n *\n * Points: N4 * k\n *\n * k is the rating of the deviation of the proportion of dark modules\n * in the symbol from 50% in steps of 5%\n */\nexports.getPenaltyN4 = function getPenaltyN4 (data) {\n  let darkCount = 0\n  const modulesCount = data.data.length\n\n  for (let i = 0; i < modulesCount; i++) darkCount += data.data[i]\n\n  const k = Math.abs(Math.ceil((darkCount * 100 / modulesCount) / 5) - 10)\n\n  return k * PenaltyScores.N4\n}\n\n/**\n * Return mask value at given position\n *\n * @param  {Number} maskPattern Pattern reference value\n * @param  {Number} i           Row\n * @param  {Number} j           Column\n * @return {Boolean}            Mask value\n */\nfunction getMaskAt (maskPattern, i, j) {\n  switch (maskPattern) {\n    case exports.Patterns.PATTERN000: return (i + j) % 2 === 0\n    case exports.Patterns.PATTERN001: return i % 2 === 0\n    case exports.Patterns.PATTERN010: return j % 3 === 0\n    case exports.Patterns.PATTERN011: return (i + j) % 3 === 0\n    case exports.Patterns.PATTERN100: return (Math.floor(i / 2) + Math.floor(j / 3)) % 2 === 0\n    case exports.Patterns.PATTERN101: return (i * j) % 2 + (i * j) % 3 === 0\n    case exports.Patterns.PATTERN110: return ((i * j) % 2 + (i * j) % 3) % 2 === 0\n    case exports.Patterns.PATTERN111: return ((i * j) % 3 + (i + j) % 2) % 2 === 0\n\n    default: throw new Error('bad maskPattern:' + maskPattern)\n  }\n}\n\n/**\n * Apply a mask pattern to a BitMatrix\n *\n * @param  {Number}    pattern Pattern reference number\n * @param  {BitMatrix} data    BitMatrix data\n */\nexports.applyMask = function applyMask (pattern, data) {\n  const size = data.size\n\n  for (let col = 0; col < size; col++) {\n    for (let row = 0; row < size; row++) {\n      if (data.isReserved(row, col)) continue\n      data.xor(row, col, getMaskAt(pattern, row, col))\n    }\n  }\n}\n\n/**\n * Returns the best mask pattern for data\n *\n * @param  {BitMatrix} data\n * @return {Number} Mask pattern reference number\n */\nexports.getBestMask = function getBestMask (data, setupFormatFunc) {\n  const numPatterns = Object.keys(exports.Patterns).length\n  let bestPattern = 0\n  let lowerPenalty = Infinity\n\n  for (let p = 0; p < numPatterns; p++) {\n    setupFormatFunc(p)\n    exports.applyMask(p, data)\n\n    // Calculate penalty\n    const penalty =\n      exports.getPenaltyN1(data) +\n      exports.getPenaltyN2(data) +\n      exports.getPenaltyN3(data) +\n      exports.getPenaltyN4(data)\n\n    // Undo previously applied mask\n    exports.applyMask(p, data)\n\n    if (penalty < lowerPenalty) {\n      lowerPenalty = penalty\n      bestPattern = p\n    }\n  }\n\n  return bestPattern\n}\n","const VersionCheck = require('./version-check')\nconst Regex = require('./regex')\n\n/**\n * Numeric mode encodes data from the decimal digit set (0 - 9)\n * (byte values 30HEX to 39HEX).\n * Normally, 3 data characters are represented by 10 bits.\n *\n * @type {Object}\n */\nexports.NUMERIC = {\n  id: 'Numeric',\n  bit: 1 << 0,\n  ccBits: [10, 12, 14]\n}\n\n/**\n * Alphanumeric mode encodes data from a set of 45 characters,\n * i.e. 10 numeric digits (0 - 9),\n *      26 alphabetic characters (A - Z),\n *   and 9 symbols (SP, $, %, *, +, -, ., /, :).\n * Normally, two input characters are represented by 11 bits.\n *\n * @type {Object}\n */\nexports.ALPHANUMERIC = {\n  id: 'Alphanumeric',\n  bit: 1 << 1,\n  ccBits: [9, 11, 13]\n}\n\n/**\n * In byte mode, data is encoded at 8 bits per character.\n *\n * @type {Object}\n */\nexports.BYTE = {\n  id: 'Byte',\n  bit: 1 << 2,\n  ccBits: [8, 16, 16]\n}\n\n/**\n * The Kanji mode efficiently encodes Kanji characters in accordance with\n * the Shift JIS system based on JIS X 0208.\n * The Shift JIS values are shifted from the JIS X 0208 values.\n * JIS X 0208 gives details of the shift coded representation.\n * Each two-byte character value is compacted to a 13-bit binary codeword.\n *\n * @type {Object}\n */\nexports.KANJI = {\n  id: 'Kanji',\n  bit: 1 << 3,\n  ccBits: [8, 10, 12]\n}\n\n/**\n * Mixed mode will contain a sequences of data in a combination of any of\n * the modes described above\n *\n * @type {Object}\n */\nexports.MIXED = {\n  bit: -1\n}\n\n/**\n * Returns the number of bits needed to store the data length\n * according to QR Code specifications.\n *\n * @param  {Mode}   mode    Data mode\n * @param  {Number} version QR Code version\n * @return {Number}         Number of bits\n */\nexports.getCharCountIndicator = function getCharCountIndicator (mode, version) {\n  if (!mode.ccBits) throw new Error('Invalid mode: ' + mode)\n\n  if (!VersionCheck.isValid(version)) {\n    throw new Error('Invalid version: ' + version)\n  }\n\n  if (version >= 1 && version < 10) return mode.ccBits[0]\n  else if (version < 27) return mode.ccBits[1]\n  return mode.ccBits[2]\n}\n\n/**\n * Returns the most efficient mode to store the specified data\n *\n * @param  {String} dataStr Input data string\n * @return {Mode}           Best mode\n */\nexports.getBestModeForData = function getBestModeForData (dataStr) {\n  if (Regex.testNumeric(dataStr)) return exports.NUMERIC\n  else if (Regex.testAlphanumeric(dataStr)) return exports.ALPHANUMERIC\n  else if (Regex.testKanji(dataStr)) return exports.KANJI\n  else return exports.BYTE\n}\n\n/**\n * Return mode name as string\n *\n * @param {Mode} mode Mode object\n * @returns {String}  Mode name\n */\nexports.toString = function toString (mode) {\n  if (mode && mode.id) return mode.id\n  throw new Error('Invalid mode')\n}\n\n/**\n * Check if input param is a valid mode object\n *\n * @param   {Mode}    mode Mode object\n * @returns {Boolean} True if valid mode, false otherwise\n */\nexports.isValid = function isValid (mode) {\n  return mode && mode.bit && mode.ccBits\n}\n\n/**\n * Get mode object from its name\n *\n * @param   {String} string Mode name\n * @returns {Mode}          Mode object\n */\nfunction fromString (string) {\n  if (typeof string !== 'string') {\n    throw new Error('Param is not a string')\n  }\n\n  const lcStr = string.toLowerCase()\n\n  switch (lcStr) {\n    case 'numeric':\n      return exports.NUMERIC\n    case 'alphanumeric':\n      return exports.ALPHANUMERIC\n    case 'kanji':\n      return exports.KANJI\n    case 'byte':\n      return exports.BYTE\n    default:\n      throw new Error('Unknown mode: ' + string)\n  }\n}\n\n/**\n * Returns mode from a value.\n * If value is not a valid mode, returns defaultValue\n *\n * @param  {Mode|String} value        Encoding mode\n * @param  {Mode}        defaultValue Fallback value\n * @return {Mode}                     Encoding mode\n */\nexports.from = function from (value, defaultValue) {\n  if (exports.isValid(value)) {\n    return value\n  }\n\n  try {\n    return fromString(value)\n  } catch (e) {\n    return defaultValue\n  }\n}\n","const Mode = require('./mode')\n\nfunction NumericData (data) {\n  this.mode = Mode.NUMERIC\n  this.data = data.toString()\n}\n\nNumericData.getBitsLength = function getBitsLength (length) {\n  return 10 * Math.floor(length / 3) + ((length % 3) ? ((length % 3) * 3 + 1) : 0)\n}\n\nNumericData.prototype.getLength = function getLength () {\n  return this.data.length\n}\n\nNumericData.prototype.getBitsLength = function getBitsLength () {\n  return NumericData.getBitsLength(this.data.length)\n}\n\nNumericData.prototype.write = function write (bitBuffer) {\n  let i, group, value\n\n  // The input data string is divided into groups of three digits,\n  // and each group is converted to its 10-bit binary equivalent.\n  for (i = 0; i + 3 <= this.data.length; i += 3) {\n    group = this.data.substr(i, 3)\n    value = parseInt(group, 10)\n\n    bitBuffer.put(value, 10)\n  }\n\n  // If the number of input digits is not an exact multiple of three,\n  // the final one or two digits are converted to 4 or 7 bits respectively.\n  const remainingNum = this.data.length - i\n  if (remainingNum > 0) {\n    group = this.data.substr(i)\n    value = parseInt(group, 10)\n\n    bitBuffer.put(value, remainingNum * 3 + 1)\n  }\n}\n\nmodule.exports = NumericData\n","const GF = require('./galois-field')\n\n/**\n * Multiplies two polynomials inside Galois Field\n *\n * @param  {Uint8Array} p1 Polynomial\n * @param  {Uint8Array} p2 Polynomial\n * @return {Uint8Array}    Product of p1 and p2\n */\nexports.mul = function mul (p1, p2) {\n  const coeff = new Uint8Array(p1.length + p2.length - 1)\n\n  for (let i = 0; i < p1.length; i++) {\n    for (let j = 0; j < p2.length; j++) {\n      coeff[i + j] ^= GF.mul(p1[i], p2[j])\n    }\n  }\n\n  return coeff\n}\n\n/**\n * Calculate the remainder of polynomials division\n *\n * @param  {Uint8Array} divident Polynomial\n * @param  {Uint8Array} divisor  Polynomial\n * @return {Uint8Array}          Remainder\n */\nexports.mod = function mod (divident, divisor) {\n  let result = new Uint8Array(divident)\n\n  while ((result.length - divisor.length) >= 0) {\n    const coeff = result[0]\n\n    for (let i = 0; i < divisor.length; i++) {\n      result[i] ^= GF.mul(divisor[i], coeff)\n    }\n\n    // remove all zeros from buffer head\n    let offset = 0\n    while (offset < result.length && result[offset] === 0) offset++\n    result = result.slice(offset)\n  }\n\n  return result\n}\n\n/**\n * Generate an irreducible generator polynomial of specified degree\n * (used by Reed-Solomon encoder)\n *\n * @param  {Number} degree Degree of the generator polynomial\n * @return {Uint8Array}    Buffer containing polynomial coefficients\n */\nexports.generateECPolynomial = function generateECPolynomial (degree) {\n  let poly = new Uint8Array([1])\n  for (let i = 0; i < degree; i++) {\n    poly = exports.mul(poly, new Uint8Array([1, GF.exp(i)]))\n  }\n\n  return poly\n}\n","const Utils = require('./utils')\nconst ECLevel = require('./error-correction-level')\nconst BitBuffer = require('./bit-buffer')\nconst BitMatrix = require('./bit-matrix')\nconst AlignmentPattern = require('./alignment-pattern')\nconst FinderPattern = require('./finder-pattern')\nconst MaskPattern = require('./mask-pattern')\nconst ECCode = require('./error-correction-code')\nconst ReedSolomonEncoder = require('./reed-solomon-encoder')\nconst Version = require('./version')\nconst FormatInfo = require('./format-info')\nconst Mode = require('./mode')\nconst Segments = require('./segments')\n\n/**\n * QRCode for JavaScript\n *\n * modified by Ryan Day for nodejs support\n * Copyright (c) 2011 Ryan Day\n *\n * Licensed under the MIT license:\n *   http://www.opensource.org/licenses/mit-license.php\n *\n//---------------------------------------------------------------------\n// QRCode for JavaScript\n//\n// Copyright (c) 2009 Kazuhiko Arase\n//\n// URL: http://www.d-project.com/\n//\n// Licensed under the MIT license:\n//   http://www.opensource.org/licenses/mit-license.php\n//\n// The word \"QR Code\" is registered trademark of\n// DENSO WAVE INCORPORATED\n//   http://www.denso-wave.com/qrcode/faqpatent-e.html\n//\n//---------------------------------------------------------------------\n*/\n\n/**\n * Add finder patterns bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupFinderPattern (matrix, version) {\n  const size = matrix.size\n  const pos = FinderPattern.getPositions(version)\n\n  for (let i = 0; i < pos.length; i++) {\n    const row = pos[i][0]\n    const col = pos[i][1]\n\n    for (let r = -1; r <= 7; r++) {\n      if (row + r <= -1 || size <= row + r) continue\n\n      for (let c = -1; c <= 7; c++) {\n        if (col + c <= -1 || size <= col + c) continue\n\n        if ((r >= 0 && r <= 6 && (c === 0 || c === 6)) ||\n          (c >= 0 && c <= 6 && (r === 0 || r === 6)) ||\n          (r >= 2 && r <= 4 && c >= 2 && c <= 4)) {\n          matrix.set(row + r, col + c, true, true)\n        } else {\n          matrix.set(row + r, col + c, false, true)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Add timing pattern bits to matrix\n *\n * Note: this function must be called before {@link setupAlignmentPattern}\n *\n * @param  {BitMatrix} matrix Modules matrix\n */\nfunction setupTimingPattern (matrix) {\n  const size = matrix.size\n\n  for (let r = 8; r < size - 8; r++) {\n    const value = r % 2 === 0\n    matrix.set(r, 6, value, true)\n    matrix.set(6, r, value, true)\n  }\n}\n\n/**\n * Add alignment patterns bits to matrix\n *\n * Note: this function must be called after {@link setupTimingPattern}\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupAlignmentPattern (matrix, version) {\n  const pos = AlignmentPattern.getPositions(version)\n\n  for (let i = 0; i < pos.length; i++) {\n    const row = pos[i][0]\n    const col = pos[i][1]\n\n    for (let r = -2; r <= 2; r++) {\n      for (let c = -2; c <= 2; c++) {\n        if (r === -2 || r === 2 || c === -2 || c === 2 ||\n          (r === 0 && c === 0)) {\n          matrix.set(row + r, col + c, true, true)\n        } else {\n          matrix.set(row + r, col + c, false, true)\n        }\n      }\n    }\n  }\n}\n\n/**\n * Add version info bits to matrix\n *\n * @param  {BitMatrix} matrix  Modules matrix\n * @param  {Number}    version QR Code version\n */\nfunction setupVersionInfo (matrix, version) {\n  const size = matrix.size\n  const bits = Version.getEncodedBits(version)\n  let row, col, mod\n\n  for (let i = 0; i < 18; i++) {\n    row = Math.floor(i / 3)\n    col = i % 3 + size - 8 - 3\n    mod = ((bits >> i) & 1) === 1\n\n    matrix.set(row, col, mod, true)\n    matrix.set(col, row, mod, true)\n  }\n}\n\n/**\n * Add format info bits to matrix\n *\n * @param  {BitMatrix} matrix               Modules matrix\n * @param  {ErrorCorrectionLevel}    errorCorrectionLevel Error correction level\n * @param  {Number}    maskPattern          Mask pattern reference value\n */\nfunction setupFormatInfo (matrix, errorCorrectionLevel, maskPattern) {\n  const size = matrix.size\n  const bits = FormatInfo.getEncodedBits(errorCorrectionLevel, maskPattern)\n  let i, mod\n\n  for (i = 0; i < 15; i++) {\n    mod = ((bits >> i) & 1) === 1\n\n    // vertical\n    if (i < 6) {\n      matrix.set(i, 8, mod, true)\n    } else if (i < 8) {\n      matrix.set(i + 1, 8, mod, true)\n    } else {\n      matrix.set(size - 15 + i, 8, mod, true)\n    }\n\n    // horizontal\n    if (i < 8) {\n      matrix.set(8, size - i - 1, mod, true)\n    } else if (i < 9) {\n      matrix.set(8, 15 - i - 1 + 1, mod, true)\n    } else {\n      matrix.set(8, 15 - i - 1, mod, true)\n    }\n  }\n\n  // fixed module\n  matrix.set(size - 8, 8, 1, true)\n}\n\n/**\n * Add encoded data bits to matrix\n *\n * @param  {BitMatrix}  matrix Modules matrix\n * @param  {Uint8Array} data   Data codewords\n */\nfunction setupData (matrix, data) {\n  const size = matrix.size\n  let inc = -1\n  let row = size - 1\n  let bitIndex = 7\n  let byteIndex = 0\n\n  for (let col = size - 1; col > 0; col -= 2) {\n    if (col === 6) col--\n\n    while (true) {\n      for (let c = 0; c < 2; c++) {\n        if (!matrix.isReserved(row, col - c)) {\n          let dark = false\n\n          if (byteIndex < data.length) {\n            dark = (((data[byteIndex] >>> bitIndex) & 1) === 1)\n          }\n\n          matrix.set(row, col - c, dark)\n          bitIndex--\n\n          if (bitIndex === -1) {\n            byteIndex++\n            bitIndex = 7\n          }\n        }\n      }\n\n      row += inc\n\n      if (row < 0 || size <= row) {\n        row -= inc\n        inc = -inc\n        break\n      }\n    }\n  }\n}\n\n/**\n * Create encoded codewords from data input\n *\n * @param  {Number}   version              QR Code version\n * @param  {ErrorCorrectionLevel}   errorCorrectionLevel Error correction level\n * @param  {ByteData} data                 Data input\n * @return {Uint8Array}                    Buffer containing encoded codewords\n */\nfunction createData (version, errorCorrectionLevel, segments) {\n  // Prepare data buffer\n  const buffer = new BitBuffer()\n\n  segments.forEach(function (data) {\n    // prefix data with mode indicator (4 bits)\n    buffer.put(data.mode.bit, 4)\n\n    // Prefix data with character count indicator.\n    // The character count indicator is a string of bits that represents the\n    // number of characters that are being encoded.\n    // The character count indicator must be placed after the mode indicator\n    // and must be a certain number of bits long, depending on the QR version\n    // and data mode\n    // @see {@link Mode.getCharCountIndicator}.\n    buffer.put(data.getLength(), Mode.getCharCountIndicator(data.mode, version))\n\n    // add binary data sequence to buffer\n    data.write(buffer)\n  })\n\n  // Calculate required number of bits\n  const totalCodewords = Utils.getSymbolTotalCodewords(version)\n  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n  const dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8\n\n  // Add a terminator.\n  // If the bit string is shorter than the total number of required bits,\n  // a terminator of up to four 0s must be added to the right side of the string.\n  // If the bit string is more than four bits shorter than the required number of bits,\n  // add four 0s to the end.\n  if (buffer.getLengthInBits() + 4 <= dataTotalCodewordsBits) {\n    buffer.put(0, 4)\n  }\n\n  // If the bit string is fewer than four bits shorter, add only the number of 0s that\n  // are needed to reach the required number of bits.\n\n  // After adding the terminator, if the number of bits in the string is not a multiple of 8,\n  // pad the string on the right with 0s to make the string's length a multiple of 8.\n  while (buffer.getLengthInBits() % 8 !== 0) {\n    buffer.putBit(0)\n  }\n\n  // Add pad bytes if the string is still shorter than the total number of required bits.\n  // Extend the buffer to fill the data capacity of the symbol corresponding to\n  // the Version and Error Correction Level by adding the Pad Codewords 11101100 (0xEC)\n  // and 00010001 (0x11) alternately.\n  const remainingByte = (dataTotalCodewordsBits - buffer.getLengthInBits()) / 8\n  for (let i = 0; i < remainingByte; i++) {\n    buffer.put(i % 2 ? 0x11 : 0xEC, 8)\n  }\n\n  return createCodewords(buffer, version, errorCorrectionLevel)\n}\n\n/**\n * Encode input data with Reed-Solomon and return codewords with\n * relative error correction bits\n *\n * @param  {BitBuffer} bitBuffer            Data to encode\n * @param  {Number}    version              QR Code version\n * @param  {ErrorCorrectionLevel} errorCorrectionLevel Error correction level\n * @return {Uint8Array}                     Buffer containing encoded codewords\n */\nfunction createCodewords (bitBuffer, version, errorCorrectionLevel) {\n  // Total codewords for this QR code version (Data + Error correction)\n  const totalCodewords = Utils.getSymbolTotalCodewords(version)\n\n  // Total number of error correction codewords\n  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n\n  // Total number of data codewords\n  const dataTotalCodewords = totalCodewords - ecTotalCodewords\n\n  // Total number of blocks\n  const ecTotalBlocks = ECCode.getBlocksCount(version, errorCorrectionLevel)\n\n  // Calculate how many blocks each group should contain\n  const blocksInGroup2 = totalCodewords % ecTotalBlocks\n  const blocksInGroup1 = ecTotalBlocks - blocksInGroup2\n\n  const totalCodewordsInGroup1 = Math.floor(totalCodewords / ecTotalBlocks)\n\n  const dataCodewordsInGroup1 = Math.floor(dataTotalCodewords / ecTotalBlocks)\n  const dataCodewordsInGroup2 = dataCodewordsInGroup1 + 1\n\n  // Number of EC codewords is the same for both groups\n  const ecCount = totalCodewordsInGroup1 - dataCodewordsInGroup1\n\n  // Initialize a Reed-Solomon encoder with a generator polynomial of degree ecCount\n  const rs = new ReedSolomonEncoder(ecCount)\n\n  let offset = 0\n  const dcData = new Array(ecTotalBlocks)\n  const ecData = new Array(ecTotalBlocks)\n  let maxDataSize = 0\n  const buffer = new Uint8Array(bitBuffer.buffer)\n\n  // Divide the buffer into the required number of blocks\n  for (let b = 0; b < ecTotalBlocks; b++) {\n    const dataSize = b < blocksInGroup1 ? dataCodewordsInGroup1 : dataCodewordsInGroup2\n\n    // extract a block of data from buffer\n    dcData[b] = buffer.slice(offset, offset + dataSize)\n\n    // Calculate EC codewords for this data block\n    ecData[b] = rs.encode(dcData[b])\n\n    offset += dataSize\n    maxDataSize = Math.max(maxDataSize, dataSize)\n  }\n\n  // Create final data\n  // Interleave the data and error correction codewords from each block\n  const data = new Uint8Array(totalCodewords)\n  let index = 0\n  let i, r\n\n  // Add data codewords\n  for (i = 0; i < maxDataSize; i++) {\n    for (r = 0; r < ecTotalBlocks; r++) {\n      if (i < dcData[r].length) {\n        data[index++] = dcData[r][i]\n      }\n    }\n  }\n\n  // Apped EC codewords\n  for (i = 0; i < ecCount; i++) {\n    for (r = 0; r < ecTotalBlocks; r++) {\n      data[index++] = ecData[r][i]\n    }\n  }\n\n  return data\n}\n\n/**\n * Build QR Code symbol\n *\n * @param  {String} data                 Input string\n * @param  {Number} version              QR Code version\n * @param  {ErrorCorretionLevel} errorCorrectionLevel Error level\n * @param  {MaskPattern} maskPattern     Mask pattern\n * @return {Object}                      Object containing symbol data\n */\nfunction createSymbol (data, version, errorCorrectionLevel, maskPattern) {\n  let segments\n\n  if (Array.isArray(data)) {\n    segments = Segments.fromArray(data)\n  } else if (typeof data === 'string') {\n    let estimatedVersion = version\n\n    if (!estimatedVersion) {\n      const rawSegments = Segments.rawSplit(data)\n\n      // Estimate best version that can contain raw splitted segments\n      estimatedVersion = Version.getBestVersionForData(rawSegments, errorCorrectionLevel)\n    }\n\n    // Build optimized segments\n    // If estimated version is undefined, try with the highest version\n    segments = Segments.fromString(data, estimatedVersion || 40)\n  } else {\n    throw new Error('Invalid data')\n  }\n\n  // Get the min version that can contain data\n  const bestVersion = Version.getBestVersionForData(segments, errorCorrectionLevel)\n\n  // If no version is found, data cannot be stored\n  if (!bestVersion) {\n    throw new Error('The amount of data is too big to be stored in a QR Code')\n  }\n\n  // If not specified, use min version as default\n  if (!version) {\n    version = bestVersion\n\n  // Check if the specified version can contain the data\n  } else if (version < bestVersion) {\n    throw new Error('\\n' +\n      'The chosen QR Code version cannot contain this amount of data.\\n' +\n      'Minimum version required to store current data is: ' + bestVersion + '.\\n'\n    )\n  }\n\n  const dataBits = createData(version, errorCorrectionLevel, segments)\n\n  // Allocate matrix buffer\n  const moduleCount = Utils.getSymbolSize(version)\n  const modules = new BitMatrix(moduleCount)\n\n  // Add function modules\n  setupFinderPattern(modules, version)\n  setupTimingPattern(modules)\n  setupAlignmentPattern(modules, version)\n\n  // Add temporary dummy bits for format info just to set them as reserved.\n  // This is needed to prevent these bits from being masked by {@link MaskPattern.applyMask}\n  // since the masking operation must be performed only on the encoding region.\n  // These blocks will be replaced with correct values later in code.\n  setupFormatInfo(modules, errorCorrectionLevel, 0)\n\n  if (version >= 7) {\n    setupVersionInfo(modules, version)\n  }\n\n  // Add data codewords\n  setupData(modules, dataBits)\n\n  if (isNaN(maskPattern)) {\n    // Find best mask pattern\n    maskPattern = MaskPattern.getBestMask(modules,\n      setupFormatInfo.bind(null, modules, errorCorrectionLevel))\n  }\n\n  // Apply mask pattern\n  MaskPattern.applyMask(maskPattern, modules)\n\n  // Replace format info bits with correct values\n  setupFormatInfo(modules, errorCorrectionLevel, maskPattern)\n\n  return {\n    modules: modules,\n    version: version,\n    errorCorrectionLevel: errorCorrectionLevel,\n    maskPattern: maskPattern,\n    segments: segments\n  }\n}\n\n/**\n * QR Code\n *\n * @param {String | Array} data                 Input data\n * @param {Object} options                      Optional configurations\n * @param {Number} options.version              QR Code version\n * @param {String} options.errorCorrectionLevel Error correction level\n * @param {Function} options.toSJISFunc         Helper func to convert utf8 to sjis\n */\nexports.create = function create (data, options) {\n  if (typeof data === 'undefined' || data === '') {\n    throw new Error('No input text')\n  }\n\n  let errorCorrectionLevel = ECLevel.M\n  let version\n  let mask\n\n  if (typeof options !== 'undefined') {\n    // Use higher error correction level as default\n    errorCorrectionLevel = ECLevel.from(options.errorCorrectionLevel, ECLevel.M)\n    version = Version.from(options.version)\n    mask = MaskPattern.from(options.maskPattern)\n\n    if (options.toSJISFunc) {\n      Utils.setToSJISFunction(options.toSJISFunc)\n    }\n  }\n\n  return createSymbol(data, version, errorCorrectionLevel, mask)\n}\n","const Polynomial = require('./polynomial')\n\nfunction ReedSolomonEncoder (degree) {\n  this.genPoly = undefined\n  this.degree = degree\n\n  if (this.degree) this.initialize(this.degree)\n}\n\n/**\n * Initialize the encoder.\n * The input param should correspond to the number of error correction codewords.\n *\n * @param  {Number} degree\n */\nReedSolomonEncoder.prototype.initialize = function initialize (degree) {\n  // create an irreducible generator polynomial\n  this.degree = degree\n  this.genPoly = Polynomial.generateECPolynomial(this.degree)\n}\n\n/**\n * Encodes a chunk of data\n *\n * @param  {Uint8Array} data Buffer containing input data\n * @return {Uint8Array}      Buffer containing encoded data\n */\nReedSolomonEncoder.prototype.encode = function encode (data) {\n  if (!this.genPoly) {\n    throw new Error('Encoder not initialized')\n  }\n\n  // Calculate EC for this data block\n  // extends data size to data+genPoly size\n  const paddedData = new Uint8Array(data.length + this.degree)\n  paddedData.set(data)\n\n  // The error correction codewords are the remainder after dividing the data codewords\n  // by a generator polynomial\n  const remainder = Polynomial.mod(paddedData, this.genPoly)\n\n  // return EC data blocks (last n byte, where n is the degree of genPoly)\n  // If coefficients number in remainder are less than genPoly degree,\n  // pad with 0s to the left to reach the needed number of coefficients\n  const start = this.degree - remainder.length\n  if (start > 0) {\n    const buff = new Uint8Array(this.degree)\n    buff.set(remainder, start)\n\n    return buff\n  }\n\n  return remainder\n}\n\nmodule.exports = ReedSolomonEncoder\n","const numeric = '[0-9]+'\nconst alphanumeric = '[A-Z $%*+\\\\-./:]+'\nlet kanji = '(?:[u3000-u303F]|[u3040-u309F]|[u30A0-u30FF]|' +\n  '[uFF00-uFFEF]|[u4E00-u9FAF]|[u2605-u2606]|[u2190-u2195]|u203B|' +\n  '[u2010u2015u2018u2019u2025u2026u201Cu201Du2225u2260]|' +\n  '[u0391-u0451]|[u00A7u00A8u00B1u00B4u00D7u00F7])+'\nkanji = kanji.replace(/u/g, '\\\\u')\n\nconst byte = '(?:(?![A-Z0-9 $%*+\\\\-./:]|' + kanji + ')(?:.|[\\r\\n]))+'\n\nexports.KANJI = new RegExp(kanji, 'g')\nexports.BYTE_KANJI = new RegExp('[^A-Z0-9 $%*+\\\\-./:]+', 'g')\nexports.BYTE = new RegExp(byte, 'g')\nexports.NUMERIC = new RegExp(numeric, 'g')\nexports.ALPHANUMERIC = new RegExp(alphanumeric, 'g')\n\nconst TEST_KANJI = new RegExp('^' + kanji + '$')\nconst TEST_NUMERIC = new RegExp('^' + numeric + '$')\nconst TEST_ALPHANUMERIC = new RegExp('^[A-Z0-9 $%*+\\\\-./:]+$')\n\nexports.testKanji = function testKanji (str) {\n  return TEST_KANJI.test(str)\n}\n\nexports.testNumeric = function testNumeric (str) {\n  return TEST_NUMERIC.test(str)\n}\n\nexports.testAlphanumeric = function testAlphanumeric (str) {\n  return TEST_ALPHANUMERIC.test(str)\n}\n","const Mode = require('./mode')\nconst NumericData = require('./numeric-data')\nconst AlphanumericData = require('./alphanumeric-data')\nconst ByteData = require('./byte-data')\nconst KanjiData = require('./kanji-data')\nconst Regex = require('./regex')\nconst Utils = require('./utils')\nconst dijkstra = require('dijkstrajs')\n\n/**\n * Returns UTF8 byte length\n *\n * @param  {String} str Input string\n * @return {Number}     Number of byte\n */\nfunction getStringByteLength (str) {\n  return unescape(encodeURIComponent(str)).length\n}\n\n/**\n * Get a list of segments of the specified mode\n * from a string\n *\n * @param  {Mode}   mode Segment mode\n * @param  {String} str  String to process\n * @return {Array}       Array of object with segments data\n */\nfunction getSegments (regex, mode, str) {\n  const segments = []\n  let result\n\n  while ((result = regex.exec(str)) !== null) {\n    segments.push({\n      data: result[0],\n      index: result.index,\n      mode: mode,\n      length: result[0].length\n    })\n  }\n\n  return segments\n}\n\n/**\n * Extracts a series of segments with the appropriate\n * modes from a string\n *\n * @param  {String} dataStr Input string\n * @return {Array}          Array of object with segments data\n */\nfunction getSegmentsFromString (dataStr) {\n  const numSegs = getSegments(Regex.NUMERIC, Mode.NUMERIC, dataStr)\n  const alphaNumSegs = getSegments(Regex.ALPHANUMERIC, Mode.ALPHANUMERIC, dataStr)\n  let byteSegs\n  let kanjiSegs\n\n  if (Utils.isKanjiModeEnabled()) {\n    byteSegs = getSegments(Regex.BYTE, Mode.BYTE, dataStr)\n    kanjiSegs = getSegments(Regex.KANJI, Mode.KANJI, dataStr)\n  } else {\n    byteSegs = getSegments(Regex.BYTE_KANJI, Mode.BYTE, dataStr)\n    kanjiSegs = []\n  }\n\n  const segs = numSegs.concat(alphaNumSegs, byteSegs, kanjiSegs)\n\n  return segs\n    .sort(function (s1, s2) {\n      return s1.index - s2.index\n    })\n    .map(function (obj) {\n      return {\n        data: obj.data,\n        mode: obj.mode,\n        length: obj.length\n      }\n    })\n}\n\n/**\n * Returns how many bits are needed to encode a string of\n * specified length with the specified mode\n *\n * @param  {Number} length String length\n * @param  {Mode} mode     Segment mode\n * @return {Number}        Bit length\n */\nfunction getSegmentBitsLength (length, mode) {\n  switch (mode) {\n    case Mode.NUMERIC:\n      return NumericData.getBitsLength(length)\n    case Mode.ALPHANUMERIC:\n      return AlphanumericData.getBitsLength(length)\n    case Mode.KANJI:\n      return KanjiData.getBitsLength(length)\n    case Mode.BYTE:\n      return ByteData.getBitsLength(length)\n  }\n}\n\n/**\n * Merges adjacent segments which have the same mode\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */\nfunction mergeSegments (segs) {\n  return segs.reduce(function (acc, curr) {\n    const prevSeg = acc.length - 1 >= 0 ? acc[acc.length - 1] : null\n    if (prevSeg && prevSeg.mode === curr.mode) {\n      acc[acc.length - 1].data += curr.data\n      return acc\n    }\n\n    acc.push(curr)\n    return acc\n  }, [])\n}\n\n/**\n * Generates a list of all possible nodes combination which\n * will be used to build a segments graph.\n *\n * Nodes are divided by groups. Each group will contain a list of all the modes\n * in which is possible to encode the given text.\n *\n * For example the text '12345' can be encoded as Numeric, Alphanumeric or Byte.\n * The group for '12345' will contain then 3 objects, one for each\n * possible encoding mode.\n *\n * Each node represents a possible segment.\n *\n * @param  {Array} segs Array of object with segments data\n * @return {Array}      Array of object with segments data\n */\nfunction buildNodes (segs) {\n  const nodes = []\n  for (let i = 0; i < segs.length; i++) {\n    const seg = segs[i]\n\n    switch (seg.mode) {\n      case Mode.NUMERIC:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.ALPHANUMERIC, length: seg.length },\n          { data: seg.data, mode: Mode.BYTE, length: seg.length }\n        ])\n        break\n      case Mode.ALPHANUMERIC:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.BYTE, length: seg.length }\n        ])\n        break\n      case Mode.KANJI:\n        nodes.push([seg,\n          { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }\n        ])\n        break\n      case Mode.BYTE:\n        nodes.push([\n          { data: seg.data, mode: Mode.BYTE, length: getStringByteLength(seg.data) }\n        ])\n    }\n  }\n\n  return nodes\n}\n\n/**\n * Builds a graph from a list of nodes.\n * All segments in each node group will be connected with all the segments of\n * the next group and so on.\n *\n * At each connection will be assigned a weight depending on the\n * segment's byte length.\n *\n * @param  {Array} nodes    Array of object with segments data\n * @param  {Number} version QR Code version\n * @return {Object}         Graph of all possible segments\n */\nfunction buildGraph (nodes, version) {\n  const table = {}\n  const graph = { start: {} }\n  let prevNodeIds = ['start']\n\n  for (let i = 0; i < nodes.length; i++) {\n    const nodeGroup = nodes[i]\n    const currentNodeIds = []\n\n    for (let j = 0; j < nodeGroup.length; j++) {\n      const node = nodeGroup[j]\n      const key = '' + i + j\n\n      currentNodeIds.push(key)\n      table[key] = { node: node, lastCount: 0 }\n      graph[key] = {}\n\n      for (let n = 0; n < prevNodeIds.length; n++) {\n        const prevNodeId = prevNodeIds[n]\n\n        if (table[prevNodeId] && table[prevNodeId].node.mode === node.mode) {\n          graph[prevNodeId][key] =\n            getSegmentBitsLength(table[prevNodeId].lastCount + node.length, node.mode) -\n            getSegmentBitsLength(table[prevNodeId].lastCount, node.mode)\n\n          table[prevNodeId].lastCount += node.length\n        } else {\n          if (table[prevNodeId]) table[prevNodeId].lastCount = node.length\n\n          graph[prevNodeId][key] = getSegmentBitsLength(node.length, node.mode) +\n            4 + Mode.getCharCountIndicator(node.mode, version) // switch cost\n        }\n      }\n    }\n\n    prevNodeIds = currentNodeIds\n  }\n\n  for (let n = 0; n < prevNodeIds.length; n++) {\n    graph[prevNodeIds[n]].end = 0\n  }\n\n  return { map: graph, table: table }\n}\n\n/**\n * Builds a segment from a specified data and mode.\n * If a mode is not specified, the more suitable will be used.\n *\n * @param  {String} data             Input data\n * @param  {Mode | String} modesHint Data mode\n * @return {Segment}                 Segment\n */\nfunction buildSingleSegment (data, modesHint) {\n  let mode\n  const bestMode = Mode.getBestModeForData(data)\n\n  mode = Mode.from(modesHint, bestMode)\n\n  // Make sure data can be encoded\n  if (mode !== Mode.BYTE && mode.bit < bestMode.bit) {\n    throw new Error('\"' + data + '\"' +\n      ' cannot be encoded with mode ' + Mode.toString(mode) +\n      '.\\n Suggested mode is: ' + Mode.toString(bestMode))\n  }\n\n  // Use Mode.BYTE if Kanji support is disabled\n  if (mode === Mode.KANJI && !Utils.isKanjiModeEnabled()) {\n    mode = Mode.BYTE\n  }\n\n  switch (mode) {\n    case Mode.NUMERIC:\n      return new NumericData(data)\n\n    case Mode.ALPHANUMERIC:\n      return new AlphanumericData(data)\n\n    case Mode.KANJI:\n      return new KanjiData(data)\n\n    case Mode.BYTE:\n      return new ByteData(data)\n  }\n}\n\n/**\n * Builds a list of segments from an array.\n * Array can contain Strings or Objects with segment's info.\n *\n * For each item which is a string, will be generated a segment with the given\n * string and the more appropriate encoding mode.\n *\n * For each item which is an object, will be generated a segment with the given\n * data and mode.\n * Objects must contain at least the property \"data\".\n * If property \"mode\" is not present, the more suitable mode will be used.\n *\n * @param  {Array} array Array of objects with segments data\n * @return {Array}       Array of Segments\n */\nexports.fromArray = function fromArray (array) {\n  return array.reduce(function (acc, seg) {\n    if (typeof seg === 'string') {\n      acc.push(buildSingleSegment(seg, null))\n    } else if (seg.data) {\n      acc.push(buildSingleSegment(seg.data, seg.mode))\n    }\n\n    return acc\n  }, [])\n}\n\n/**\n * Builds an optimized sequence of segments from a string,\n * which will produce the shortest possible bitstream.\n *\n * @param  {String} data    Input string\n * @param  {Number} version QR Code version\n * @return {Array}          Array of segments\n */\nexports.fromString = function fromString (data, version) {\n  const segs = getSegmentsFromString(data, Utils.isKanjiModeEnabled())\n\n  const nodes = buildNodes(segs)\n  const graph = buildGraph(nodes, version)\n  const path = dijkstra.find_path(graph.map, 'start', 'end')\n\n  const optimizedSegs = []\n  for (let i = 1; i < path.length - 1; i++) {\n    optimizedSegs.push(graph.table[path[i]].node)\n  }\n\n  return exports.fromArray(mergeSegments(optimizedSegs))\n}\n\n/**\n * Splits a string in various segments with the modes which\n * best represent their content.\n * The produced segments are far from being optimized.\n * The output of this function is only used to estimate a QR Code version\n * which may contain the data.\n *\n * @param  {string} data Input string\n * @return {Array}       Array of segments\n */\nexports.rawSplit = function rawSplit (data) {\n  return exports.fromArray(\n    getSegmentsFromString(data, Utils.isKanjiModeEnabled())\n  )\n}\n","let toSJISFunction\nconst CODEWORDS_COUNT = [\n  0, // Not used\n  26, 44, 70, 100, 134, 172, 196, 242, 292, 346,\n  404, 466, 532, 581, 655, 733, 815, 901, 991, 1085,\n  1156, 1258, 1364, 1474, 1588, 1706, 1828, 1921, 2051, 2185,\n  2323, 2465, 2611, 2761, 2876, 3034, 3196, 3362, 3532, 3706\n]\n\n/**\n * Returns the QR Code size for the specified version\n *\n * @param  {Number} version QR Code version\n * @return {Number}         size of QR code\n */\nexports.getSymbolSize = function getSymbolSize (version) {\n  if (!version) throw new Error('\"version\" cannot be null or undefined')\n  if (version < 1 || version > 40) throw new Error('\"version\" should be in range from 1 to 40')\n  return version * 4 + 17\n}\n\n/**\n * Returns the total number of codewords used to store data and EC information.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Data length in bits\n */\nexports.getSymbolTotalCodewords = function getSymbolTotalCodewords (version) {\n  return CODEWORDS_COUNT[version]\n}\n\n/**\n * Encode data with Bose-Chaudhuri-Hocquenghem\n *\n * @param  {Number} data Value to encode\n * @return {Number}      Encoded value\n */\nexports.getBCHDigit = function (data) {\n  let digit = 0\n\n  while (data !== 0) {\n    digit++\n    data >>>= 1\n  }\n\n  return digit\n}\n\nexports.setToSJISFunction = function setToSJISFunction (f) {\n  if (typeof f !== 'function') {\n    throw new Error('\"toSJISFunc\" is not a valid function.')\n  }\n\n  toSJISFunction = f\n}\n\nexports.isKanjiModeEnabled = function () {\n  return typeof toSJISFunction !== 'undefined'\n}\n\nexports.toSJIS = function toSJIS (kanji) {\n  return toSJISFunction(kanji)\n}\n","/**\n * Check if QR Code version is valid\n *\n * @param  {Number}  version QR Code version\n * @return {Boolean}         true if valid version, false otherwise\n */\nexports.isValid = function isValid (version) {\n  return !isNaN(version) && version >= 1 && version <= 40\n}\n","const Utils = require('./utils')\nconst ECCode = require('./error-correction-code')\nconst ECLevel = require('./error-correction-level')\nconst Mode = require('./mode')\nconst VersionCheck = require('./version-check')\n\n// Generator polynomial used to encode version information\nconst G18 = (1 << 12) | (1 << 11) | (1 << 10) | (1 << 9) | (1 << 8) | (1 << 5) | (1 << 2) | (1 << 0)\nconst G18_BCH = Utils.getBCHDigit(G18)\n\nfunction getBestVersionForDataLength (mode, length, errorCorrectionLevel) {\n  for (let currentVersion = 1; currentVersion <= 40; currentVersion++) {\n    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, mode)) {\n      return currentVersion\n    }\n  }\n\n  return undefined\n}\n\nfunction getReservedBitsCount (mode, version) {\n  // Character count indicator + mode indicator bits\n  return Mode.getCharCountIndicator(mode, version) + 4\n}\n\nfunction getTotalBitsFromDataArray (segments, version) {\n  let totalBits = 0\n\n  segments.forEach(function (data) {\n    const reservedBits = getReservedBitsCount(data.mode, version)\n    totalBits += reservedBits + data.getBitsLength()\n  })\n\n  return totalBits\n}\n\nfunction getBestVersionForMixedData (segments, errorCorrectionLevel) {\n  for (let currentVersion = 1; currentVersion <= 40; currentVersion++) {\n    const length = getTotalBitsFromDataArray(segments, currentVersion)\n    if (length <= exports.getCapacity(currentVersion, errorCorrectionLevel, Mode.MIXED)) {\n      return currentVersion\n    }\n  }\n\n  return undefined\n}\n\n/**\n * Returns version number from a value.\n * If value is not a valid version, returns defaultValue\n *\n * @param  {Number|String} value        QR Code version\n * @param  {Number}        defaultValue Fallback value\n * @return {Number}                     QR Code version number\n */\nexports.from = function from (value, defaultValue) {\n  if (VersionCheck.isValid(value)) {\n    return parseInt(value, 10)\n  }\n\n  return defaultValue\n}\n\n/**\n * Returns how much data can be stored with the specified QR code version\n * and error correction level\n *\n * @param  {Number} version              QR Code version (1-40)\n * @param  {Number} errorCorrectionLevel Error correction level\n * @param  {Mode}   mode                 Data mode\n * @return {Number}                      Quantity of storable data\n */\nexports.getCapacity = function getCapacity (version, errorCorrectionLevel, mode) {\n  if (!VersionCheck.isValid(version)) {\n    throw new Error('Invalid QR Code version')\n  }\n\n  // Use Byte mode as default\n  if (typeof mode === 'undefined') mode = Mode.BYTE\n\n  // Total codewords for this QR code version (Data + Error correction)\n  const totalCodewords = Utils.getSymbolTotalCodewords(version)\n\n  // Total number of error correction codewords\n  const ecTotalCodewords = ECCode.getTotalCodewordsCount(version, errorCorrectionLevel)\n\n  // Total number of data codewords\n  const dataTotalCodewordsBits = (totalCodewords - ecTotalCodewords) * 8\n\n  if (mode === Mode.MIXED) return dataTotalCodewordsBits\n\n  const usableBits = dataTotalCodewordsBits - getReservedBitsCount(mode, version)\n\n  // Return max number of storable codewords\n  switch (mode) {\n    case Mode.NUMERIC:\n      return Math.floor((usableBits / 10) * 3)\n\n    case Mode.ALPHANUMERIC:\n      return Math.floor((usableBits / 11) * 2)\n\n    case Mode.KANJI:\n      return Math.floor(usableBits / 13)\n\n    case Mode.BYTE:\n    default:\n      return Math.floor(usableBits / 8)\n  }\n}\n\n/**\n * Returns the minimum version needed to contain the amount of data\n *\n * @param  {Segment} data                    Segment of data\n * @param  {Number} [errorCorrectionLevel=H] Error correction level\n * @param  {Mode} mode                       Data mode\n * @return {Number}                          QR Code version\n */\nexports.getBestVersionForData = function getBestVersionForData (data, errorCorrectionLevel) {\n  let seg\n\n  const ecl = ECLevel.from(errorCorrectionLevel, ECLevel.M)\n\n  if (Array.isArray(data)) {\n    if (data.length > 1) {\n      return getBestVersionForMixedData(data, ecl)\n    }\n\n    if (data.length === 0) {\n      return 1\n    }\n\n    seg = data[0]\n  } else {\n    seg = data\n  }\n\n  return getBestVersionForDataLength(seg.mode, seg.getLength(), ecl)\n}\n\n/**\n * Returns version information with relative error correction bits\n *\n * The version information is included in QR Code symbols of version 7 or larger.\n * It consists of an 18-bit sequence containing 6 data bits,\n * with 12 error correction bits calculated using the (18, 6) Golay code.\n *\n * @param  {Number} version QR Code version\n * @return {Number}         Encoded version info bits\n */\nexports.getEncodedBits = function getEncodedBits (version) {\n  if (!VersionCheck.isValid(version) || version < 7) {\n    throw new Error('Invalid QR Code version')\n  }\n\n  let d = version << 12\n\n  while (Utils.getBCHDigit(d) - G18_BCH >= 0) {\n    d ^= (G18 << (Utils.getBCHDigit(d) - G18_BCH))\n  }\n\n  return (version << 12) | d\n}\n","const Utils = require('./utils')\n\nfunction clearCanvas (ctx, canvas, size) {\n  ctx.clearRect(0, 0, canvas.width, canvas.height)\n\n  if (!canvas.style) canvas.style = {}\n  canvas.height = size\n  canvas.width = size\n  canvas.style.height = size + 'px'\n  canvas.style.width = size + 'px'\n}\n\nfunction getCanvasElement () {\n  try {\n    return document.createElement('canvas')\n  } catch (e) {\n    throw new Error('You need to specify a canvas element')\n  }\n}\n\nexports.render = function render (qrData, canvas, options) {\n  let opts = options\n  let canvasEl = canvas\n\n  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n    opts = canvas\n    canvas = undefined\n  }\n\n  if (!canvas) {\n    canvasEl = getCanvasElement()\n  }\n\n  opts = Utils.getOptions(opts)\n  const size = Utils.getImageWidth(qrData.modules.size, opts)\n\n  const ctx = canvasEl.getContext('2d')\n  const image = ctx.createImageData(size, size)\n  Utils.qrToImageData(image.data, qrData, opts)\n\n  clearCanvas(ctx, canvasEl, size)\n  ctx.putImageData(image, 0, 0)\n\n  return canvasEl\n}\n\nexports.renderToDataURL = function renderToDataURL (qrData, canvas, options) {\n  let opts = options\n\n  if (typeof opts === 'undefined' && (!canvas || !canvas.getContext)) {\n    opts = canvas\n    canvas = undefined\n  }\n\n  if (!opts) opts = {}\n\n  const canvasEl = exports.render(qrData, canvas, opts)\n\n  const type = opts.type || 'image/png'\n  const rendererOpts = opts.rendererOpts || {}\n\n  return canvasEl.toDataURL(type, rendererOpts.quality)\n}\n","const Utils = require('./utils')\n\nfunction getColorAttrib (color, attrib) {\n  const alpha = color.a / 255\n  const str = attrib + '=\"' + color.hex + '\"'\n\n  return alpha < 1\n    ? str + ' ' + attrib + '-opacity=\"' + alpha.toFixed(2).slice(1) + '\"'\n    : str\n}\n\nfunction svgCmd (cmd, x, y) {\n  let str = cmd + x\n  if (typeof y !== 'undefined') str += ' ' + y\n\n  return str\n}\n\nfunction qrToPath (data, size, margin) {\n  let path = ''\n  let moveBy = 0\n  let newRow = false\n  let lineLength = 0\n\n  for (let i = 0; i < data.length; i++) {\n    const col = Math.floor(i % size)\n    const row = Math.floor(i / size)\n\n    if (!col && !newRow) newRow = true\n\n    if (data[i]) {\n      lineLength++\n\n      if (!(i > 0 && col > 0 && data[i - 1])) {\n        path += newRow\n          ? svgCmd('M', col + margin, 0.5 + row + margin)\n          : svgCmd('m', moveBy, 0)\n\n        moveBy = 0\n        newRow = false\n      }\n\n      if (!(col + 1 < size && data[i + 1])) {\n        path += svgCmd('h', lineLength)\n        lineLength = 0\n      }\n    } else {\n      moveBy++\n    }\n  }\n\n  return path\n}\n\nexports.render = function render (qrData, options, cb) {\n  const opts = Utils.getOptions(options)\n  const size = qrData.modules.size\n  const data = qrData.modules.data\n  const qrcodesize = size + opts.margin * 2\n\n  const bg = !opts.color.light.a\n    ? ''\n    : '<path ' + getColorAttrib(opts.color.light, 'fill') +\n      ' d=\"M0 0h' + qrcodesize + 'v' + qrcodesize + 'H0z\"/>'\n\n  const path =\n    '<path ' + getColorAttrib(opts.color.dark, 'stroke') +\n    ' d=\"' + qrToPath(data, size, opts.margin) + '\"/>'\n\n  const viewBox = 'viewBox=\"' + '0 0 ' + qrcodesize + ' ' + qrcodesize + '\"'\n\n  const width = !opts.width ? '' : 'width=\"' + opts.width + '\" height=\"' + opts.width + '\" '\n\n  const svgTag = '<svg xmlns=\"http://www.w3.org/2000/svg\" ' + width + viewBox + ' shape-rendering=\"crispEdges\">' + bg + path + '</svg>\\n'\n\n  if (typeof cb === 'function') {\n    cb(null, svgTag)\n  }\n\n  return svgTag\n}\n","function hex2rgba (hex) {\n  if (typeof hex === 'number') {\n    hex = hex.toString()\n  }\n\n  if (typeof hex !== 'string') {\n    throw new Error('Color should be defined as hex string')\n  }\n\n  let hexCode = hex.slice().replace('#', '').split('')\n  if (hexCode.length < 3 || hexCode.length === 5 || hexCode.length > 8) {\n    throw new Error('Invalid hex color: ' + hex)\n  }\n\n  // Convert from short to long form (fff -> ffffff)\n  if (hexCode.length === 3 || hexCode.length === 4) {\n    hexCode = Array.prototype.concat.apply([], hexCode.map(function (c) {\n      return [c, c]\n    }))\n  }\n\n  // Add default alpha value\n  if (hexCode.length === 6) hexCode.push('F', 'F')\n\n  const hexValue = parseInt(hexCode.join(''), 16)\n\n  return {\n    r: (hexValue >> 24) & 255,\n    g: (hexValue >> 16) & 255,\n    b: (hexValue >> 8) & 255,\n    a: hexValue & 255,\n    hex: '#' + hexCode.slice(0, 6).join('')\n  }\n}\n\nexports.getOptions = function getOptions (options) {\n  if (!options) options = {}\n  if (!options.color) options.color = {}\n\n  const margin = typeof options.margin === 'undefined' ||\n    options.margin === null ||\n    options.margin < 0\n    ? 4\n    : options.margin\n\n  const width = options.width && options.width >= 21 ? options.width : undefined\n  const scale = options.scale || 4\n\n  return {\n    width: width,\n    scale: width ? 4 : scale,\n    margin: margin,\n    color: {\n      dark: hex2rgba(options.color.dark || '#000000ff'),\n      light: hex2rgba(options.color.light || '#ffffffff')\n    },\n    type: options.type,\n    rendererOpts: options.rendererOpts || {}\n  }\n}\n\nexports.getScale = function getScale (qrSize, opts) {\n  return opts.width && opts.width >= qrSize + opts.margin * 2\n    ? opts.width / (qrSize + opts.margin * 2)\n    : opts.scale\n}\n\nexports.getImageWidth = function getImageWidth (qrSize, opts) {\n  const scale = exports.getScale(qrSize, opts)\n  return Math.floor((qrSize + opts.margin * 2) * scale)\n}\n\nexports.qrToImageData = function qrToImageData (imgData, qr, opts) {\n  const size = qr.modules.size\n  const data = qr.modules.data\n  const scale = exports.getScale(size, opts)\n  const symbolSize = Math.floor((size + opts.margin * 2) * scale)\n  const scaledMargin = opts.margin * scale\n  const palette = [opts.color.light, opts.color.dark]\n\n  for (let i = 0; i < symbolSize; i++) {\n    for (let j = 0; j < symbolSize; j++) {\n      let posDst = (i * symbolSize + j) * 4\n      let pxColor = opts.color.light\n\n      if (i >= scaledMargin && j >= scaledMargin &&\n        i < symbolSize - scaledMargin && j < symbolSize - scaledMargin) {\n        const iSrc = Math.floor((i - scaledMargin) / scale)\n        const jSrc = Math.floor((j - scaledMargin) / scale)\n        pxColor = palette[data[iSrc * size + jSrc] ? 1 : 0]\n      }\n\n      imgData[posDst++] = pxColor.r\n      imgData[posDst++] = pxColor.g\n      imgData[posDst++] = pxColor.b\n      imgData[posDst] = pxColor.a\n    }\n  }\n}\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Version } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Current version of the Angular Component Development Kit. */\nconst VERSION = new Version('13.3.9');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nexport { VERSION };\n","import * as i0 from '@angular/core';\nimport { NgModule, Injectable } from '@angular/core';\nimport { coerceArray } from '@angular/cdk/coercion';\nimport { Subject, combineLatest, concat, Observable } from 'rxjs';\nimport { take, skip, debounceTime, map, startWith, takeUntil } from 'rxjs/operators';\nimport * as i1 from '@angular/cdk/platform';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass LayoutModule {\n}\nLayoutModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: LayoutModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLayoutModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: LayoutModule });\nLayoutModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: LayoutModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: LayoutModule, decorators: [{\n            type: NgModule,\n            args: [{}]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Global registry for all dynamically-created, injected media queries. */\nconst mediaQueriesForWebkitCompatibility = new Set();\n/** Style tag that holds all of the dynamically-created media queries. */\nlet mediaQueryStyleNode;\n/** A utility for calling matchMedia queries. */\nclass MediaMatcher {\n    constructor(_platform) {\n        this._platform = _platform;\n        this._matchMedia =\n            this._platform.isBrowser && window.matchMedia\n                ? // matchMedia is bound to the window scope intentionally as it is an illegal invocation to\n                    // call it from a different scope.\n                    window.matchMedia.bind(window)\n                : noopMatchMedia;\n    }\n    /**\n     * Evaluates the given media query and returns the native MediaQueryList from which results\n     * can be retrieved.\n     * Confirms the layout engine will trigger for the selector query provided and returns the\n     * MediaQueryList for the query provided.\n     */\n    matchMedia(query) {\n        if (this._platform.WEBKIT || this._platform.BLINK) {\n            createEmptyStyleRule(query);\n        }\n        return this._matchMedia(query);\n    }\n}\nMediaMatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MediaMatcher, deps: [{ token: i1.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\nMediaMatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MediaMatcher, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MediaMatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }]; } });\n/**\n * Creates an empty stylesheet that is used to work around browser inconsistencies related to\n * `matchMedia`. At the time of writing, it handles the following cases:\n * 1. On WebKit browsers, a media query has to have at least one rule in order for `matchMedia`\n * to fire. We work around it by declaring a dummy stylesheet with a `@media` declaration.\n * 2. In some cases Blink browsers will stop firing the `matchMedia` listener if none of the rules\n * inside the `@media` match existing elements on the page. We work around it by having one rule\n * targeting the `body`. See https://github.com/angular/components/issues/23546.\n */\nfunction createEmptyStyleRule(query) {\n    if (mediaQueriesForWebkitCompatibility.has(query)) {\n        return;\n    }\n    try {\n        if (!mediaQueryStyleNode) {\n            mediaQueryStyleNode = document.createElement('style');\n            mediaQueryStyleNode.setAttribute('type', 'text/css');\n            document.head.appendChild(mediaQueryStyleNode);\n        }\n        if (mediaQueryStyleNode.sheet) {\n            mediaQueryStyleNode.sheet.insertRule(`@media ${query} {body{ }}`, 0);\n            mediaQueriesForWebkitCompatibility.add(query);\n        }\n    }\n    catch (e) {\n        console.error(e);\n    }\n}\n/** No-op matchMedia replacement for non-browser platforms. */\nfunction noopMatchMedia(query) {\n    // Use `as any` here to avoid adding additional necessary properties for\n    // the noop matcher.\n    return {\n        matches: query === 'all' || query === '',\n        media: query,\n        addListener: () => { },\n        removeListener: () => { },\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Utility for checking the matching state of @media queries. */\nclass BreakpointObserver {\n    constructor(_mediaMatcher, _zone) {\n        this._mediaMatcher = _mediaMatcher;\n        this._zone = _zone;\n        /**  A map of all media queries currently being listened for. */\n        this._queries = new Map();\n        /** A subject for all other observables to takeUntil based on. */\n        this._destroySubject = new Subject();\n    }\n    /** Completes the active subject, signalling to all other observables to complete. */\n    ngOnDestroy() {\n        this._destroySubject.next();\n        this._destroySubject.complete();\n    }\n    /**\n     * Whether one or more media queries match the current viewport size.\n     * @param value One or more media queries to check.\n     * @returns Whether any of the media queries match.\n     */\n    isMatched(value) {\n        const queries = splitQueries(coerceArray(value));\n        return queries.some(mediaQuery => this._registerQuery(mediaQuery).mql.matches);\n    }\n    /**\n     * Gets an observable of results for the given queries that will emit new results for any changes\n     * in matching of the given queries.\n     * @param value One or more media queries to check.\n     * @returns A stream of matches for the given queries.\n     */\n    observe(value) {\n        const queries = splitQueries(coerceArray(value));\n        const observables = queries.map(query => this._registerQuery(query).observable);\n        let stateObservable = combineLatest(observables);\n        // Emit the first state immediately, and then debounce the subsequent emissions.\n        stateObservable = concat(stateObservable.pipe(take(1)), stateObservable.pipe(skip(1), debounceTime(0)));\n        return stateObservable.pipe(map(breakpointStates => {\n            const response = {\n                matches: false,\n                breakpoints: {},\n            };\n            breakpointStates.forEach(({ matches, query }) => {\n                response.matches = response.matches || matches;\n                response.breakpoints[query] = matches;\n            });\n            return response;\n        }));\n    }\n    /** Registers a specific query to be listened for. */\n    _registerQuery(query) {\n        // Only set up a new MediaQueryList if it is not already being listened for.\n        if (this._queries.has(query)) {\n            return this._queries.get(query);\n        }\n        const mql = this._mediaMatcher.matchMedia(query);\n        // Create callback for match changes and add it is as a listener.\n        const queryObservable = new Observable((observer) => {\n            // Listener callback methods are wrapped to be placed back in ngZone. Callbacks must be placed\n            // back into the zone because matchMedia is only included in Zone.js by loading the\n            // webapis-media-query.js file alongside the zone.js file.  Additionally, some browsers do not\n            // have MediaQueryList inherit from EventTarget, which causes inconsistencies in how Zone.js\n            // patches it.\n            const handler = (e) => this._zone.run(() => observer.next(e));\n            mql.addListener(handler);\n            return () => {\n                mql.removeListener(handler);\n            };\n        }).pipe(startWith(mql), map(({ matches }) => ({ query, matches })), takeUntil(this._destroySubject));\n        // Add the MediaQueryList to the set of queries.\n        const output = { observable: queryObservable, mql };\n        this._queries.set(query, output);\n        return output;\n    }\n}\nBreakpointObserver.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: BreakpointObserver, deps: [{ token: MediaMatcher }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\nBreakpointObserver.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: BreakpointObserver, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: BreakpointObserver, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: MediaMatcher }, { type: i0.NgZone }]; } });\n/**\n * Split each query string into separate query strings if two queries are provided as comma\n * separated.\n */\nfunction splitQueries(queries) {\n    return queries\n        .map(query => query.split(','))\n        .reduce((a1, a2) => a1.concat(a2))\n        .map(query => query.trim());\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// PascalCase is being used as Breakpoints is used like an enum.\n// tslint:disable-next-line:variable-name\nconst Breakpoints = {\n    XSmall: '(max-width: 599.98px)',\n    Small: '(min-width: 600px) and (max-width: 959.98px)',\n    Medium: '(min-width: 960px) and (max-width: 1279.98px)',\n    Large: '(min-width: 1280px) and (max-width: 1919.98px)',\n    XLarge: '(min-width: 1920px)',\n    Handset: '(max-width: 599.98px) and (orientation: portrait), ' +\n        '(max-width: 959.98px) and (orientation: landscape)',\n    Tablet: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait), ' +\n        '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    Web: '(min-width: 840px) and (orientation: portrait), ' +\n        '(min-width: 1280px) and (orientation: landscape)',\n    HandsetPortrait: '(max-width: 599.98px) and (orientation: portrait)',\n    TabletPortrait: '(min-width: 600px) and (max-width: 839.98px) and (orientation: portrait)',\n    WebPortrait: '(min-width: 840px) and (orientation: portrait)',\n    HandsetLandscape: '(max-width: 959.98px) and (orientation: landscape)',\n    TabletLandscape: '(min-width: 960px) and (max-width: 1279.98px) and (orientation: landscape)',\n    WebLandscape: '(min-width: 1280px) and (orientation: landscape)',\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { BreakpointObserver, Breakpoints, LayoutModule, MediaMatcher };\n","import * as i1 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Directive, Output, Optional, Inject, Input, NgModule } from '@angular/core';\nimport { coerceElement, coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { EMPTY, Subject, fromEvent } from 'rxjs';\nimport { auditTime, takeUntil } from 'rxjs/operators';\nimport { DOCUMENT } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Options to pass to the animationstart listener. */\nconst listenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * An injectable service that can be used to monitor the autofill state of an input.\n * Based on the following blog post:\n * https://medium.com/@brunn/detecting-autofilled-fields-in-javascript-aed598d25da7\n */\nclass AutofillMonitor {\n    constructor(_platform, _ngZone) {\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._monitoredElements = new Map();\n    }\n    monitor(elementOrRef) {\n        if (!this._platform.isBrowser) {\n            return EMPTY;\n        }\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            return info.subject;\n        }\n        const result = new Subject();\n        const cssClass = 'cdk-text-field-autofilled';\n        const listener = ((event) => {\n            // Animation events fire on initial element render, we check for the presence of the autofill\n            // CSS class to make sure this is a real change in state, not just the initial render before\n            // we fire off events.\n            if (event.animationName === 'cdk-text-field-autofill-start' &&\n                !element.classList.contains(cssClass)) {\n                element.classList.add(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: true }));\n            }\n            else if (event.animationName === 'cdk-text-field-autofill-end' &&\n                element.classList.contains(cssClass)) {\n                element.classList.remove(cssClass);\n                this._ngZone.run(() => result.next({ target: event.target, isAutofilled: false }));\n            }\n        });\n        this._ngZone.runOutsideAngular(() => {\n            element.addEventListener('animationstart', listener, listenerOptions);\n            element.classList.add('cdk-text-field-autofill-monitored');\n        });\n        this._monitoredElements.set(element, {\n            subject: result,\n            unlisten: () => {\n                element.removeEventListener('animationstart', listener, listenerOptions);\n            },\n        });\n        return result;\n    }\n    stopMonitoring(elementOrRef) {\n        const element = coerceElement(elementOrRef);\n        const info = this._monitoredElements.get(element);\n        if (info) {\n            info.unlisten();\n            info.subject.complete();\n            element.classList.remove('cdk-text-field-autofill-monitored');\n            element.classList.remove('cdk-text-field-autofilled');\n            this._monitoredElements.delete(element);\n        }\n    }\n    ngOnDestroy() {\n        this._monitoredElements.forEach((_info, element) => this.stopMonitoring(element));\n    }\n}\nAutofillMonitor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: AutofillMonitor, deps: [{ token: i1.Platform }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Injectable });\nAutofillMonitor.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: AutofillMonitor, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: AutofillMonitor, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }], ctorParameters: function () { return [{ type: i1.Platform }, { type: i0.NgZone }]; } });\n/** A directive that can be used to monitor the autofill state of an input. */\nclass CdkAutofill {\n    constructor(_elementRef, _autofillMonitor) {\n        this._elementRef = _elementRef;\n        this._autofillMonitor = _autofillMonitor;\n        /** Emits when the autofill state of the element changes. */\n        this.cdkAutofill = new EventEmitter();\n    }\n    ngOnInit() {\n        this._autofillMonitor\n            .monitor(this._elementRef)\n            .subscribe(event => this.cdkAutofill.emit(event));\n    }\n    ngOnDestroy() {\n        this._autofillMonitor.stopMonitoring(this._elementRef);\n    }\n}\nCdkAutofill.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkAutofill, deps: [{ token: i0.ElementRef }, { token: AutofillMonitor }], target: i0.ɵɵFactoryTarget.Directive });\nCdkAutofill.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkAutofill, selector: \"[cdkAutofill]\", outputs: { cdkAutofill: \"cdkAutofill\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkAutofill, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[cdkAutofill]',\n                }]\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: AutofillMonitor }]; }, propDecorators: { cdkAutofill: [{\n                type: Output\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Directive to automatically resize a textarea to fit its content. */\nclass CdkTextareaAutosize {\n    constructor(_elementRef, _platform, _ngZone, \n    /** @breaking-change 11.0.0 make document required */\n    document) {\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        this._destroyed = new Subject();\n        this._enabled = true;\n        /**\n         * Value of minRows as of last resize. If the minRows has decreased, the\n         * height of the textarea needs to be recomputed to reflect the new minimum. The maxHeight\n         * does not have the same problem because it does not affect the textarea's scrollHeight.\n         */\n        this._previousMinRows = -1;\n        this._isViewInited = false;\n        /** Handles `focus` and `blur` events. */\n        this._handleFocusEvent = (event) => {\n            this._hasFocus = event.type === 'focus';\n        };\n        this._document = document;\n        this._textareaElement = this._elementRef.nativeElement;\n    }\n    /** Minimum amount of rows in the textarea. */\n    get minRows() {\n        return this._minRows;\n    }\n    set minRows(value) {\n        this._minRows = coerceNumberProperty(value);\n        this._setMinHeight();\n    }\n    /** Maximum amount of rows in the textarea. */\n    get maxRows() {\n        return this._maxRows;\n    }\n    set maxRows(value) {\n        this._maxRows = coerceNumberProperty(value);\n        this._setMaxHeight();\n    }\n    /** Whether autosizing is enabled or not */\n    get enabled() {\n        return this._enabled;\n    }\n    set enabled(value) {\n        value = coerceBooleanProperty(value);\n        // Only act if the actual value changed. This specifically helps to not run\n        // resizeToFitContent too early (i.e. before ngAfterViewInit)\n        if (this._enabled !== value) {\n            (this._enabled = value) ? this.resizeToFitContent(true) : this.reset();\n        }\n    }\n    get placeholder() {\n        return this._textareaElement.placeholder;\n    }\n    set placeholder(value) {\n        this._cachedPlaceholderHeight = undefined;\n        if (value) {\n            this._textareaElement.setAttribute('placeholder', value);\n        }\n        else {\n            this._textareaElement.removeAttribute('placeholder');\n        }\n        this._cacheTextareaPlaceholderHeight();\n    }\n    /** Sets the minimum height of the textarea as determined by minRows. */\n    _setMinHeight() {\n        const minHeight = this.minRows && this._cachedLineHeight ? `${this.minRows * this._cachedLineHeight}px` : null;\n        if (minHeight) {\n            this._textareaElement.style.minHeight = minHeight;\n        }\n    }\n    /** Sets the maximum height of the textarea as determined by maxRows. */\n    _setMaxHeight() {\n        const maxHeight = this.maxRows && this._cachedLineHeight ? `${this.maxRows * this._cachedLineHeight}px` : null;\n        if (maxHeight) {\n            this._textareaElement.style.maxHeight = maxHeight;\n        }\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            // Remember the height which we started with in case autosizing is disabled\n            this._initialHeight = this._textareaElement.style.height;\n            this.resizeToFitContent();\n            this._ngZone.runOutsideAngular(() => {\n                const window = this._getWindow();\n                fromEvent(window, 'resize')\n                    .pipe(auditTime(16), takeUntil(this._destroyed))\n                    .subscribe(() => this.resizeToFitContent(true));\n                this._textareaElement.addEventListener('focus', this._handleFocusEvent);\n                this._textareaElement.addEventListener('blur', this._handleFocusEvent);\n            });\n            this._isViewInited = true;\n            this.resizeToFitContent(true);\n        }\n    }\n    ngOnDestroy() {\n        this._textareaElement.removeEventListener('focus', this._handleFocusEvent);\n        this._textareaElement.removeEventListener('blur', this._handleFocusEvent);\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /**\n     * Cache the height of a single-row textarea if it has not already been cached.\n     *\n     * We need to know how large a single \"row\" of a textarea is in order to apply minRows and\n     * maxRows. For the initial version, we will assume that the height of a single line in the\n     * textarea does not ever change.\n     */\n    _cacheTextareaLineHeight() {\n        if (this._cachedLineHeight) {\n            return;\n        }\n        // Use a clone element because we have to override some styles.\n        let textareaClone = this._textareaElement.cloneNode(false);\n        textareaClone.rows = 1;\n        // Use `position: absolute` so that this doesn't cause a browser layout and use\n        // `visibility: hidden` so that nothing is rendered. Clear any other styles that\n        // would affect the height.\n        textareaClone.style.position = 'absolute';\n        textareaClone.style.visibility = 'hidden';\n        textareaClone.style.border = 'none';\n        textareaClone.style.padding = '0';\n        textareaClone.style.height = '';\n        textareaClone.style.minHeight = '';\n        textareaClone.style.maxHeight = '';\n        // In Firefox it happens that textarea elements are always bigger than the specified amount\n        // of rows. This is because Firefox tries to add extra space for the horizontal scrollbar.\n        // As a workaround that removes the extra space for the scrollbar, we can just set overflow\n        // to hidden. This ensures that there is no invalid calculation of the line height.\n        // See Firefox bug report: https://bugzilla.mozilla.org/show_bug.cgi?id=33654\n        textareaClone.style.overflow = 'hidden';\n        this._textareaElement.parentNode.appendChild(textareaClone);\n        this._cachedLineHeight = textareaClone.clientHeight;\n        textareaClone.remove();\n        // Min and max heights have to be re-calculated if the cached line height changes\n        this._setMinHeight();\n        this._setMaxHeight();\n    }\n    _measureScrollHeight() {\n        const element = this._textareaElement;\n        const previousMargin = element.style.marginBottom || '';\n        const isFirefox = this._platform.FIREFOX;\n        const needsMarginFiller = isFirefox && this._hasFocus;\n        const measuringClass = isFirefox\n            ? 'cdk-textarea-autosize-measuring-firefox'\n            : 'cdk-textarea-autosize-measuring';\n        // In some cases the page might move around while we're measuring the `textarea` on Firefox. We\n        // work around it by assigning a temporary margin with the same height as the `textarea` so that\n        // it occupies the same amount of space. See #23233.\n        if (needsMarginFiller) {\n            element.style.marginBottom = `${element.clientHeight}px`;\n        }\n        // Reset the textarea height to auto in order to shrink back to its default size.\n        // Also temporarily force overflow:hidden, so scroll bars do not interfere with calculations.\n        element.classList.add(measuringClass);\n        // The measuring class includes a 2px padding to workaround an issue with Chrome,\n        // so we account for that extra space here by subtracting 4 (2px top + 2px bottom).\n        const scrollHeight = element.scrollHeight - 4;\n        element.classList.remove(measuringClass);\n        if (needsMarginFiller) {\n            element.style.marginBottom = previousMargin;\n        }\n        return scrollHeight;\n    }\n    _cacheTextareaPlaceholderHeight() {\n        if (!this._isViewInited || this._cachedPlaceholderHeight != undefined) {\n            return;\n        }\n        if (!this.placeholder) {\n            this._cachedPlaceholderHeight = 0;\n            return;\n        }\n        const value = this._textareaElement.value;\n        this._textareaElement.value = this._textareaElement.placeholder;\n        this._cachedPlaceholderHeight = this._measureScrollHeight();\n        this._textareaElement.value = value;\n    }\n    ngDoCheck() {\n        if (this._platform.isBrowser) {\n            this.resizeToFitContent();\n        }\n    }\n    /**\n     * Resize the textarea to fit its content.\n     * @param force Whether to force a height recalculation. By default the height will be\n     *    recalculated only if the value changed since the last call.\n     */\n    resizeToFitContent(force = false) {\n        // If autosizing is disabled, just skip everything else\n        if (!this._enabled) {\n            return;\n        }\n        this._cacheTextareaLineHeight();\n        this._cacheTextareaPlaceholderHeight();\n        // If we haven't determined the line-height yet, we know we're still hidden and there's no point\n        // in checking the height of the textarea.\n        if (!this._cachedLineHeight) {\n            return;\n        }\n        const textarea = this._elementRef.nativeElement;\n        const value = textarea.value;\n        // Only resize if the value or minRows have changed since these calculations can be expensive.\n        if (!force && this._minRows === this._previousMinRows && value === this._previousValue) {\n            return;\n        }\n        const scrollHeight = this._measureScrollHeight();\n        const height = Math.max(scrollHeight, this._cachedPlaceholderHeight || 0);\n        // Use the scrollHeight to know how large the textarea *would* be if fit its entire value.\n        textarea.style.height = `${height}px`;\n        this._ngZone.runOutsideAngular(() => {\n            if (typeof requestAnimationFrame !== 'undefined') {\n                requestAnimationFrame(() => this._scrollToCaretPosition(textarea));\n            }\n            else {\n                setTimeout(() => this._scrollToCaretPosition(textarea));\n            }\n        });\n        this._previousValue = value;\n        this._previousMinRows = this._minRows;\n    }\n    /**\n     * Resets the textarea to its original size\n     */\n    reset() {\n        // Do not try to change the textarea, if the initialHeight has not been determined yet\n        // This might potentially remove styles when reset() is called before ngAfterViewInit\n        if (this._initialHeight !== undefined) {\n            this._textareaElement.style.height = this._initialHeight;\n        }\n    }\n    _noopInputHandler() {\n        // no-op handler that ensures we're running change detection on input events.\n    }\n    /** Access injected document if available or fallback to global document reference */\n    _getDocument() {\n        return this._document || document;\n    }\n    /** Use defaultView of injected document if available or fallback to global window reference */\n    _getWindow() {\n        const doc = this._getDocument();\n        return doc.defaultView || window;\n    }\n    /**\n     * Scrolls a textarea to the caret position. On Firefox resizing the textarea will\n     * prevent it from scrolling to the caret position. We need to re-set the selection\n     * in order for it to scroll to the proper position.\n     */\n    _scrollToCaretPosition(textarea) {\n        const { selectionStart, selectionEnd } = textarea;\n        // IE will throw an \"Unspecified error\" if we try to set the selection range after the\n        // element has been removed from the DOM. Assert that the directive hasn't been destroyed\n        // between the time we requested the animation frame and when it was executed.\n        // Also note that we have to assert that the textarea is focused before we set the\n        // selection range. Setting the selection range on a non-focused textarea will cause\n        // it to receive focus on IE and Edge.\n        if (!this._destroyed.isStopped && this._hasFocus) {\n            textarea.setSelectionRange(selectionStart, selectionEnd);\n        }\n    }\n}\nCdkTextareaAutosize.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkTextareaAutosize, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: i0.NgZone }, { token: DOCUMENT, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nCdkTextareaAutosize.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: CdkTextareaAutosize, selector: \"textarea[cdkTextareaAutosize]\", inputs: { minRows: [\"cdkAutosizeMinRows\", \"minRows\"], maxRows: [\"cdkAutosizeMaxRows\", \"maxRows\"], enabled: [\"cdkTextareaAutosize\", \"enabled\"], placeholder: \"placeholder\" }, host: { attributes: { \"rows\": \"1\" }, listeners: { \"input\": \"_noopInputHandler()\" }, classAttribute: \"cdk-textarea-autosize\" }, exportAs: [\"cdkTextareaAutosize\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: CdkTextareaAutosize, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'textarea[cdkTextareaAutosize]',\n                    exportAs: 'cdkTextareaAutosize',\n                    host: {\n                        'class': 'cdk-textarea-autosize',\n                        // Textarea elements that have the directive applied should have a single row by default.\n                        // Browsers normally show two rows by default and therefore this limits the minRows binding.\n                        'rows': '1',\n                        '(input)': '_noopInputHandler()',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    }, propDecorators: { minRows: [{\n                type: Input,\n                args: ['cdkAutosizeMinRows']\n            }], maxRows: [{\n                type: Input,\n                args: ['cdkAutosizeMaxRows']\n            }], enabled: [{\n                type: Input,\n                args: ['cdkTextareaAutosize']\n            }], placeholder: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass TextFieldModule {\n}\nTextFieldModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: TextFieldModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nTextFieldModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: TextFieldModule, declarations: [CdkAutofill, CdkTextareaAutosize], exports: [CdkAutofill, CdkTextareaAutosize] });\nTextFieldModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: TextFieldModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: TextFieldModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [CdkAutofill, CdkTextareaAutosize],\n                    exports: [CdkAutofill, CdkTextareaAutosize],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AutofillMonitor, CdkAutofill, CdkTextareaAutosize, TextFieldModule };\n","import * as i0 from '@angular/core';\nimport { Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, ViewChild, Input, NgModule } from '@angular/core';\nimport * as i2 from '@angular/material/core';\nimport { mixinColor, mixinDisabled, mixinDisableRipple, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport * as i1 from '@angular/cdk/a11y';\n\n/** Default color palette for round buttons (mat-fab and mat-mini-fab) */\nconst DEFAULT_ROUND_BUTTON_COLOR = 'accent';\n/**\n * List of classes to add to MatButton instances based on host attributes to\n * style as different variants.\n */\nconst BUTTON_HOST_ATTRIBUTES = [\n    'mat-button',\n    'mat-flat-button',\n    'mat-icon-button',\n    'mat-raised-button',\n    'mat-stroked-button',\n    'mat-mini-fab',\n    'mat-fab',\n];\n// Boilerplate for applying mixins to MatButton.\nconst _MatButtonBase = mixinColor(mixinDisabled(mixinDisableRipple(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n})));\n/**\n * Material design button.\n */\nclass MatButton extends _MatButtonBase {\n    constructor(elementRef, _focusMonitor, _animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._animationMode = _animationMode;\n        /** Whether the button is round. */\n        this.isRoundButton = this._hasHostAttributes('mat-fab', 'mat-mini-fab');\n        /** Whether the button is icon button. */\n        this.isIconButton = this._hasHostAttributes('mat-icon-button');\n        // For each of the variant selectors that is present in the button's host\n        // attributes, add the correct corresponding class.\n        for (const attr of BUTTON_HOST_ATTRIBUTES) {\n            if (this._hasHostAttributes(attr)) {\n                this._getHostElement().classList.add(attr);\n            }\n        }\n        // Add a class that applies to all buttons. This makes it easier to target if somebody\n        // wants to target all Material buttons. We do it here rather than `host` to ensure that\n        // the class is applied to derived classes.\n        elementRef.nativeElement.classList.add('mat-button-base');\n        if (this.isRoundButton) {\n            this.color = DEFAULT_ROUND_BUTTON_COLOR;\n        }\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true);\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Focuses the button. */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._getHostElement(), origin, options);\n        }\n        else {\n            this._getHostElement().focus(options);\n        }\n    }\n    _getHostElement() {\n        return this._elementRef.nativeElement;\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /** Gets whether the button has one of the given attributes. */\n    _hasHostAttributes(...attributes) {\n        return attributes.some(attribute => this._getHostElement().hasAttribute(attribute));\n    }\n}\nMatButton.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatButton, deps: [{ token: i0.ElementRef }, { token: i1.FocusMonitor }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatButton.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],\\n             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],\\n             button[mat-flat-button]\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\" }, host: { properties: { \"attr.disabled\": \"disabled || null\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\", \"class.mat-button-disabled\": \"disabled\" }, classAttribute: \"mat-focus-indicator\" }, viewQueries: [{ propertyName: \"ripple\", first: true, predicate: MatRipple, descendants: true }], exportAs: [\"matButton\"], usesInheritance: true, ngImport: i0, template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<span matRipple class=\\\"mat-button-ripple\\\"\\n      [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n      [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n      [matRippleCentered]=\\\"isIconButton\\\"\\n      [matRippleTrigger]=\\\"_getHostElement()\\\"></span>\\n<span class=\\\"mat-button-focus-overlay\\\"></span>\\n\", styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:inline-flex;justify-content:center;align-items:center;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}.cdk-high-contrast-active .mat-button-base.cdk-keyboard-focused,.cdk-high-contrast-active .mat-button-base.cdk-program-focused{outline:solid 3px}\\n\"], directives: [{ type: i2.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatButton, decorators: [{\n            type: Component,\n            args: [{ selector: `button[mat-button], button[mat-raised-button], button[mat-icon-button],\n             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],\n             button[mat-flat-button]`, exportAs: 'matButton', host: {\n                        '[attr.disabled]': 'disabled || null',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                        // Add a class for disabled button styling instead of the using attribute\n                        // selector or pseudo-selector.  This allows users to create focusabled\n                        // disabled buttons without recreating the styles.\n                        '[class.mat-button-disabled]': 'disabled',\n                        'class': 'mat-focus-indicator',\n                    }, inputs: ['disabled', 'disableRipple', 'color'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<span matRipple class=\\\"mat-button-ripple\\\"\\n      [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n      [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n      [matRippleCentered]=\\\"isIconButton\\\"\\n      [matRippleTrigger]=\\\"_getHostElement()\\\"></span>\\n<span class=\\\"mat-button-focus-overlay\\\"></span>\\n\", styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:inline-flex;justify-content:center;align-items:center;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}.cdk-high-contrast-active .mat-button-base.cdk-keyboard-focused,.cdk-high-contrast-active .mat-button-base.cdk-program-focused{outline:solid 3px}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.FocusMonitor }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { ripple: [{\n                type: ViewChild,\n                args: [MatRipple]\n            }] } });\n/**\n * Material design anchor button.\n */\nclass MatAnchor extends MatButton {\n    constructor(focusMonitor, elementRef, animationMode, \n    /** @breaking-change 14.0.0 _ngZone will be required. */\n    _ngZone) {\n        super(elementRef, focusMonitor, animationMode);\n        this._ngZone = _ngZone;\n        this._haltDisabledEvents = (event) => {\n            // A disabled button shouldn't apply any actions\n            if (this.disabled) {\n                event.preventDefault();\n                event.stopImmediatePropagation();\n            }\n        };\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        /** @breaking-change 14.0.0 _ngZone will be required. */\n        if (this._ngZone) {\n            this._ngZone.runOutsideAngular(() => {\n                this._elementRef.nativeElement.addEventListener('click', this._haltDisabledEvents);\n            });\n        }\n        else {\n            this._elementRef.nativeElement.addEventListener('click', this._haltDisabledEvents);\n        }\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this._elementRef.nativeElement.removeEventListener('click', this._haltDisabledEvents);\n    }\n}\nMatAnchor.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatAnchor, deps: [{ token: i1.FocusMonitor }, { token: i0.ElementRef }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: i0.NgZone, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatAnchor.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatAnchor, selector: \"a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab],\\n             a[mat-mini-fab], a[mat-stroked-button], a[mat-flat-button]\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\" }, host: { properties: { \"attr.tabindex\": \"disabled ? -1 : tabIndex\", \"attr.disabled\": \"disabled || null\", \"attr.aria-disabled\": \"disabled.toString()\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\", \"class.mat-button-disabled\": \"disabled\" }, classAttribute: \"mat-focus-indicator\" }, exportAs: [\"matButton\", \"matAnchor\"], usesInheritance: true, ngImport: i0, template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<span matRipple class=\\\"mat-button-ripple\\\"\\n      [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n      [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n      [matRippleCentered]=\\\"isIconButton\\\"\\n      [matRippleTrigger]=\\\"_getHostElement()\\\"></span>\\n<span class=\\\"mat-button-focus-overlay\\\"></span>\\n\", styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:inline-flex;justify-content:center;align-items:center;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}.cdk-high-contrast-active .mat-button-base.cdk-keyboard-focused,.cdk-high-contrast-active .mat-button-base.cdk-program-focused{outline:solid 3px}\\n\"], directives: [{ type: i2.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatAnchor, decorators: [{\n            type: Component,\n            args: [{ selector: `a[mat-button], a[mat-raised-button], a[mat-icon-button], a[mat-fab],\n             a[mat-mini-fab], a[mat-stroked-button], a[mat-flat-button]`, exportAs: 'matButton, matAnchor', host: {\n                        // Note that we ignore the user-specified tabindex when it's disabled for\n                        // consistency with the `mat-button` applied on native buttons where even\n                        // though they have an index, they're not tabbable.\n                        '[attr.tabindex]': 'disabled ? -1 : tabIndex',\n                        '[attr.disabled]': 'disabled || null',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                        '[class.mat-button-disabled]': 'disabled',\n                        'class': 'mat-focus-indicator',\n                    }, inputs: ['disabled', 'disableRipple', 'color'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<span class=\\\"mat-button-wrapper\\\"><ng-content></ng-content></span>\\n<span matRipple class=\\\"mat-button-ripple\\\"\\n      [class.mat-button-ripple-round]=\\\"isRoundButton || isIconButton\\\"\\n      [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n      [matRippleCentered]=\\\"isIconButton\\\"\\n      [matRippleTrigger]=\\\"_getHostElement()\\\"></span>\\n<span class=\\\"mat-button-focus-overlay\\\"></span>\\n\", styles: [\".mat-button .mat-button-focus-overlay,.mat-icon-button .mat-button-focus-overlay{opacity:0}.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:.04}@media(hover: none){.mat-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay,.mat-stroked-button:hover:not(.mat-button-disabled) .mat-button-focus-overlay{opacity:0}}.mat-button,.mat-icon-button,.mat-stroked-button,.mat-flat-button{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-button.mat-button-disabled,.mat-icon-button.mat-button-disabled,.mat-stroked-button.mat-button-disabled,.mat-flat-button.mat-button-disabled{cursor:default}.mat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-button.cdk-program-focused .mat-button-focus-overlay,.mat-icon-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-icon-button.cdk-program-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-stroked-button.cdk-program-focused .mat-button-focus-overlay,.mat-flat-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-flat-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-button::-moz-focus-inner,.mat-icon-button::-moz-focus-inner,.mat-stroked-button::-moz-focus-inner,.mat-flat-button::-moz-focus-inner{border:0}.mat-raised-button{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1)}.mat-raised-button::-moz-focus-inner{border:0}.mat-raised-button.mat-button-disabled{cursor:default}.mat-raised-button.cdk-keyboard-focused .mat-button-focus-overlay,.mat-raised-button.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-raised-button::-moz-focus-inner{border:0}._mat-animation-noopable.mat-raised-button{transition:none;animation:none}.mat-stroked-button{border:1px solid currentColor;padding:0 15px;line-height:34px}.mat-stroked-button .mat-button-ripple.mat-ripple,.mat-stroked-button .mat-button-focus-overlay{top:-1px;left:-1px;right:-1px;bottom:-1px}.mat-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:56px;height:56px;padding:0;flex-shrink:0}.mat-fab::-moz-focus-inner{border:0}.mat-fab.mat-button-disabled{cursor:default}.mat-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-fab{transition:none;animation:none}.mat-fab .mat-button-wrapper{padding:16px 0;display:inline-block;line-height:24px}.mat-mini-fab{box-sizing:border-box;position:relative;-webkit-user-select:none;user-select:none;cursor:pointer;outline:none;border:none;-webkit-tap-highlight-color:transparent;display:inline-block;white-space:nowrap;text-decoration:none;vertical-align:baseline;text-align:center;margin:0;min-width:64px;line-height:36px;padding:0 16px;border-radius:4px;overflow:visible;transform:translate3d(0, 0, 0);transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);min-width:0;border-radius:50%;width:40px;height:40px;padding:0;flex-shrink:0}.mat-mini-fab::-moz-focus-inner{border:0}.mat-mini-fab.mat-button-disabled{cursor:default}.mat-mini-fab.cdk-keyboard-focused .mat-button-focus-overlay,.mat-mini-fab.cdk-program-focused .mat-button-focus-overlay{opacity:.12}.mat-mini-fab::-moz-focus-inner{border:0}._mat-animation-noopable.mat-mini-fab{transition:none;animation:none}.mat-mini-fab .mat-button-wrapper{padding:8px 0;display:inline-block;line-height:24px}.mat-icon-button{padding:0;min-width:0;width:40px;height:40px;flex-shrink:0;line-height:40px;border-radius:50%}.mat-icon-button i,.mat-icon-button .mat-icon{line-height:24px}.mat-button-ripple.mat-ripple,.mat-button-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-button-ripple.mat-ripple:not(:empty){transform:translateZ(0)}.mat-button-focus-overlay{opacity:0;transition:opacity 200ms cubic-bezier(0.35, 0, 0.25, 1),background-color 200ms cubic-bezier(0.35, 0, 0.25, 1)}._mat-animation-noopable .mat-button-focus-overlay{transition:none}.mat-button-ripple-round{border-radius:50%;z-index:1}.mat-button .mat-button-wrapper>*,.mat-flat-button .mat-button-wrapper>*,.mat-stroked-button .mat-button-wrapper>*,.mat-raised-button .mat-button-wrapper>*,.mat-icon-button .mat-button-wrapper>*,.mat-fab .mat-button-wrapper>*,.mat-mini-fab .mat-button-wrapper>*{vertical-align:middle}.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-prefix .mat-icon-button,.mat-form-field:not(.mat-form-field-appearance-legacy) .mat-form-field-suffix .mat-icon-button{display:inline-flex;justify-content:center;align-items:center;font-size:inherit;width:2.5em;height:2.5em}.cdk-high-contrast-active .mat-button,.cdk-high-contrast-active .mat-flat-button,.cdk-high-contrast-active .mat-raised-button,.cdk-high-contrast-active .mat-icon-button,.cdk-high-contrast-active .mat-fab,.cdk-high-contrast-active .mat-mini-fab{outline:solid 1px}.cdk-high-contrast-active .mat-button-base.cdk-keyboard-focused,.cdk-high-contrast-active .mat-button-base.cdk-program-focused{outline:solid 3px}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i1.FocusMonitor }, { type: i0.ElementRef }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }, { type: i0.NgZone, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { tabIndex: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatButtonModule {\n}\nMatButtonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatButtonModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatButtonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatButtonModule, declarations: [MatButton, MatAnchor], imports: [MatRippleModule, MatCommonModule], exports: [MatButton, MatAnchor, MatCommonModule] });\nMatButtonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatButtonModule, imports: [[MatRippleModule, MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatButtonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatRippleModule, MatCommonModule],\n                    exports: [MatButton, MatAnchor, MatCommonModule],\n                    declarations: [MatButton, MatAnchor],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatAnchor, MatButton, MatButtonModule };\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Optional, Inject, Input, Output, ViewChild, Directive, NgModule } from '@angular/core';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport * as i2 from '@angular/material/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRipple, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport * as i1 from '@angular/cdk/a11y';\nimport * as i3 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-checkbox`. */\nconst MAT_CHECKBOX_DEFAULT_OPTIONS = new InjectionToken('mat-checkbox-default-options', {\n    providedIn: 'root',\n    factory: MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        color: 'accent',\n        clickAction: 'check-indeterminate',\n    };\n}\n\n// Increasing integer for generating unique ids for checkbox components.\nlet nextUniqueId = 0;\n// Default checkbox configuration.\nconst defaults = MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY();\n/**\n * Provider Expression that allows mat-checkbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatCheckbox),\n    multi: true,\n};\n/** Change event object emitted by MatCheckbox. */\nclass MatCheckboxChange {\n}\n// Boilerplate for applying mixins to MatCheckbox.\n/** @docs-private */\nconst _MatCheckboxBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}))));\n/**\n * A material design checkbox component. Supports all of the functionality of an HTML5 checkbox,\n * and exposes a similar API. A MatCheckbox can be either checked, unchecked, indeterminate, or\n * disabled. Note that all additional accessibility attributes are taken care of by the component,\n * so there is no need to provide them yourself. However, if you want to omit a label and still\n * have the checkbox be accessible, you may supply an [aria-label] input.\n * See: https://material.io/design/components/selection-controls.html\n */\nclass MatCheckbox extends _MatCheckboxBase {\n    constructor(elementRef, _changeDetectorRef, _focusMonitor, _ngZone, tabIndex, _animationMode, _options) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._focusMonitor = _focusMonitor;\n        this._ngZone = _ngZone;\n        this._animationMode = _animationMode;\n        this._options = _options;\n        /**\n         * Attached to the aria-label attribute of the host element. In most cases, aria-labelledby will\n         * take precedence so this may be omitted.\n         */\n        this.ariaLabel = '';\n        /**\n         * Users can specify the `aria-labelledby` attribute which will be forwarded to the input element\n         */\n        this.ariaLabelledby = null;\n        this._uniqueId = `mat-checkbox-${++nextUniqueId}`;\n        /** A unique id for the checkbox input. If none is supplied, it will be auto-generated. */\n        this.id = this._uniqueId;\n        /** Whether the label should appear after or before the checkbox. Defaults to 'after' */\n        this.labelPosition = 'after';\n        /** Name value will be applied to the input element if present */\n        this.name = null;\n        /** Event emitted when the checkbox's `checked` value changes. */\n        this.change = new EventEmitter();\n        /** Event emitted when the checkbox's `indeterminate` value changes. */\n        this.indeterminateChange = new EventEmitter();\n        /**\n         * Called when the checkbox is blurred. Needed to properly implement ControlValueAccessor.\n         * @docs-private\n         */\n        this._onTouched = () => { };\n        this._currentAnimationClass = '';\n        this._currentCheckState = 0 /* Init */;\n        this._controlValueAccessorChangeFn = () => { };\n        this._checked = false;\n        this._disabled = false;\n        this._indeterminate = false;\n        this._options = this._options || defaults;\n        this.color = this.defaultColor = this._options.color || defaults.color;\n        this.tabIndex = parseInt(tabIndex) || 0;\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() {\n        return `${this.id || this._uniqueId}-input`;\n    }\n    /** Whether the checkbox is required. */\n    get required() {\n        return this._required;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    ngAfterViewInit() {\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n            if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state change\n                // (such as a form control's 'ng-touched') will cause a changed-after-checked error.\n                // See https://github.com/angular/angular/issues/17793. To work around this, we defer\n                // telling the form control it has been touched until the next tick.\n                Promise.resolve().then(() => {\n                    this._onTouched();\n                    this._changeDetectorRef.markForCheck();\n                });\n            }\n        });\n        this._syncIndeterminate(this._indeterminate);\n    }\n    // TODO: Delete next major revision.\n    ngAfterViewChecked() { }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /**\n     * Whether the checkbox is checked.\n     */\n    get checked() {\n        return this._checked;\n    }\n    set checked(value) {\n        const checked = coerceBooleanProperty(value);\n        if (checked != this.checked) {\n            this._checked = checked;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is disabled. This fully overrides the implementation provided by\n     * mixinDisabled, but the mixin is still required because mixinTabIndex requires it.\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        const newValue = coerceBooleanProperty(value);\n        if (newValue !== this.disabled) {\n            this._disabled = newValue;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Whether the checkbox is indeterminate. This is also known as \"mixed\" mode and can be used to\n     * represent a checkbox with three states, e.g. a checkbox that represents a nested list of\n     * checkable items. Note that whenever checkbox is manually clicked, indeterminate is immediately\n     * set to false.\n     */\n    get indeterminate() {\n        return this._indeterminate;\n    }\n    set indeterminate(value) {\n        const changed = value != this._indeterminate;\n        this._indeterminate = coerceBooleanProperty(value);\n        if (changed) {\n            if (this._indeterminate) {\n                this._transitionCheckState(3 /* Indeterminate */);\n            }\n            else {\n                this._transitionCheckState(this.checked ? 1 /* Checked */ : 2 /* Unchecked */);\n            }\n            this.indeterminateChange.emit(this._indeterminate);\n        }\n        this._syncIndeterminate(this._indeterminate);\n    }\n    _isRippleDisabled() {\n        return this.disableRipple || this.disabled;\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the checkbox\n        // component will be only marked for check, but no actual change detection runs automatically.\n        // Instead of going back into the zone in order to trigger a change detection which causes\n        // *all* components to be checked (if explicitly marked or not using OnPush), we only trigger\n        // an explicit change detection for the checkbox view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n    // Implemented as part of ControlValueAccessor.\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnChange(fn) {\n        this._controlValueAccessorChangeFn = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    // Implemented as part of ControlValueAccessor.\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    _getAriaChecked() {\n        if (this.checked) {\n            return 'true';\n        }\n        return this.indeterminate ? 'mixed' : 'false';\n    }\n    _transitionCheckState(newState) {\n        let oldState = this._currentCheckState;\n        let element = this._elementRef.nativeElement;\n        if (oldState === newState) {\n            return;\n        }\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.remove(this._currentAnimationClass);\n        }\n        this._currentAnimationClass = this._getAnimationClassForCheckStateTransition(oldState, newState);\n        this._currentCheckState = newState;\n        if (this._currentAnimationClass.length > 0) {\n            element.classList.add(this._currentAnimationClass);\n            // Remove the animation class to avoid animation when the checkbox is moved between containers\n            const animationClass = this._currentAnimationClass;\n            this._ngZone.runOutsideAngular(() => {\n                setTimeout(() => {\n                    element.classList.remove(animationClass);\n                }, 1000);\n            });\n        }\n    }\n    _emitChangeEvent() {\n        const event = new MatCheckboxChange();\n        event.source = this;\n        event.checked = this.checked;\n        this._controlValueAccessorChangeFn(this.checked);\n        this.change.emit(event);\n        // Assigning the value again here is redundant, but we have to do it in case it was\n        // changed inside the `change` listener which will cause the input to be out of sync.\n        if (this._inputElement) {\n            this._inputElement.nativeElement.checked = this.checked;\n        }\n    }\n    /** Toggles the `checked` state of the checkbox. */\n    toggle() {\n        this.checked = !this.checked;\n        this._controlValueAccessorChangeFn(this.checked);\n    }\n    /**\n     * Event handler for checkbox input element.\n     * Toggles checked state if element is not disabled.\n     * Do not toggle on (change) event since IE doesn't fire change event when\n     *   indeterminate checkbox is clicked.\n     * @param event\n     */\n    _onInputClick(event) {\n        var _a;\n        const clickAction = (_a = this._options) === null || _a === void 0 ? void 0 : _a.clickAction;\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `checkbox` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n        // If resetIndeterminate is false, and the current state is indeterminate, do nothing on click\n        if (!this.disabled && clickAction !== 'noop') {\n            // When user manually click on the checkbox, `indeterminate` is set to false.\n            if (this.indeterminate && clickAction !== 'check') {\n                Promise.resolve().then(() => {\n                    this._indeterminate = false;\n                    this.indeterminateChange.emit(this._indeterminate);\n                });\n            }\n            this._checked = !this._checked;\n            this._transitionCheckState(this._checked ? 1 /* Checked */ : 2 /* Unchecked */);\n            // Emit our custom change event if the native input emitted one.\n            // It is important to only emit it, if the native input triggered one, because\n            // we don't want to trigger a change event, when the `checked` variable changes for example.\n            this._emitChangeEvent();\n        }\n        else if (!this.disabled && clickAction === 'noop') {\n            // Reset native input when clicked with noop. The native checkbox becomes checked after\n            // click, reset it to be align with `checked` value of `mat-checkbox`.\n            this._inputElement.nativeElement.checked = this.checked;\n            this._inputElement.nativeElement.indeterminate = this.indeterminate;\n        }\n    }\n    /** Focuses the checkbox. */\n    focus(origin, options) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._inputElement, origin, options);\n        }\n        else {\n            this._inputElement.nativeElement.focus(options);\n        }\n    }\n    _onInteractionEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the `change` output.\n        event.stopPropagation();\n    }\n    _getAnimationClassForCheckStateTransition(oldState, newState) {\n        // Don't transition if animations are disabled.\n        if (this._animationMode === 'NoopAnimations') {\n            return '';\n        }\n        let animSuffix = '';\n        switch (oldState) {\n            case 0 /* Init */:\n                // Handle edge case where user interacts with checkbox that does not have [(ngModel)] or\n                // [checked] bound to it.\n                if (newState === 1 /* Checked */) {\n                    animSuffix = 'unchecked-checked';\n                }\n                else if (newState == 3 /* Indeterminate */) {\n                    animSuffix = 'unchecked-indeterminate';\n                }\n                else {\n                    return '';\n                }\n                break;\n            case 2 /* Unchecked */:\n                animSuffix =\n                    newState === 1 /* Checked */\n                        ? 'unchecked-checked'\n                        : 'unchecked-indeterminate';\n                break;\n            case 1 /* Checked */:\n                animSuffix =\n                    newState === 2 /* Unchecked */\n                        ? 'checked-unchecked'\n                        : 'checked-indeterminate';\n                break;\n            case 3 /* Indeterminate */:\n                animSuffix =\n                    newState === 1 /* Checked */\n                        ? 'indeterminate-checked'\n                        : 'indeterminate-unchecked';\n                break;\n        }\n        return `mat-checkbox-anim-${animSuffix}`;\n    }\n    /**\n     * Syncs the indeterminate value with the checkbox DOM node.\n     *\n     * We sync `indeterminate` directly on the DOM node, because in Ivy the check for whether a\n     * property is supported on an element boils down to `if (propName in element)`. Domino's\n     * HTMLInputElement doesn't have an `indeterminate` property so Ivy will warn during\n     * server-side rendering.\n     */\n    _syncIndeterminate(value) {\n        const nativeCheckbox = this._inputElement;\n        if (nativeCheckbox) {\n            nativeCheckbox.nativeElement.indeterminate = value;\n        }\n    }\n}\nMatCheckbox.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatCheckbox, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.FocusMonitor }, { token: i0.NgZone }, { token: 'tabindex', attribute: true }, { token: ANIMATION_MODULE_TYPE, optional: true }, { token: MAT_CHECKBOX_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatCheckbox.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatCheckbox, selector: \"mat-checkbox\", inputs: { disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], id: \"id\", required: \"required\", labelPosition: \"labelPosition\", name: \"name\", value: \"value\", checked: \"checked\", disabled: \"disabled\", indeterminate: \"indeterminate\" }, outputs: { change: \"change\", indeterminateChange: \"indeterminateChange\" }, host: { properties: { \"id\": \"id\", \"attr.tabindex\": \"null\", \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"class.mat-checkbox-indeterminate\": \"indeterminate\", \"class.mat-checkbox-checked\": \"checked\", \"class.mat-checkbox-disabled\": \"disabled\", \"class.mat-checkbox-label-before\": \"labelPosition == \\\"before\\\"\", \"class._mat-animation-noopable\": \"_animationMode === 'NoopAnimations'\" }, classAttribute: \"mat-checkbox\" }, providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR], viewQueries: [{ propertyName: \"_inputElement\", first: true, predicate: [\"input\"], descendants: true }, { propertyName: \"ripple\", first: true, predicate: MatRipple, descendants: true }], exportAs: [\"matCheckbox\"], usesInheritance: true, ngImport: i0, template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-checkbox-layout\\\" #label>\\n  <span class=\\\"mat-checkbox-inner-container\\\"\\n       [class.mat-checkbox-inner-container-no-side-margin]=\\\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\\\">\\n    <input #input\\n           class=\\\"mat-checkbox-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [checked]=\\\"checked\\\"\\n           [attr.value]=\\\"value\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-checked]=\\\"_getAriaChecked()\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n    <span matRipple class=\\\"mat-checkbox-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: _animationMode === 'NoopAnimations' ? 0 : 150}\\\">\\n      <span class=\\\"mat-ripple-element mat-checkbox-persistent-ripple\\\"></span>\\n    </span>\\n    <span class=\\\"mat-checkbox-frame\\\"></span>\\n    <span class=\\\"mat-checkbox-background\\\">\\n      <svg version=\\\"1.1\\\"\\n           focusable=\\\"false\\\"\\n           class=\\\"mat-checkbox-checkmark\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mat-checkbox-checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              stroke=\\\"white\\\"\\n              d=\\\"M4.1,12.7 9,17.6 20.3,6.3\\\"/>\\n      </svg>\\n      <!-- Element for rendering the indeterminate state checkbox. -->\\n      <span class=\\\"mat-checkbox-mixedmark\\\"></span>\\n    </span>\\n  </span>\\n  <span class=\\\"mat-checkbox-label\\\" #checkboxLabel (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\", styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{display:inline-block;transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.cdk-high-contrast-active .mat-checkbox.cdk-keyboard-focused .mat-checkbox-ripple{outline:solid 3px}.mat-checkbox-layout{-webkit-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1);-webkit-print-color-adjust:exact;color-adjust:exact}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{display:block;width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}\\n\"], directives: [{ type: i2.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { type: i3.CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatCheckbox, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-checkbox', exportAs: 'matCheckbox', host: {\n                        'class': 'mat-checkbox',\n                        '[id]': 'id',\n                        '[attr.tabindex]': 'null',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[class.mat-checkbox-indeterminate]': 'indeterminate',\n                        '[class.mat-checkbox-checked]': 'checked',\n                        '[class.mat-checkbox-disabled]': 'disabled',\n                        '[class.mat-checkbox-label-before]': 'labelPosition == \"before\"',\n                        '[class._mat-animation-noopable]': `_animationMode === 'NoopAnimations'`,\n                    }, providers: [MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR], inputs: ['disableRipple', 'color', 'tabIndex'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-checkbox-layout\\\" #label>\\n  <span class=\\\"mat-checkbox-inner-container\\\"\\n       [class.mat-checkbox-inner-container-no-side-margin]=\\\"!checkboxLabel.textContent || !checkboxLabel.textContent.trim()\\\">\\n    <input #input\\n           class=\\\"mat-checkbox-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [checked]=\\\"checked\\\"\\n           [attr.value]=\\\"value\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [attr.aria-label]=\\\"ariaLabel || null\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-checked]=\\\"_getAriaChecked()\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           (change)=\\\"_onInteractionEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n    <span matRipple class=\\\"mat-checkbox-ripple mat-focus-indicator\\\"\\n         [matRippleTrigger]=\\\"label\\\"\\n         [matRippleDisabled]=\\\"_isRippleDisabled()\\\"\\n         [matRippleRadius]=\\\"20\\\"\\n         [matRippleCentered]=\\\"true\\\"\\n         [matRippleAnimation]=\\\"{enterDuration: _animationMode === 'NoopAnimations' ? 0 : 150}\\\">\\n      <span class=\\\"mat-ripple-element mat-checkbox-persistent-ripple\\\"></span>\\n    </span>\\n    <span class=\\\"mat-checkbox-frame\\\"></span>\\n    <span class=\\\"mat-checkbox-background\\\">\\n      <svg version=\\\"1.1\\\"\\n           focusable=\\\"false\\\"\\n           class=\\\"mat-checkbox-checkmark\\\"\\n           viewBox=\\\"0 0 24 24\\\"\\n           aria-hidden=\\\"true\\\">\\n        <path class=\\\"mat-checkbox-checkmark-path\\\"\\n              fill=\\\"none\\\"\\n              stroke=\\\"white\\\"\\n              d=\\\"M4.1,12.7 9,17.6 20.3,6.3\\\"/>\\n      </svg>\\n      <!-- Element for rendering the indeterminate state checkbox. -->\\n      <span class=\\\"mat-checkbox-mixedmark\\\"></span>\\n    </span>\\n  </span>\\n  <span class=\\\"mat-checkbox-label\\\" #checkboxLabel (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\", styles: [\"@keyframes mat-checkbox-fade-in-background{0%{opacity:0}50%{opacity:1}}@keyframes mat-checkbox-fade-out-background{0%,50%{opacity:1}100%{opacity:0}}@keyframes mat-checkbox-unchecked-checked-checkmark-path{0%,50%{stroke-dashoffset:22.910259}50%{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1)}100%{stroke-dashoffset:0}}@keyframes mat-checkbox-unchecked-indeterminate-mixedmark{0%,68.2%{transform:scaleX(0)}68.2%{animation-timing-function:cubic-bezier(0, 0, 0, 1)}100%{transform:scaleX(1)}}@keyframes mat-checkbox-checked-unchecked-checkmark-path{from{animation-timing-function:cubic-bezier(0.4, 0, 1, 1);stroke-dashoffset:0}to{stroke-dashoffset:-22.910259}}@keyframes mat-checkbox-checked-indeterminate-checkmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(45deg)}}@keyframes mat-checkbox-indeterminate-checked-checkmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:0;transform:rotate(45deg)}to{opacity:1;transform:rotate(360deg)}}@keyframes mat-checkbox-checked-indeterminate-mixedmark{from{animation-timing-function:cubic-bezier(0, 0, 0.2, 0.1);opacity:0;transform:rotate(-45deg)}to{opacity:1;transform:rotate(0deg)}}@keyframes mat-checkbox-indeterminate-checked-mixedmark{from{animation-timing-function:cubic-bezier(0.14, 0, 0, 1);opacity:1;transform:rotate(0deg)}to{opacity:0;transform:rotate(315deg)}}@keyframes mat-checkbox-indeterminate-unchecked-mixedmark{0%{animation-timing-function:linear;opacity:1;transform:scaleX(1)}32.8%,100%{opacity:0;transform:scaleX(0)}}.mat-checkbox-background,.mat-checkbox-frame{top:0;left:0;right:0;bottom:0;position:absolute;border-radius:2px;box-sizing:border-box;pointer-events:none}.mat-checkbox{display:inline-block;transition:background 400ms cubic-bezier(0.25, 0.8, 0.25, 1),box-shadow 280ms cubic-bezier(0.4, 0, 0.2, 1);cursor:pointer;-webkit-tap-highlight-color:transparent}._mat-animation-noopable.mat-checkbox{transition:none;animation:none}.mat-checkbox .mat-ripple-element:not(.mat-checkbox-persistent-ripple){opacity:.16}.mat-checkbox .mat-checkbox-ripple{position:absolute;left:calc(50% - 20px);top:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.cdk-high-contrast-active .mat-checkbox.cdk-keyboard-focused .mat-checkbox-ripple{outline:solid 3px}.mat-checkbox-layout{-webkit-user-select:none;user-select:none;cursor:inherit;align-items:baseline;vertical-align:middle;display:inline-flex;white-space:nowrap}.mat-checkbox-label{-webkit-user-select:auto;user-select:auto}.mat-checkbox-inner-container{display:inline-block;height:16px;line-height:0;margin:auto;margin-right:8px;order:0;position:relative;vertical-align:middle;white-space:nowrap;width:16px;flex-shrink:0}[dir=rtl] .mat-checkbox-inner-container{margin-left:8px;margin-right:auto}.mat-checkbox-inner-container-no-side-margin{margin-left:0;margin-right:0}.mat-checkbox-frame{background-color:transparent;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1);border-width:2px;border-style:solid}._mat-animation-noopable .mat-checkbox-frame{transition:none}.mat-checkbox-background{align-items:center;display:inline-flex;justify-content:center;transition:background-color 90ms cubic-bezier(0, 0, 0.2, 0.1),opacity 90ms cubic-bezier(0, 0, 0.2, 0.1);-webkit-print-color-adjust:exact;color-adjust:exact}._mat-animation-noopable .mat-checkbox-background{transition:none}.cdk-high-contrast-active .mat-checkbox .mat-checkbox-background{background:none}.mat-checkbox-persistent-ripple{display:block;width:100%;height:100%;transform:none}.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:.04}.mat-checkbox.cdk-keyboard-focused .mat-checkbox-persistent-ripple{opacity:.12}.mat-checkbox-persistent-ripple,.mat-checkbox.mat-checkbox-disabled .mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{opacity:0}@media(hover: none){.mat-checkbox-inner-container:hover .mat-checkbox-persistent-ripple{display:none}}.mat-checkbox-checkmark{top:0;left:0;right:0;bottom:0;position:absolute;width:100%}.mat-checkbox-checkmark-path{stroke-dashoffset:22.910259;stroke-dasharray:22.910259;stroke-width:2.1333333333px}.cdk-high-contrast-black-on-white .mat-checkbox-checkmark-path{stroke:#000 !important}.mat-checkbox-mixedmark{width:calc(100% - 6px);height:2px;opacity:0;transform:scaleX(0) rotate(0deg);border-radius:2px}.cdk-high-contrast-active .mat-checkbox-mixedmark{height:0;border-top:solid 2px;margin-top:2px}.mat-checkbox-label-before .mat-checkbox-inner-container{order:1;margin-left:8px;margin-right:auto}[dir=rtl] .mat-checkbox-label-before .mat-checkbox-inner-container{margin-left:auto;margin-right:8px}.mat-checkbox-checked .mat-checkbox-checkmark{opacity:1}.mat-checkbox-checked .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-checked .mat-checkbox-mixedmark{transform:scaleX(1) rotate(-45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark{opacity:0;transform:rotate(45deg)}.mat-checkbox-indeterminate .mat-checkbox-checkmark-path{stroke-dashoffset:0}.mat-checkbox-indeterminate .mat-checkbox-mixedmark{opacity:1;transform:scaleX(1) rotate(0deg)}.mat-checkbox-unchecked .mat-checkbox-background{background-color:transparent}.mat-checkbox-disabled{cursor:default}.cdk-high-contrast-active .mat-checkbox-disabled{opacity:.5}.mat-checkbox-anim-unchecked-checked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-checked .mat-checkbox-checkmark-path{animation:180ms linear 0ms mat-checkbox-unchecked-checked-checkmark-path}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-in-background}.mat-checkbox-anim-unchecked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-unchecked-indeterminate-mixedmark}.mat-checkbox-anim-checked-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-checked-unchecked .mat-checkbox-checkmark-path{animation:90ms linear 0ms mat-checkbox-checked-unchecked-checkmark-path}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-checkmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-checkmark}.mat-checkbox-anim-checked-indeterminate .mat-checkbox-mixedmark{animation:90ms linear 0ms mat-checkbox-checked-indeterminate-mixedmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-checkmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-checkmark}.mat-checkbox-anim-indeterminate-checked .mat-checkbox-mixedmark{animation:500ms linear 0ms mat-checkbox-indeterminate-checked-mixedmark}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-background{animation:180ms linear 0ms mat-checkbox-fade-out-background}.mat-checkbox-anim-indeterminate-unchecked .mat-checkbox-mixedmark{animation:300ms linear 0ms mat-checkbox-indeterminate-unchecked-mixedmark}.mat-checkbox-input{bottom:0;left:50%}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.FocusMonitor }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['tabindex']\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_CHECKBOX_DEFAULT_OPTIONS]\n                    }] }];\n    }, propDecorators: { ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], ariaDescribedby: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], id: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], labelPosition: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], indeterminateChange: [{\n                type: Output\n            }], value: [{\n                type: Input\n            }], _inputElement: [{\n                type: ViewChild,\n                args: ['input']\n            }], ripple: [{\n                type: ViewChild,\n                args: [MatRipple]\n            }], checked: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], indeterminate: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_CHECKBOX_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatCheckboxRequiredValidator),\n    multi: true,\n};\n/**\n * Validator for Material checkbox's required attribute in template-driven checkbox.\n * Current CheckboxRequiredValidator only work with `input type=checkbox` and does not\n * work with `mat-checkbox`.\n */\nclass MatCheckboxRequiredValidator extends CheckboxRequiredValidator {\n}\nMatCheckboxRequiredValidator.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatCheckboxRequiredValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatCheckboxRequiredValidator.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatCheckboxRequiredValidator, selector: \"mat-checkbox[required][formControlName],\\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]\", providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatCheckboxRequiredValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `mat-checkbox[required][formControlName],\n             mat-checkbox[required][formControl], mat-checkbox[required][ngModel]`,\n                    providers: [MAT_CHECKBOX_REQUIRED_VALIDATOR],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** This module is used by both original and MDC-based checkbox implementations. */\nclass _MatCheckboxRequiredValidatorModule {\n}\n_MatCheckboxRequiredValidatorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n_MatCheckboxRequiredValidatorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule, declarations: [MatCheckboxRequiredValidator], exports: [MatCheckboxRequiredValidator] });\n_MatCheckboxRequiredValidatorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatCheckboxRequiredValidatorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [MatCheckboxRequiredValidator],\n                    declarations: [MatCheckboxRequiredValidator],\n                }]\n        }] });\nclass MatCheckboxModule {\n}\nMatCheckboxModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatCheckboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatCheckboxModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatCheckboxModule, declarations: [MatCheckbox], imports: [MatRippleModule, MatCommonModule, ObserversModule, _MatCheckboxRequiredValidatorModule], exports: [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule] });\nMatCheckboxModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatCheckboxModule, imports: [[MatRippleModule, MatCommonModule, ObserversModule, _MatCheckboxRequiredValidatorModule], MatCommonModule, _MatCheckboxRequiredValidatorModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatCheckboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatRippleModule, MatCommonModule, ObserversModule, _MatCheckboxRequiredValidatorModule],\n                    exports: [MatCheckbox, MatCommonModule, _MatCheckboxRequiredValidatorModule],\n                    declarations: [MatCheckbox],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR, MAT_CHECKBOX_DEFAULT_OPTIONS, MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY, MAT_CHECKBOX_REQUIRED_VALIDATOR, MatCheckbox, MatCheckboxChange, MatCheckboxModule, MatCheckboxRequiredValidator, _MatCheckboxRequiredValidatorModule };\n","import * as i0 from '@angular/core';\nimport { Version, InjectionToken, NgModule, Optional, Inject, inject, LOCALE_ID, Injectable, Directive, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, EventEmitter, Output } from '@angular/core';\nimport { BidiModule } from '@angular/cdk/bidi';\nimport { VERSION as VERSION$1 } from '@angular/cdk';\nimport * as i3 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i1$1 from '@angular/cdk/platform';\nimport { _isTestEnvironment, normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport * as i1 from '@angular/cdk/a11y';\nimport { isFakeMousedownFromScreenReader, isFakeTouchstartFromScreenReader } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty, coerceNumberProperty, coerceElement } from '@angular/cdk/coercion';\nimport { Subject, Observable } from 'rxjs';\nimport { startWith } from 'rxjs/operators';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { ENTER, SPACE, hasModifierKey } from '@angular/cdk/keycodes';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Current version of Angular Material. */\nconst VERSION = new Version('13.3.9');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nclass AnimationCurves {\n}\nAnimationCurves.STANDARD_CURVE = 'cubic-bezier(0.4,0.0,0.2,1)';\nAnimationCurves.DECELERATION_CURVE = 'cubic-bezier(0.0,0.0,0.2,1)';\nAnimationCurves.ACCELERATION_CURVE = 'cubic-bezier(0.4,0.0,1,1)';\nAnimationCurves.SHARP_CURVE = 'cubic-bezier(0.4,0.0,0.6,1)';\n/** @docs-private */\nclass AnimationDurations {\n}\nAnimationDurations.COMPLEX = '375ms';\nAnimationDurations.ENTERING = '225ms';\nAnimationDurations.EXITING = '195ms';\n\n/** @docs-private */\nfunction MATERIAL_SANITY_CHECKS_FACTORY() {\n    return true;\n}\n/** Injection token that configures whether the Material sanity checks are enabled. */\nconst MATERIAL_SANITY_CHECKS = new InjectionToken('mat-sanity-checks', {\n    providedIn: 'root',\n    factory: MATERIAL_SANITY_CHECKS_FACTORY,\n});\n/**\n * Module that captures anything that should be loaded and/or run for *all* Angular Material\n * components. This includes Bidi, etc.\n *\n * This module should be imported to each top-level component module (e.g., MatTabsModule).\n */\nclass MatCommonModule {\n    constructor(highContrastModeDetector, _sanityChecks, _document) {\n        this._sanityChecks = _sanityChecks;\n        this._document = _document;\n        /** Whether we've done the global sanity checks (e.g. a theme is loaded, there is a doctype). */\n        this._hasDoneGlobalChecks = false;\n        // While A11yModule also does this, we repeat it here to avoid importing A11yModule\n        // in MatCommonModule.\n        highContrastModeDetector._applyBodyHighContrastModeCssClasses();\n        if (!this._hasDoneGlobalChecks) {\n            this._hasDoneGlobalChecks = true;\n            if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                if (this._checkIsEnabled('doctype')) {\n                    _checkDoctypeIsDefined(this._document);\n                }\n                if (this._checkIsEnabled('theme')) {\n                    _checkThemeIsPresent(this._document);\n                }\n                if (this._checkIsEnabled('version')) {\n                    _checkCdkVersionMatch();\n                }\n            }\n        }\n    }\n    /** Gets whether a specific sanity check is enabled. */\n    _checkIsEnabled(name) {\n        if (_isTestEnvironment()) {\n            return false;\n        }\n        if (typeof this._sanityChecks === 'boolean') {\n            return this._sanityChecks;\n        }\n        return !!this._sanityChecks[name];\n    }\n}\nMatCommonModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatCommonModule, deps: [{ token: i1.HighContrastModeDetector }, { token: MATERIAL_SANITY_CHECKS, optional: true }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.NgModule });\nMatCommonModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatCommonModule, imports: [BidiModule], exports: [BidiModule] });\nMatCommonModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatCommonModule, imports: [[BidiModule], BidiModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatCommonModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [BidiModule],\n                    exports: [BidiModule],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i1.HighContrastModeDetector }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MATERIAL_SANITY_CHECKS]\n                    }] }, { type: Document, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\n/** Checks that the page has a doctype. */\nfunction _checkDoctypeIsDefined(doc) {\n    if (!doc.doctype) {\n        console.warn('Current document does not have a doctype. This may cause ' +\n            'some Angular Material components not to behave as expected.');\n    }\n}\n/** Checks that a theme has been included. */\nfunction _checkThemeIsPresent(doc) {\n    // We need to assert that the `body` is defined, because these checks run very early\n    // and the `body` won't be defined if the consumer put their scripts in the `head`.\n    if (!doc.body || typeof getComputedStyle !== 'function') {\n        return;\n    }\n    const testElement = doc.createElement('div');\n    testElement.classList.add('mat-theme-loaded-marker');\n    doc.body.appendChild(testElement);\n    const computedStyle = getComputedStyle(testElement);\n    // In some situations the computed style of the test element can be null. For example in\n    // Firefox, the computed style is null if an application is running inside of a hidden iframe.\n    // See: https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n    if (computedStyle && computedStyle.display !== 'none') {\n        console.warn('Could not find Angular Material core theme. Most Material ' +\n            'components may not work as expected. For more info refer ' +\n            'to the theming guide: https://material.angular.io/guide/theming');\n    }\n    testElement.remove();\n}\n/** Checks whether the Material version matches the CDK version. */\nfunction _checkCdkVersionMatch() {\n    if (VERSION.full !== VERSION$1.full) {\n        console.warn('The Angular Material version (' +\n            VERSION.full +\n            ') does not match ' +\n            'the Angular CDK version (' +\n            VERSION$1.full +\n            ').\\n' +\n            'Please ensure the versions of these two packages exactly match.');\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinDisabled(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._disabled = false;\n        }\n        get disabled() {\n            return this._disabled;\n        }\n        set disabled(value) {\n            this._disabled = coerceBooleanProperty(value);\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinColor(base, defaultColor) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this.defaultColor = defaultColor;\n            // Set the default color that can be specified from the mixin.\n            this.color = defaultColor;\n        }\n        get color() {\n            return this._color;\n        }\n        set color(value) {\n            const colorPalette = value || this.defaultColor;\n            if (colorPalette !== this._color) {\n                if (this._color) {\n                    this._elementRef.nativeElement.classList.remove(`mat-${this._color}`);\n                }\n                if (colorPalette) {\n                    this._elementRef.nativeElement.classList.add(`mat-${colorPalette}`);\n                }\n                this._color = colorPalette;\n            }\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinDisableRipple(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._disableRipple = false;\n        }\n        /** Whether the ripple effect is disabled or not. */\n        get disableRipple() {\n            return this._disableRipple;\n        }\n        set disableRipple(value) {\n            this._disableRipple = coerceBooleanProperty(value);\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinTabIndex(base, defaultTabIndex = 0) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            this._tabIndex = defaultTabIndex;\n            this.defaultTabIndex = defaultTabIndex;\n        }\n        get tabIndex() {\n            return this.disabled ? -1 : this._tabIndex;\n        }\n        set tabIndex(value) {\n            // If the specified tabIndex value is null or undefined, fall back to the default value.\n            this._tabIndex = value != null ? coerceNumberProperty(value) : this.defaultTabIndex;\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction mixinErrorState(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            // This class member exists as an interop with `MatFormFieldControl` which expects\n            // a public `stateChanges` observable to emit whenever the form field should be updated.\n            // The description is not specifically mentioning the error state, as classes using this\n            // mixin can/should emit an event in other cases too.\n            /** Emits whenever the component state changes. */\n            this.stateChanges = new Subject();\n            /** Whether the component is in an error state. */\n            this.errorState = false;\n        }\n        /** Updates the error state based on the provided error state matcher. */\n        updateErrorState() {\n            const oldState = this.errorState;\n            const parent = this._parentFormGroup || this._parentForm;\n            const matcher = this.errorStateMatcher || this._defaultErrorStateMatcher;\n            const control = this.ngControl ? this.ngControl.control : null;\n            const newState = matcher.isErrorState(control, parent);\n            if (newState !== oldState) {\n                this.errorState = newState;\n                this.stateChanges.next();\n            }\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Mixin to augment a directive with an initialized property that will emits when ngOnInit ends. */\nfunction mixinInitialized(base) {\n    return class extends base {\n        constructor(...args) {\n            super(...args);\n            /** Whether this directive has been marked as initialized. */\n            this._isInitialized = false;\n            /**\n             * List of subscribers that subscribed before the directive was initialized. Should be notified\n             * during _markInitialized. Set to null after pending subscribers are notified, and should\n             * not expect to be populated after.\n             */\n            this._pendingSubscribers = [];\n            /**\n             * Observable stream that emits when the directive initializes. If already initialized, the\n             * subscriber is stored to be notified once _markInitialized is called.\n             */\n            this.initialized = new Observable(subscriber => {\n                // If initialized, immediately notify the subscriber. Otherwise store the subscriber to notify\n                // when _markInitialized is called.\n                if (this._isInitialized) {\n                    this._notifySubscriber(subscriber);\n                }\n                else {\n                    this._pendingSubscribers.push(subscriber);\n                }\n            });\n        }\n        /**\n         * Marks the state as initialized and notifies pending subscribers. Should be called at the end\n         * of ngOnInit.\n         * @docs-private\n         */\n        _markInitialized() {\n            if (this._isInitialized && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw Error('This directive has already been marked as initialized and ' +\n                    'should not be called twice.');\n            }\n            this._isInitialized = true;\n            this._pendingSubscribers.forEach(this._notifySubscriber);\n            this._pendingSubscribers = null;\n        }\n        /** Emits and completes the subscriber stream (should only emit once). */\n        _notifySubscriber(subscriber) {\n            subscriber.next();\n            subscriber.complete();\n        }\n    };\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** InjectionToken for datepicker that can be used to override default locale code. */\nconst MAT_DATE_LOCALE = new InjectionToken('MAT_DATE_LOCALE', {\n    providedIn: 'root',\n    factory: MAT_DATE_LOCALE_FACTORY,\n});\n/** @docs-private */\nfunction MAT_DATE_LOCALE_FACTORY() {\n    return inject(LOCALE_ID);\n}\n/** Adapts type `D` to be usable as a date by cdk-based components that work with dates. */\nclass DateAdapter {\n    constructor() {\n        this._localeChanges = new Subject();\n        /** A stream that emits when the locale changes. */\n        this.localeChanges = this._localeChanges;\n    }\n    /**\n     * Given a potential date object, returns that same date object if it is\n     * a valid date, or `null` if it's not a valid date.\n     * @param obj The object to check.\n     * @returns A date or `null`.\n     */\n    getValidDateOrNull(obj) {\n        return this.isDateInstance(obj) && this.isValid(obj) ? obj : null;\n    }\n    /**\n     * Attempts to deserialize a value to a valid date object. This is different from parsing in that\n     * deserialize should only accept non-ambiguous, locale-independent formats (e.g. a ISO 8601\n     * string). The default implementation does not allow any deserialization, it simply checks that\n     * the given value is already a valid date object or null. The `<mat-datepicker>` will call this\n     * method on all of its `@Input()` properties that accept dates. It is therefore possible to\n     * support passing values from your backend directly to these properties by overriding this method\n     * to also deserialize the format used by your backend.\n     * @param value The value to be deserialized into a date object.\n     * @returns The deserialized date object, either a valid date, null if the value can be\n     *     deserialized into a null date (e.g. the empty string), or an invalid date.\n     */\n    deserialize(value) {\n        if (value == null || (this.isDateInstance(value) && this.isValid(value))) {\n            return value;\n        }\n        return this.invalid();\n    }\n    /**\n     * Sets the locale used for all dates.\n     * @param locale The new locale.\n     */\n    setLocale(locale) {\n        this.locale = locale;\n        this._localeChanges.next();\n    }\n    /**\n     * Compares two dates.\n     * @param first The first date to compare.\n     * @param second The second date to compare.\n     * @returns 0 if the dates are equal, a number less than 0 if the first date is earlier,\n     *     a number greater than 0 if the first date is later.\n     */\n    compareDate(first, second) {\n        return (this.getYear(first) - this.getYear(second) ||\n            this.getMonth(first) - this.getMonth(second) ||\n            this.getDate(first) - this.getDate(second));\n    }\n    /**\n     * Checks if two dates are equal.\n     * @param first The first date to check.\n     * @param second The second date to check.\n     * @returns Whether the two dates are equal.\n     *     Null dates are considered equal to other null dates.\n     */\n    sameDate(first, second) {\n        if (first && second) {\n            let firstValid = this.isValid(first);\n            let secondValid = this.isValid(second);\n            if (firstValid && secondValid) {\n                return !this.compareDate(first, second);\n            }\n            return firstValid == secondValid;\n        }\n        return first == second;\n    }\n    /**\n     * Clamp the given date between min and max dates.\n     * @param date The date to clamp.\n     * @param min The minimum value to allow. If null or omitted no min is enforced.\n     * @param max The maximum value to allow. If null or omitted no max is enforced.\n     * @returns `min` if `date` is less than `min`, `max` if date is greater than `max`,\n     *     otherwise `date`.\n     */\n    clampDate(date, min, max) {\n        if (min && this.compareDate(date, min) < 0) {\n            return min;\n        }\n        if (max && this.compareDate(date, max) > 0) {\n            return max;\n        }\n        return date;\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_DATE_FORMATS = new InjectionToken('mat-date-formats');\n\n/**\n * Matches strings that have the form of a valid RFC 3339 string\n * (https://tools.ietf.org/html/rfc3339). Note that the string may not actually be a valid date\n * because the regex will match strings an with out of bounds month, date, etc.\n */\nconst ISO_8601_REGEX = /^\\d{4}-\\d{2}-\\d{2}(?:T\\d{2}:\\d{2}:\\d{2}(?:\\.\\d+)?(?:Z|(?:(?:\\+|-)\\d{2}:\\d{2}))?)?$/;\n/** Creates an array and fills it with values. */\nfunction range(length, valueFunction) {\n    const valuesArray = Array(length);\n    for (let i = 0; i < length; i++) {\n        valuesArray[i] = valueFunction(i);\n    }\n    return valuesArray;\n}\n/** Adapts the native JS Date for use with cdk-based components that work with dates. */\nclass NativeDateAdapter extends DateAdapter {\n    constructor(matDateLocale, \n    /**\n     * @deprecated No longer being used. To be removed.\n     * @breaking-change 14.0.0\n     */\n    _platform) {\n        super();\n        /**\n         * @deprecated No longer being used. To be removed.\n         * @breaking-change 14.0.0\n         */\n        this.useUtcForDisplay = false;\n        super.setLocale(matDateLocale);\n    }\n    getYear(date) {\n        return date.getFullYear();\n    }\n    getMonth(date) {\n        return date.getMonth();\n    }\n    getDate(date) {\n        return date.getDate();\n    }\n    getDayOfWeek(date) {\n        return date.getDay();\n    }\n    getMonthNames(style) {\n        const dtf = new Intl.DateTimeFormat(this.locale, { month: style, timeZone: 'utc' });\n        return range(12, i => this._format(dtf, new Date(2017, i, 1)));\n    }\n    getDateNames() {\n        const dtf = new Intl.DateTimeFormat(this.locale, { day: 'numeric', timeZone: 'utc' });\n        return range(31, i => this._format(dtf, new Date(2017, 0, i + 1)));\n    }\n    getDayOfWeekNames(style) {\n        const dtf = new Intl.DateTimeFormat(this.locale, { weekday: style, timeZone: 'utc' });\n        return range(7, i => this._format(dtf, new Date(2017, 0, i + 1)));\n    }\n    getYearName(date) {\n        const dtf = new Intl.DateTimeFormat(this.locale, { year: 'numeric', timeZone: 'utc' });\n        return this._format(dtf, date);\n    }\n    getFirstDayOfWeek() {\n        // We can't tell using native JS Date what the first day of the week is, we default to Sunday.\n        return 0;\n    }\n    getNumDaysInMonth(date) {\n        return this.getDate(this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + 1, 0));\n    }\n    clone(date) {\n        return new Date(date.getTime());\n    }\n    createDate(year, month, date) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            // Check for invalid month and date (except upper bound on date which we have to check after\n            // creating the Date).\n            if (month < 0 || month > 11) {\n                throw Error(`Invalid month index \"${month}\". Month index has to be between 0 and 11.`);\n            }\n            if (date < 1) {\n                throw Error(`Invalid date \"${date}\". Date has to be greater than 0.`);\n            }\n        }\n        let result = this._createDateWithOverflow(year, month, date);\n        // Check that the date wasn't above the upper bound for the month, causing the month to overflow\n        if (result.getMonth() != month && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error(`Invalid date \"${date}\" for month with index \"${month}\".`);\n        }\n        return result;\n    }\n    today() {\n        return new Date();\n    }\n    parse(value) {\n        // We have no way using the native JS Date to set the parse format or locale, so we ignore these\n        // parameters.\n        if (typeof value == 'number') {\n            return new Date(value);\n        }\n        return value ? new Date(Date.parse(value)) : null;\n    }\n    format(date, displayFormat) {\n        if (!this.isValid(date)) {\n            throw Error('NativeDateAdapter: Cannot format invalid date.');\n        }\n        const dtf = new Intl.DateTimeFormat(this.locale, Object.assign(Object.assign({}, displayFormat), { timeZone: 'utc' }));\n        return this._format(dtf, date);\n    }\n    addCalendarYears(date, years) {\n        return this.addCalendarMonths(date, years * 12);\n    }\n    addCalendarMonths(date, months) {\n        let newDate = this._createDateWithOverflow(this.getYear(date), this.getMonth(date) + months, this.getDate(date));\n        // It's possible to wind up in the wrong month if the original month has more days than the new\n        // month. In this case we want to go to the last day of the desired month.\n        // Note: the additional + 12 % 12 ensures we end up with a positive number, since JS % doesn't\n        // guarantee this.\n        if (this.getMonth(newDate) != (((this.getMonth(date) + months) % 12) + 12) % 12) {\n            newDate = this._createDateWithOverflow(this.getYear(newDate), this.getMonth(newDate), 0);\n        }\n        return newDate;\n    }\n    addCalendarDays(date, days) {\n        return this._createDateWithOverflow(this.getYear(date), this.getMonth(date), this.getDate(date) + days);\n    }\n    toIso8601(date) {\n        return [\n            date.getUTCFullYear(),\n            this._2digit(date.getUTCMonth() + 1),\n            this._2digit(date.getUTCDate()),\n        ].join('-');\n    }\n    /**\n     * Returns the given value if given a valid Date or null. Deserializes valid ISO 8601 strings\n     * (https://www.ietf.org/rfc/rfc3339.txt) into valid Dates and empty string into null. Returns an\n     * invalid date for all other values.\n     */\n    deserialize(value) {\n        if (typeof value === 'string') {\n            if (!value) {\n                return null;\n            }\n            // The `Date` constructor accepts formats other than ISO 8601, so we need to make sure the\n            // string is the right format first.\n            if (ISO_8601_REGEX.test(value)) {\n                let date = new Date(value);\n                if (this.isValid(date)) {\n                    return date;\n                }\n            }\n        }\n        return super.deserialize(value);\n    }\n    isDateInstance(obj) {\n        return obj instanceof Date;\n    }\n    isValid(date) {\n        return !isNaN(date.getTime());\n    }\n    invalid() {\n        return new Date(NaN);\n    }\n    /** Creates a date but allows the month and date to overflow. */\n    _createDateWithOverflow(year, month, date) {\n        // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n        // To work around this we use `setFullYear` and `setHours` instead.\n        const d = new Date();\n        d.setFullYear(year, month, date);\n        d.setHours(0, 0, 0, 0);\n        return d;\n    }\n    /**\n     * Pads a number to make it two digits.\n     * @param n The number to pad.\n     * @returns The padded number.\n     */\n    _2digit(n) {\n        return ('00' + n).slice(-2);\n    }\n    /**\n     * When converting Date object to string, javascript built-in functions may return wrong\n     * results because it applies its internal DST rules. The DST rules around the world change\n     * very frequently, and the current valid rule is not always valid in previous years though.\n     * We work around this problem building a new Date object which has its internal UTC\n     * representation with the local date and time.\n     * @param dtf Intl.DateTimeFormat object, containg the desired string format. It must have\n     *    timeZone set to 'utc' to work fine.\n     * @param date Date from which we want to get the string representation according to dtf\n     * @returns A Date object with its UTC representation based on the passed in date info\n     */\n    _format(dtf, date) {\n        // Passing the year to the constructor causes year numbers <100 to be converted to 19xx.\n        // To work around this we use `setUTCFullYear` and `setUTCHours` instead.\n        const d = new Date();\n        d.setUTCFullYear(date.getFullYear(), date.getMonth(), date.getDate());\n        d.setUTCHours(date.getHours(), date.getMinutes(), date.getSeconds(), date.getMilliseconds());\n        return dtf.format(d);\n    }\n}\nNativeDateAdapter.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: NativeDateAdapter, deps: [{ token: MAT_DATE_LOCALE, optional: true }, { token: i1$1.Platform }], target: i0.ɵɵFactoryTarget.Injectable });\nNativeDateAdapter.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: NativeDateAdapter });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: NativeDateAdapter, decorators: [{\n            type: Injectable\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_DATE_LOCALE]\n                    }] }, { type: i1$1.Platform }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_NATIVE_DATE_FORMATS = {\n    parse: {\n        dateInput: null,\n    },\n    display: {\n        dateInput: { year: 'numeric', month: 'numeric', day: 'numeric' },\n        monthYearLabel: { year: 'numeric', month: 'short' },\n        dateA11yLabel: { year: 'numeric', month: 'long', day: 'numeric' },\n        monthYearA11yLabel: { year: 'numeric', month: 'long' },\n    },\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass NativeDateModule {\n}\nNativeDateModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: NativeDateModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nNativeDateModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: NativeDateModule });\nNativeDateModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: NativeDateModule, providers: [{ provide: DateAdapter, useClass: NativeDateAdapter }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: NativeDateModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    providers: [{ provide: DateAdapter, useClass: NativeDateAdapter }],\n                }]\n        }] });\nclass MatNativeDateModule {\n}\nMatNativeDateModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatNativeDateModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatNativeDateModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatNativeDateModule, imports: [NativeDateModule] });\nMatNativeDateModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatNativeDateModule, providers: [{ provide: MAT_DATE_FORMATS, useValue: MAT_NATIVE_DATE_FORMATS }], imports: [[NativeDateModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatNativeDateModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [NativeDateModule],\n                    providers: [{ provide: MAT_DATE_FORMATS, useValue: MAT_NATIVE_DATE_FORMATS }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Error state matcher that matches when a control is invalid and dirty. */\nclass ShowOnDirtyErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.dirty || (form && form.submitted)));\n    }\n}\nShowOnDirtyErrorStateMatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nShowOnDirtyErrorStateMatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ShowOnDirtyErrorStateMatcher, decorators: [{\n            type: Injectable\n        }] });\n/** Provider that defines how form controls behave with regards to displaying error messages. */\nclass ErrorStateMatcher {\n    isErrorState(control, form) {\n        return !!(control && control.invalid && (control.touched || (form && form.submitted)));\n    }\n}\nErrorStateMatcher.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ErrorStateMatcher, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nErrorStateMatcher.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ErrorStateMatcher, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: ErrorStateMatcher, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Shared directive to count lines inside a text area, such as a list item.\n * Line elements can be extracted with a @ContentChildren(MatLine) query, then\n * counted by checking the query list's length.\n */\nclass MatLine {\n}\nMatLine.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatLine, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatLine.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatLine, selector: \"[mat-line], [matLine]\", host: { classAttribute: \"mat-line\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatLine, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-line], [matLine]',\n                    host: { 'class': 'mat-line' },\n                }]\n        }] });\n/**\n * Helper that takes a query list of lines and sets the correct class on the host.\n * @docs-private\n */\nfunction setLines(lines, element, prefix = 'mat') {\n    // Note: doesn't need to unsubscribe, because `changes`\n    // gets completed by Angular when the view is destroyed.\n    lines.changes.pipe(startWith(lines)).subscribe(({ length }) => {\n        setClass(element, `${prefix}-2-line`, false);\n        setClass(element, `${prefix}-3-line`, false);\n        setClass(element, `${prefix}-multi-line`, false);\n        if (length === 2 || length === 3) {\n            setClass(element, `${prefix}-${length}-line`, true);\n        }\n        else if (length > 3) {\n            setClass(element, `${prefix}-multi-line`, true);\n        }\n    });\n}\n/** Adds or removes a class from an element. */\nfunction setClass(element, className, isAdd) {\n    element.nativeElement.classList.toggle(className, isAdd);\n}\nclass MatLineModule {\n}\nMatLineModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatLineModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatLineModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatLineModule, declarations: [MatLine], imports: [MatCommonModule], exports: [MatLine, MatCommonModule] });\nMatLineModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatLineModule, imports: [[MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatLineModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatLine, MatCommonModule],\n                    declarations: [MatLine],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Reference to a previously launched ripple element.\n */\nclass RippleRef {\n    constructor(_renderer, \n    /** Reference to the ripple HTML element. */\n    element, \n    /** Ripple configuration used for the ripple. */\n    config) {\n        this._renderer = _renderer;\n        this.element = element;\n        this.config = config;\n        /** Current state of the ripple. */\n        this.state = 3 /* HIDDEN */;\n    }\n    /** Fades out the ripple element. */\n    fadeOut() {\n        this._renderer.fadeOutRipple(this);\n    }\n}\n\n// TODO: import these values from `@material/ripple` eventually.\n/**\n * Default ripple animation configuration for ripples without an explicit\n * animation config specified.\n */\nconst defaultRippleAnimationConfig = {\n    enterDuration: 225,\n    exitDuration: 150,\n};\n/**\n * Timeout for ignoring mouse events. Mouse events will be temporary ignored after touch\n * events to avoid synthetic mouse events.\n */\nconst ignoreMouseEventsTimeout = 800;\n/** Options that apply to all the event listeners that are bound by the ripple renderer. */\nconst passiveEventOptions = normalizePassiveListenerOptions({ passive: true });\n/** Events that signal that the pointer is down. */\nconst pointerDownEvents = ['mousedown', 'touchstart'];\n/** Events that signal that the pointer is up. */\nconst pointerUpEvents = ['mouseup', 'mouseleave', 'touchend', 'touchcancel'];\n/**\n * Helper service that performs DOM manipulations. Not intended to be used outside this module.\n * The constructor takes a reference to the ripple directive's host element and a map of DOM\n * event handlers to be installed on the element that triggers ripple animations.\n * This will eventually become a custom renderer once Angular support exists.\n * @docs-private\n */\nclass RippleRenderer {\n    constructor(_target, _ngZone, elementOrElementRef, platform) {\n        this._target = _target;\n        this._ngZone = _ngZone;\n        /** Whether the pointer is currently down or not. */\n        this._isPointerDown = false;\n        /** Set of currently active ripple references. */\n        this._activeRipples = new Set();\n        /** Whether pointer-up event listeners have been registered. */\n        this._pointerUpEventsRegistered = false;\n        // Only do anything if we're on the browser.\n        if (platform.isBrowser) {\n            this._containerElement = coerceElement(elementOrElementRef);\n        }\n    }\n    /**\n     * Fades in a ripple at the given coordinates.\n     * @param x Coordinate within the element, along the X axis at which to start the ripple.\n     * @param y Coordinate within the element, along the Y axis at which to start the ripple.\n     * @param config Extra ripple options.\n     */\n    fadeInRipple(x, y, config = {}) {\n        const containerRect = (this._containerRect =\n            this._containerRect || this._containerElement.getBoundingClientRect());\n        const animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), config.animation);\n        if (config.centered) {\n            x = containerRect.left + containerRect.width / 2;\n            y = containerRect.top + containerRect.height / 2;\n        }\n        const radius = config.radius || distanceToFurthestCorner(x, y, containerRect);\n        const offsetX = x - containerRect.left;\n        const offsetY = y - containerRect.top;\n        const duration = animationConfig.enterDuration;\n        const ripple = document.createElement('div');\n        ripple.classList.add('mat-ripple-element');\n        ripple.style.left = `${offsetX - radius}px`;\n        ripple.style.top = `${offsetY - radius}px`;\n        ripple.style.height = `${radius * 2}px`;\n        ripple.style.width = `${radius * 2}px`;\n        // If a custom color has been specified, set it as inline style. If no color is\n        // set, the default color will be applied through the ripple theme styles.\n        if (config.color != null) {\n            ripple.style.backgroundColor = config.color;\n        }\n        ripple.style.transitionDuration = `${duration}ms`;\n        this._containerElement.appendChild(ripple);\n        // By default the browser does not recalculate the styles of dynamically created\n        // ripple elements. This is critical because then the `scale` would not animate properly.\n        enforceStyleRecalculation(ripple);\n        ripple.style.transform = 'scale(1)';\n        // Exposed reference to the ripple that will be returned.\n        const rippleRef = new RippleRef(this, ripple, config);\n        rippleRef.state = 0 /* FADING_IN */;\n        // Add the ripple reference to the list of all active ripples.\n        this._activeRipples.add(rippleRef);\n        if (!config.persistent) {\n            this._mostRecentTransientRipple = rippleRef;\n        }\n        // Wait for the ripple element to be completely faded in.\n        // Once it's faded in, the ripple can be hidden immediately if the mouse is released.\n        this._runTimeoutOutsideZone(() => {\n            const isMostRecentTransientRipple = rippleRef === this._mostRecentTransientRipple;\n            rippleRef.state = 1 /* VISIBLE */;\n            // When the timer runs out while the user has kept their pointer down, we want to\n            // keep only the persistent ripples and the latest transient ripple. We do this,\n            // because we don't want stacked transient ripples to appear after their enter\n            // animation has finished.\n            if (!config.persistent && (!isMostRecentTransientRipple || !this._isPointerDown)) {\n                rippleRef.fadeOut();\n            }\n        }, duration);\n        return rippleRef;\n    }\n    /** Fades out a ripple reference. */\n    fadeOutRipple(rippleRef) {\n        const wasActive = this._activeRipples.delete(rippleRef);\n        if (rippleRef === this._mostRecentTransientRipple) {\n            this._mostRecentTransientRipple = null;\n        }\n        // Clear out the cached bounding rect if we have no more ripples.\n        if (!this._activeRipples.size) {\n            this._containerRect = null;\n        }\n        // For ripples that are not active anymore, don't re-run the fade-out animation.\n        if (!wasActive) {\n            return;\n        }\n        const rippleEl = rippleRef.element;\n        const animationConfig = Object.assign(Object.assign({}, defaultRippleAnimationConfig), rippleRef.config.animation);\n        rippleEl.style.transitionDuration = `${animationConfig.exitDuration}ms`;\n        rippleEl.style.opacity = '0';\n        rippleRef.state = 2 /* FADING_OUT */;\n        // Once the ripple faded out, the ripple can be safely removed from the DOM.\n        this._runTimeoutOutsideZone(() => {\n            rippleRef.state = 3 /* HIDDEN */;\n            rippleEl.remove();\n        }, animationConfig.exitDuration);\n    }\n    /** Fades out all currently active ripples. */\n    fadeOutAll() {\n        this._activeRipples.forEach(ripple => ripple.fadeOut());\n    }\n    /** Fades out all currently active non-persistent ripples. */\n    fadeOutAllNonPersistent() {\n        this._activeRipples.forEach(ripple => {\n            if (!ripple.config.persistent) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    /** Sets up the trigger event listeners */\n    setupTriggerEvents(elementOrElementRef) {\n        const element = coerceElement(elementOrElementRef);\n        if (!element || element === this._triggerElement) {\n            return;\n        }\n        // Remove all previously registered event listeners from the trigger element.\n        this._removeTriggerEvents();\n        this._triggerElement = element;\n        this._registerEvents(pointerDownEvents);\n    }\n    /**\n     * Handles all registered events.\n     * @docs-private\n     */\n    handleEvent(event) {\n        if (event.type === 'mousedown') {\n            this._onMousedown(event);\n        }\n        else if (event.type === 'touchstart') {\n            this._onTouchStart(event);\n        }\n        else {\n            this._onPointerUp();\n        }\n        // If pointer-up events haven't been registered yet, do so now.\n        // We do this on-demand in order to reduce the total number of event listeners\n        // registered by the ripples, which speeds up the rendering time for large UIs.\n        if (!this._pointerUpEventsRegistered) {\n            this._registerEvents(pointerUpEvents);\n            this._pointerUpEventsRegistered = true;\n        }\n    }\n    /** Function being called whenever the trigger is being pressed using mouse. */\n    _onMousedown(event) {\n        // Screen readers will fire fake mouse events for space/enter. Skip launching a\n        // ripple in this case for consistency with the non-screen-reader experience.\n        const isFakeMousedown = isFakeMousedownFromScreenReader(event);\n        const isSyntheticEvent = this._lastTouchStartEvent &&\n            Date.now() < this._lastTouchStartEvent + ignoreMouseEventsTimeout;\n        if (!this._target.rippleDisabled && !isFakeMousedown && !isSyntheticEvent) {\n            this._isPointerDown = true;\n            this.fadeInRipple(event.clientX, event.clientY, this._target.rippleConfig);\n        }\n    }\n    /** Function being called whenever the trigger is being pressed using touch. */\n    _onTouchStart(event) {\n        if (!this._target.rippleDisabled && !isFakeTouchstartFromScreenReader(event)) {\n            // Some browsers fire mouse events after a `touchstart` event. Those synthetic mouse\n            // events will launch a second ripple if we don't ignore mouse events for a specific\n            // time after a touchstart event.\n            this._lastTouchStartEvent = Date.now();\n            this._isPointerDown = true;\n            // Use `changedTouches` so we skip any touches where the user put\n            // their finger down, but used another finger to tap the element again.\n            const touches = event.changedTouches;\n            for (let i = 0; i < touches.length; i++) {\n                this.fadeInRipple(touches[i].clientX, touches[i].clientY, this._target.rippleConfig);\n            }\n        }\n    }\n    /** Function being called whenever the trigger is being released. */\n    _onPointerUp() {\n        if (!this._isPointerDown) {\n            return;\n        }\n        this._isPointerDown = false;\n        // Fade-out all ripples that are visible and not persistent.\n        this._activeRipples.forEach(ripple => {\n            // By default, only ripples that are completely visible will fade out on pointer release.\n            // If the `terminateOnPointerUp` option is set, ripples that still fade in will also fade out.\n            const isVisible = ripple.state === 1 /* VISIBLE */ ||\n                (ripple.config.terminateOnPointerUp && ripple.state === 0 /* FADING_IN */);\n            if (!ripple.config.persistent && isVisible) {\n                ripple.fadeOut();\n            }\n        });\n    }\n    /** Runs a timeout outside of the Angular zone to avoid triggering the change detection. */\n    _runTimeoutOutsideZone(fn, delay = 0) {\n        this._ngZone.runOutsideAngular(() => setTimeout(fn, delay));\n    }\n    /** Registers event listeners for a given list of events. */\n    _registerEvents(eventTypes) {\n        this._ngZone.runOutsideAngular(() => {\n            eventTypes.forEach(type => {\n                this._triggerElement.addEventListener(type, this, passiveEventOptions);\n            });\n        });\n    }\n    /** Removes previously registered event listeners from the trigger element. */\n    _removeTriggerEvents() {\n        if (this._triggerElement) {\n            pointerDownEvents.forEach(type => {\n                this._triggerElement.removeEventListener(type, this, passiveEventOptions);\n            });\n            if (this._pointerUpEventsRegistered) {\n                pointerUpEvents.forEach(type => {\n                    this._triggerElement.removeEventListener(type, this, passiveEventOptions);\n                });\n            }\n        }\n    }\n}\n/** Enforces a style recalculation of a DOM element by computing its styles. */\nfunction enforceStyleRecalculation(element) {\n    // Enforce a style recalculation by calling `getComputedStyle` and accessing any property.\n    // Calling `getPropertyValue` is important to let optimizers know that this is not a noop.\n    // See: https://gist.github.com/paulirish/5d52fb081b3570c81e3a\n    window.getComputedStyle(element).getPropertyValue('opacity');\n}\n/**\n * Returns the distance from the point (x, y) to the furthest corner of a rectangle.\n */\nfunction distanceToFurthestCorner(x, y, rect) {\n    const distX = Math.max(Math.abs(x - rect.left), Math.abs(x - rect.right));\n    const distY = Math.max(Math.abs(y - rect.top), Math.abs(y - rect.bottom));\n    return Math.sqrt(distX * distX + distY * distY);\n}\n\n/** Injection token that can be used to specify the global ripple options. */\nconst MAT_RIPPLE_GLOBAL_OPTIONS = new InjectionToken('mat-ripple-global-options');\nclass MatRipple {\n    constructor(_elementRef, ngZone, platform, globalOptions, _animationMode) {\n        this._elementRef = _elementRef;\n        this._animationMode = _animationMode;\n        /**\n         * If set, the radius in pixels of foreground ripples when fully expanded. If unset, the radius\n         * will be the distance from the center of the ripple to the furthest corner of the host element's\n         * bounding rectangle.\n         */\n        this.radius = 0;\n        this._disabled = false;\n        /** Whether ripple directive is initialized and the input bindings are set. */\n        this._isInitialized = false;\n        this._globalOptions = globalOptions || {};\n        this._rippleRenderer = new RippleRenderer(this, ngZone, _elementRef, platform);\n    }\n    /**\n     * Whether click events will not trigger the ripple. Ripples can be still launched manually\n     * by using the `launch()` method.\n     */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        if (value) {\n            this.fadeOutAllNonPersistent();\n        }\n        this._disabled = value;\n        this._setupTriggerEventsIfEnabled();\n    }\n    /**\n     * The element that triggers the ripple when click events are received.\n     * Defaults to the directive's host element.\n     */\n    get trigger() {\n        return this._trigger || this._elementRef.nativeElement;\n    }\n    set trigger(trigger) {\n        this._trigger = trigger;\n        this._setupTriggerEventsIfEnabled();\n    }\n    ngOnInit() {\n        this._isInitialized = true;\n        this._setupTriggerEventsIfEnabled();\n    }\n    ngOnDestroy() {\n        this._rippleRenderer._removeTriggerEvents();\n    }\n    /** Fades out all currently showing ripple elements. */\n    fadeOutAll() {\n        this._rippleRenderer.fadeOutAll();\n    }\n    /** Fades out all currently showing non-persistent ripple elements. */\n    fadeOutAllNonPersistent() {\n        this._rippleRenderer.fadeOutAllNonPersistent();\n    }\n    /**\n     * Ripple configuration from the directive's input values.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleConfig() {\n        return {\n            centered: this.centered,\n            radius: this.radius,\n            color: this.color,\n            animation: Object.assign(Object.assign(Object.assign({}, this._globalOptions.animation), (this._animationMode === 'NoopAnimations' ? { enterDuration: 0, exitDuration: 0 } : {})), this.animation),\n            terminateOnPointerUp: this._globalOptions.terminateOnPointerUp,\n        };\n    }\n    /**\n     * Whether ripples on pointer-down are disabled or not.\n     * @docs-private Implemented as part of RippleTarget\n     */\n    get rippleDisabled() {\n        return this.disabled || !!this._globalOptions.disabled;\n    }\n    /** Sets up the trigger event listeners if ripples are enabled. */\n    _setupTriggerEventsIfEnabled() {\n        if (!this.disabled && this._isInitialized) {\n            this._rippleRenderer.setupTriggerEvents(this.trigger);\n        }\n    }\n    /** Launches a manual ripple at the specified coordinated or just by the ripple config. */\n    launch(configOrX, y = 0, config) {\n        if (typeof configOrX === 'number') {\n            return this._rippleRenderer.fadeInRipple(configOrX, y, Object.assign(Object.assign({}, this.rippleConfig), config));\n        }\n        else {\n            return this._rippleRenderer.fadeInRipple(0, 0, Object.assign(Object.assign({}, this.rippleConfig), configOrX));\n        }\n    }\n}\nMatRipple.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRipple, deps: [{ token: i0.ElementRef }, { token: i0.NgZone }, { token: i1$1.Platform }, { token: MAT_RIPPLE_GLOBAL_OPTIONS, optional: true }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatRipple.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: { color: [\"matRippleColor\", \"color\"], unbounded: [\"matRippleUnbounded\", \"unbounded\"], centered: [\"matRippleCentered\", \"centered\"], radius: [\"matRippleRadius\", \"radius\"], animation: [\"matRippleAnimation\", \"animation\"], disabled: [\"matRippleDisabled\", \"disabled\"], trigger: [\"matRippleTrigger\", \"trigger\"] }, host: { properties: { \"class.mat-ripple-unbounded\": \"unbounded\" }, classAttribute: \"mat-ripple\" }, exportAs: [\"matRipple\"], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRipple, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[mat-ripple], [matRipple]',\n                    exportAs: 'matRipple',\n                    host: {\n                        'class': 'mat-ripple',\n                        '[class.mat-ripple-unbounded]': 'unbounded',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.NgZone }, { type: i1$1.Platform }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_RIPPLE_GLOBAL_OPTIONS]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { color: [{\n                type: Input,\n                args: ['matRippleColor']\n            }], unbounded: [{\n                type: Input,\n                args: ['matRippleUnbounded']\n            }], centered: [{\n                type: Input,\n                args: ['matRippleCentered']\n            }], radius: [{\n                type: Input,\n                args: ['matRippleRadius']\n            }], animation: [{\n                type: Input,\n                args: ['matRippleAnimation']\n            }], disabled: [{\n                type: Input,\n                args: ['matRippleDisabled']\n            }], trigger: [{\n                type: Input,\n                args: ['matRippleTrigger']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatRippleModule {\n}\nMatRippleModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRippleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatRippleModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRippleModule, declarations: [MatRipple], imports: [MatCommonModule], exports: [MatRipple, MatCommonModule] });\nMatRippleModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRippleModule, imports: [[MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRippleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatRipple, MatCommonModule],\n                    declarations: [MatRipple],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Component that shows a simplified checkbox without including any kind of \"real\" checkbox.\n * Meant to be used when the checkbox is purely decorative and a large number of them will be\n * included, such as for the options in a multi-select. Uses no SVGs or complex animations.\n * Note that theming is meant to be handled by the parent element, e.g.\n * `mat-primary .mat-pseudo-checkbox`.\n *\n * Note that this component will be completely invisible to screen-reader users. This is *not*\n * interchangeable with `<mat-checkbox>` and should *not* be used if the user would directly\n * interact with the checkbox. The pseudo-checkbox should only be used as an implementation detail\n * of more complex components that appropriately handle selected / checked state.\n * @docs-private\n */\nclass MatPseudoCheckbox {\n    constructor(_animationMode) {\n        this._animationMode = _animationMode;\n        /** Display state of the checkbox. */\n        this.state = 'unchecked';\n        /** Whether the checkbox is disabled. */\n        this.disabled = false;\n    }\n}\nMatPseudoCheckbox.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPseudoCheckbox, deps: [{ token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatPseudoCheckbox.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatPseudoCheckbox, selector: \"mat-pseudo-checkbox\", inputs: { state: \"state\", disabled: \"disabled\" }, host: { properties: { \"class.mat-pseudo-checkbox-indeterminate\": \"state === \\\"indeterminate\\\"\", \"class.mat-pseudo-checkbox-checked\": \"state === \\\"checked\\\"\", \"class.mat-pseudo-checkbox-disabled\": \"disabled\", \"class._mat-animation-noopable\": \"_animationMode === \\\"NoopAnimations\\\"\" }, classAttribute: \"mat-pseudo-checkbox\" }, ngImport: i0, template: '', isInline: true, styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPseudoCheckbox, decorators: [{\n            type: Component,\n            args: [{ encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, selector: 'mat-pseudo-checkbox', template: '', host: {\n                        'class': 'mat-pseudo-checkbox',\n                        '[class.mat-pseudo-checkbox-indeterminate]': 'state === \"indeterminate\"',\n                        '[class.mat-pseudo-checkbox-checked]': 'state === \"checked\"',\n                        '[class.mat-pseudo-checkbox-disabled]': 'disabled',\n                        '[class._mat-animation-noopable]': '_animationMode === \"NoopAnimations\"',\n                    }, styles: [\".mat-pseudo-checkbox{width:16px;height:16px;border:2px solid;border-radius:2px;cursor:pointer;display:inline-block;vertical-align:middle;box-sizing:border-box;position:relative;flex-shrink:0;transition:border-color 90ms cubic-bezier(0, 0, 0.2, 0.1),background-color 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox::after{position:absolute;opacity:0;content:\\\"\\\";border-bottom:2px solid currentColor;transition:opacity 90ms cubic-bezier(0, 0, 0.2, 0.1)}.mat-pseudo-checkbox.mat-pseudo-checkbox-checked,.mat-pseudo-checkbox.mat-pseudo-checkbox-indeterminate{border-color:transparent}._mat-animation-noopable.mat-pseudo-checkbox{transition:none;animation:none}._mat-animation-noopable.mat-pseudo-checkbox::after{transition:none}.mat-pseudo-checkbox-disabled{cursor:default}.mat-pseudo-checkbox-indeterminate::after{top:5px;left:1px;width:10px;opacity:1;border-radius:2px}.mat-pseudo-checkbox-checked::after{top:2.4px;left:1px;width:8px;height:3px;border-left:2px solid currentColor;transform:rotate(-45deg);opacity:1;box-sizing:content-box}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { state: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatPseudoCheckboxModule {\n}\nMatPseudoCheckboxModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPseudoCheckboxModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatPseudoCheckboxModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPseudoCheckboxModule, declarations: [MatPseudoCheckbox], imports: [MatCommonModule], exports: [MatPseudoCheckbox] });\nMatPseudoCheckboxModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPseudoCheckboxModule, imports: [[MatCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPseudoCheckboxModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule],\n                    exports: [MatPseudoCheckbox],\n                    declarations: [MatPseudoCheckbox],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token used to provide the parent component to options.\n */\nconst MAT_OPTION_PARENT_COMPONENT = new InjectionToken('MAT_OPTION_PARENT_COMPONENT');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Notes on the accessibility pattern used for `mat-optgroup`.\n// The option group has two different \"modes\": regular and inert. The regular mode uses the\n// recommended a11y pattern which has `role=\"group\"` on the group element with `aria-labelledby`\n// pointing to the label. This works for `mat-select`, but it seems to hit a bug for autocomplete\n// under VoiceOver where the group doesn't get read out at all. The bug appears to be that if\n// there's __any__ a11y-related attribute on the group (e.g. `role` or `aria-labelledby`),\n// VoiceOver on Safari won't read it out.\n// We've introduced the `inert` mode as a workaround. Under this mode, all a11y attributes are\n// removed from the group, and we get the screen reader to read out the group label by mirroring it\n// inside an invisible element in the option. This is sub-optimal, because the screen reader will\n// repeat the group label on each navigation, whereas the default pattern only reads the group when\n// the user enters a new group. The following alternate approaches were considered:\n// 1. Reading out the group label using the `LiveAnnouncer` solves the problem, but we can't control\n//    when the text will be read out so sometimes it comes in too late or never if the user\n//    navigates quickly.\n// 2. `<mat-option aria-describedby=\"groupLabel\"` - This works on Safari, but VoiceOver in Chrome\n//    won't read out the description at all.\n// 3. `<mat-option aria-labelledby=\"optionLabel groupLabel\"` - This works on Chrome, but Safari\n//     doesn't read out the text at all. Furthermore, on\n// Boilerplate for applying mixins to MatOptgroup.\n/** @docs-private */\nconst _MatOptgroupMixinBase = mixinDisabled(class {\n});\n// Counter for unique group ids.\nlet _uniqueOptgroupIdCounter = 0;\nclass _MatOptgroupBase extends _MatOptgroupMixinBase {\n    constructor(parent) {\n        var _a;\n        super();\n        /** Unique id for the underlying label. */\n        this._labelId = `mat-optgroup-label-${_uniqueOptgroupIdCounter++}`;\n        this._inert = (_a = parent === null || parent === void 0 ? void 0 : parent.inertGroups) !== null && _a !== void 0 ? _a : false;\n    }\n}\n_MatOptgroupBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatOptgroupBase, deps: [{ token: MAT_OPTION_PARENT_COMPONENT, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatOptgroupBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatOptgroupBase, inputs: { label: \"label\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatOptgroupBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_OPTION_PARENT_COMPONENT]\n                    }, {\n                        type: Optional\n                    }] }];\n    }, propDecorators: { label: [{\n                type: Input\n            }] } });\n/**\n * Injection token that can be used to reference instances of `MatOptgroup`. It serves as\n * alternative token to the actual `MatOptgroup` class which could cause unnecessary\n * retention of the class and its component metadata.\n */\nconst MAT_OPTGROUP = new InjectionToken('MatOptgroup');\n/**\n * Component that is used to group instances of `mat-option`.\n */\nclass MatOptgroup extends _MatOptgroupBase {\n}\nMatOptgroup.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatOptgroup, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatOptgroup.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatOptgroup, selector: \"mat-optgroup\", inputs: { disabled: \"disabled\" }, host: { properties: { \"attr.role\": \"_inert ? null : \\\"group\\\"\", \"attr.aria-disabled\": \"_inert ? null : disabled.toString()\", \"attr.aria-labelledby\": \"_inert ? null : _labelId\", \"class.mat-optgroup-disabled\": \"disabled\" }, classAttribute: \"mat-optgroup\" }, providers: [{ provide: MAT_OPTGROUP, useExisting: MatOptgroup }], exportAs: [\"matOptgroup\"], usesInheritance: true, ngImport: i0, template: \"<span class=\\\"mat-optgroup-label\\\" aria-hidden=\\\"true\\\" [id]=\\\"_labelId\\\">{{ label }} <ng-content></ng-content></span>\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\", styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatOptgroup, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-optgroup', exportAs: 'matOptgroup', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['disabled'], host: {\n                        'class': 'mat-optgroup',\n                        '[attr.role]': '_inert ? null : \"group\"',\n                        '[attr.aria-disabled]': '_inert ? null : disabled.toString()',\n                        '[attr.aria-labelledby]': '_inert ? null : _labelId',\n                        '[class.mat-optgroup-disabled]': 'disabled',\n                    }, providers: [{ provide: MAT_OPTGROUP, useExisting: MatOptgroup }], template: \"<span class=\\\"mat-optgroup-label\\\" aria-hidden=\\\"true\\\" [id]=\\\"_labelId\\\">{{ label }} <ng-content></ng-content></span>\\n<ng-content select=\\\"mat-option, ng-container\\\"></ng-content>\\n\", styles: [\".mat-optgroup-label{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;-webkit-user-select:none;user-select:none;cursor:default}.mat-optgroup-label[disabled]{cursor:default}[dir=rtl] .mat-optgroup-label{text-align:right}.mat-optgroup-label .mat-icon{margin-right:16px;vertical-align:middle}.mat-optgroup-label .mat-icon svg{vertical-align:top}[dir=rtl] .mat-optgroup-label .mat-icon{margin-left:16px;margin-right:0}\\n\"] }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Option IDs need to be unique across components, so this counter exists outside of\n * the component definition.\n */\nlet _uniqueIdCounter = 0;\n/** Event object emitted by MatOption when selected or deselected. */\nclass MatOptionSelectionChange {\n    constructor(\n    /** Reference to the option that emitted the event. */\n    source, \n    /** Whether the change in the option's value was a result of a user action. */\n    isUserInput = false) {\n        this.source = source;\n        this.isUserInput = isUserInput;\n    }\n}\nclass _MatOptionBase {\n    constructor(_element, _changeDetectorRef, _parent, group) {\n        this._element = _element;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._parent = _parent;\n        this.group = group;\n        this._selected = false;\n        this._active = false;\n        this._disabled = false;\n        this._mostRecentViewValue = '';\n        /** The unique ID of the option. */\n        this.id = `mat-option-${_uniqueIdCounter++}`;\n        /** Event emitted when the option is selected or deselected. */\n        // tslint:disable-next-line:no-output-on-prefix\n        this.onSelectionChange = new EventEmitter();\n        /** Emits when the state of the option changes and any parents have to be notified. */\n        this._stateChanges = new Subject();\n    }\n    /** Whether the wrapping component is in multiple selection mode. */\n    get multiple() {\n        return this._parent && this._parent.multiple;\n    }\n    /** Whether or not the option is currently selected. */\n    get selected() {\n        return this._selected;\n    }\n    /** Whether the option is disabled. */\n    get disabled() {\n        return (this.group && this.group.disabled) || this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n    }\n    /** Whether ripples for the option are disabled. */\n    get disableRipple() {\n        return !!(this._parent && this._parent.disableRipple);\n    }\n    /**\n     * Whether or not the option is currently active and ready to be selected.\n     * An active option displays styles as if it is focused, but the\n     * focus is actually retained somewhere else. This comes in handy\n     * for components like autocomplete where focus must remain on the input.\n     */\n    get active() {\n        return this._active;\n    }\n    /**\n     * The displayed value of the option. It is necessary to show the selected option in the\n     * select's trigger.\n     */\n    get viewValue() {\n        // TODO(kara): Add input property alternative for node envs.\n        return (this._getHostElement().textContent || '').trim();\n    }\n    /** Selects the option. */\n    select() {\n        if (!this._selected) {\n            this._selected = true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /** Deselects the option. */\n    deselect() {\n        if (this._selected) {\n            this._selected = false;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent();\n        }\n    }\n    /** Sets focus onto this option. */\n    focus(_origin, options) {\n        // Note that we aren't using `_origin`, but we need to keep it because some internal consumers\n        // use `MatOption` in a `FocusKeyManager` and we need it to match `FocusableOption`.\n        const element = this._getHostElement();\n        if (typeof element.focus === 'function') {\n            element.focus(options);\n        }\n    }\n    /**\n     * This method sets display styles on the option to make it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setActiveStyles() {\n        if (!this._active) {\n            this._active = true;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * This method removes display styles on the option that made it appear\n     * active. This is used by the ActiveDescendantKeyManager so key\n     * events will display the proper options as active on arrow key events.\n     */\n    setInactiveStyles() {\n        if (this._active) {\n            this._active = false;\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Gets the label to be used when determining whether the option should be focused. */\n    getLabel() {\n        return this.viewValue;\n    }\n    /** Ensures the option is selected when activated from the keyboard. */\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !hasModifierKey(event)) {\n            this._selectViaInteraction();\n            // Prevent the page from scrolling down and form submits.\n            event.preventDefault();\n        }\n    }\n    /**\n     * `Selects the option while indicating the selection came from the user. Used to\n     * determine if the select's view -> model callback should be invoked.`\n     */\n    _selectViaInteraction() {\n        if (!this.disabled) {\n            this._selected = this.multiple ? !this._selected : true;\n            this._changeDetectorRef.markForCheck();\n            this._emitSelectionChangeEvent(true);\n        }\n    }\n    /**\n     * Gets the `aria-selected` value for the option. We explicitly omit the `aria-selected`\n     * attribute from single-selection, unselected options. Including the `aria-selected=\"false\"`\n     * attributes adds a significant amount of noise to screen-reader users without providing useful\n     * information.\n     */\n    _getAriaSelected() {\n        return this.selected || (this.multiple ? false : null);\n    }\n    /** Returns the correct tabindex for the option depending on disabled state. */\n    _getTabIndex() {\n        return this.disabled ? '-1' : '0';\n    }\n    /** Gets the host DOM element. */\n    _getHostElement() {\n        return this._element.nativeElement;\n    }\n    ngAfterViewChecked() {\n        // Since parent components could be using the option's label to display the selected values\n        // (e.g. `mat-select`) and they don't have a way of knowing if the option's label has changed\n        // we have to check for changes in the DOM ourselves and dispatch an event. These checks are\n        // relatively cheap, however we still limit them only to selected options in order to avoid\n        // hitting the DOM too often.\n        if (this._selected) {\n            const viewValue = this.viewValue;\n            if (viewValue !== this._mostRecentViewValue) {\n                this._mostRecentViewValue = viewValue;\n                this._stateChanges.next();\n            }\n        }\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n    /** Emits the selection change event. */\n    _emitSelectionChangeEvent(isUserInput = false) {\n        this.onSelectionChange.emit(new MatOptionSelectionChange(this, isUserInput));\n    }\n}\n_MatOptionBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatOptionBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive });\n_MatOptionBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatOptionBase, inputs: { value: \"value\", id: \"id\", disabled: \"disabled\" }, outputs: { onSelectionChange: \"onSelectionChange\" }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatOptionBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined }, { type: _MatOptgroupBase }]; }, propDecorators: { value: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], disabled: [{\n                type: Input\n            }], onSelectionChange: [{\n                type: Output\n            }] } });\n/**\n * Single option inside of a `<mat-select>` element.\n */\nclass MatOption extends _MatOptionBase {\n    constructor(element, changeDetectorRef, parent, group) {\n        super(element, changeDetectorRef, parent, group);\n    }\n}\nMatOption.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatOption, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: MAT_OPTION_PARENT_COMPONENT, optional: true }, { token: MAT_OPTGROUP, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatOption.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatOption, selector: \"mat-option\", host: { attributes: { \"role\": \"option\" }, listeners: { \"click\": \"_selectViaInteraction()\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.tabindex\": \"_getTabIndex()\", \"class.mat-selected\": \"selected\", \"class.mat-option-multiple\": \"multiple\", \"class.mat-active\": \"active\", \"id\": \"id\", \"attr.aria-selected\": \"_getAriaSelected()\", \"attr.aria-disabled\": \"disabled.toString()\", \"class.mat-option-disabled\": \"disabled\" }, classAttribute: \"mat-option mat-focus-indicator\" }, exportAs: [\"matOption\"], usesInheritance: true, ngImport: i0, template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<span class=\\\"mat-option-text\\\"><ng-content></ng-content></span>\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n<span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"group && group._inert\\\">({{ group.label }})</span>\\n\\n<div class=\\\"mat-option-ripple\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\", styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"], components: [{ type: MatPseudoCheckbox, selector: \"mat-pseudo-checkbox\", inputs: [\"state\", \"disabled\"] }], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatOption, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-option', exportAs: 'matOption', host: {\n                        'role': 'option',\n                        '[attr.tabindex]': '_getTabIndex()',\n                        '[class.mat-selected]': 'selected',\n                        '[class.mat-option-multiple]': 'multiple',\n                        '[class.mat-active]': 'active',\n                        '[id]': 'id',\n                        '[attr.aria-selected]': '_getAriaSelected()',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[class.mat-option-disabled]': 'disabled',\n                        '(click)': '_selectViaInteraction()',\n                        '(keydown)': '_handleKeydown($event)',\n                        'class': 'mat-option mat-focus-indicator',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<mat-pseudo-checkbox *ngIf=\\\"multiple\\\" class=\\\"mat-option-pseudo-checkbox\\\"\\n    [state]=\\\"selected ? 'checked' : 'unchecked'\\\" [disabled]=\\\"disabled\\\"></mat-pseudo-checkbox>\\n\\n<span class=\\\"mat-option-text\\\"><ng-content></ng-content></span>\\n\\n<!-- See a11y notes inside optgroup.ts for context behind this element. -->\\n<span class=\\\"cdk-visually-hidden\\\" *ngIf=\\\"group && group._inert\\\">({{ group.label }})</span>\\n\\n<div class=\\\"mat-option-ripple\\\" mat-ripple\\n     [matRippleTrigger]=\\\"_getHostElement()\\\"\\n     [matRippleDisabled]=\\\"disabled || disableRipple\\\">\\n</div>\\n\", styles: [\".mat-option{white-space:nowrap;overflow:hidden;text-overflow:ellipsis;display:block;line-height:48px;height:48px;padding:0 16px;text-align:left;text-decoration:none;max-width:100%;position:relative;cursor:pointer;outline:none;display:flex;flex-direction:row;max-width:100%;box-sizing:border-box;align-items:center;-webkit-tap-highlight-color:transparent}.mat-option[disabled]{cursor:default}[dir=rtl] .mat-option{text-align:right}.mat-option .mat-icon{margin-right:16px;vertical-align:middle}.mat-option .mat-icon svg{vertical-align:top}[dir=rtl] .mat-option .mat-icon{margin-left:16px;margin-right:0}.mat-option[aria-disabled=true]{-webkit-user-select:none;user-select:none;cursor:default}.mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:32px}[dir=rtl] .mat-optgroup .mat-option:not(.mat-option-multiple){padding-left:16px;padding-right:32px}.cdk-high-contrast-active .mat-option{margin:0 1px}.cdk-high-contrast-active .mat-option.mat-active{border:solid 1px currentColor;margin:0}.cdk-high-contrast-active .mat-option[aria-disabled=true]{opacity:.5}.mat-option-text{display:inline-block;flex-grow:1;overflow:hidden;text-overflow:ellipsis}.mat-option .mat-option-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none}.mat-option-pseudo-checkbox{margin-right:8px}[dir=rtl] .mat-option-pseudo-checkbox{margin-left:8px;margin-right:0}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_OPTION_PARENT_COMPONENT]\n                    }] }, { type: MatOptgroup, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_OPTGROUP]\n                    }] }];\n    } });\n/**\n * Counts the amount of option group labels that precede the specified option.\n * @param optionIndex Index of the option at which to start counting.\n * @param options Flat list of all of the options.\n * @param optionGroups Flat list of all of the option groups.\n * @docs-private\n */\nfunction _countGroupLabelsBeforeOption(optionIndex, options, optionGroups) {\n    if (optionGroups.length) {\n        let optionsArray = options.toArray();\n        let groups = optionGroups.toArray();\n        let groupCounter = 0;\n        for (let i = 0; i < optionIndex + 1; i++) {\n            if (optionsArray[i].group && optionsArray[i].group === groups[groupCounter]) {\n                groupCounter++;\n            }\n        }\n        return groupCounter;\n    }\n    return 0;\n}\n/**\n * Determines the position to which to scroll a panel in order for an option to be into view.\n * @param optionOffset Offset of the option from the top of the panel.\n * @param optionHeight Height of the options.\n * @param currentScrollPosition Current scroll position of the panel.\n * @param panelHeight Height of the panel.\n * @docs-private\n */\nfunction _getOptionScrollPosition(optionOffset, optionHeight, currentScrollPosition, panelHeight) {\n    if (optionOffset < currentScrollPosition) {\n        return optionOffset;\n    }\n    if (optionOffset + optionHeight > currentScrollPosition + panelHeight) {\n        return Math.max(0, optionOffset - panelHeight + optionHeight);\n    }\n    return currentScrollPosition;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatOptionModule {\n}\nMatOptionModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatOptionModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatOptionModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatOptionModule, declarations: [MatOption, MatOptgroup], imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule], exports: [MatOption, MatOptgroup] });\nMatOptionModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatOptionModule, imports: [[MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatOptionModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatRippleModule, CommonModule, MatCommonModule, MatPseudoCheckboxModule],\n                    exports: [MatOption, MatOptgroup],\n                    declarations: [MatOption, MatOptgroup],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AnimationCurves, AnimationDurations, DateAdapter, ErrorStateMatcher, MATERIAL_SANITY_CHECKS, MAT_DATE_FORMATS, MAT_DATE_LOCALE, MAT_DATE_LOCALE_FACTORY, MAT_NATIVE_DATE_FORMATS, MAT_OPTGROUP, MAT_OPTION_PARENT_COMPONENT, MAT_RIPPLE_GLOBAL_OPTIONS, MatCommonModule, MatLine, MatLineModule, MatNativeDateModule, MatOptgroup, MatOption, MatOptionModule, MatOptionSelectionChange, MatPseudoCheckbox, MatPseudoCheckboxModule, MatRipple, MatRippleModule, NativeDateAdapter, NativeDateModule, RippleRef, RippleRenderer, ShowOnDirtyErrorStateMatcher, VERSION, _MatOptgroupBase, _MatOptionBase, _countGroupLabelsBeforeOption, _getOptionScrollPosition, defaultRippleAnimationConfig, mixinColor, mixinDisableRipple, mixinDisabled, mixinErrorState, mixinInitialized, mixinTabIndex, setLines };\n","import * as i4 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Attribute, Input, Component, ViewEncapsulation, ChangeDetectionStrategy, Optional, Inject, ViewChild, ContentChild, ContentChildren, NgModule } from '@angular/core';\nimport { mixinColor, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject, merge, fromEvent } from 'rxjs';\nimport { startWith, takeUntil, take } from 'rxjs/operators';\nimport { trigger, state, style, transition, animate } from '@angular/animations';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport * as i1 from '@angular/cdk/bidi';\nimport * as i2 from '@angular/cdk/platform';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$2 = 0;\n/**\n * Injection token that can be used to reference instances of `MatError`. It serves as\n * alternative token to the actual `MatError` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_ERROR = new InjectionToken('MatError');\n/** Single error message to be shown underneath the form field. */\nclass MatError {\n    constructor(ariaLive, elementRef) {\n        this.id = `mat-error-${nextUniqueId$2++}`;\n        // If no aria-live value is set add 'polite' as a default. This is preferred over setting\n        // role='alert' so that screen readers do not interrupt the current task to read this aloud.\n        if (!ariaLive) {\n            elementRef.nativeElement.setAttribute('aria-live', 'polite');\n        }\n    }\n}\nMatError.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatError, deps: [{ token: 'aria-live', attribute: true }, { token: i0.ElementRef }], target: i0.ɵɵFactoryTarget.Directive });\nMatError.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatError, selector: \"mat-error\", inputs: { id: \"id\" }, host: { attributes: { \"aria-atomic\": \"true\" }, properties: { \"attr.id\": \"id\" }, classAttribute: \"mat-error\" }, providers: [{ provide: MAT_ERROR, useExisting: MatError }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatError, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-error',\n                    host: {\n                        'class': 'mat-error',\n                        '[attr.id]': 'id',\n                        'aria-atomic': 'true',\n                    },\n                    providers: [{ provide: MAT_ERROR, useExisting: MatError }],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['aria-live']\n                    }] }, { type: i0.ElementRef }];\n    }, propDecorators: { id: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by the MatFormField.\n * @docs-private\n */\nconst matFormFieldAnimations = {\n    /** Animation that transitions the form field's error and hint messages. */\n    transitionMessages: trigger('transitionMessages', [\n        // TODO(mmalerba): Use angular animations for label animation as well.\n        state('enter', style({ opacity: 1, transform: 'translateY(0%)' })),\n        transition('void => enter', [\n            style({ opacity: 0, transform: 'translateY(-5px)' }),\n            animate('300ms cubic-bezier(0.55, 0, 0.55, 0.2)'),\n        ]),\n    ]),\n};\n\n/** An interface which allows a control to work inside of a `MatFormField`. */\nclass MatFormFieldControl {\n}\nMatFormFieldControl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFormFieldControl, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatFormFieldControl.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatFormFieldControl, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFormFieldControl, decorators: [{\n            type: Directive\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatFormFieldPlaceholderConflictError() {\n    return Error('Placeholder attribute and child element were both specified.');\n}\n/** @docs-private */\nfunction getMatFormFieldDuplicatedHintError(align) {\n    return Error(`A hint was already declared for 'align=\"${align}\"'.`);\n}\n/** @docs-private */\nfunction getMatFormFieldMissingControlError() {\n    return Error('mat-form-field must contain a MatFormFieldControl.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId$1 = 0;\n/**\n * Injection token that can be used to reference instances of `MatHint`. It serves as\n * alternative token to the actual `MatHint` class which could cause unnecessary\n * retention of the class and its directive metadata.\n *\n * *Note*: This is not part of the public API as the MDC-based form-field will not\n * need a lightweight token for `MatHint` and we want to reduce breaking changes.\n */\nconst _MAT_HINT = new InjectionToken('MatHint');\n/** Hint text to be shown underneath the form field control. */\nclass MatHint {\n    constructor() {\n        /** Whether to align the hint label at the start or end of the line. */\n        this.align = 'start';\n        /** Unique ID for the hint. Used for the aria-describedby on the form field control. */\n        this.id = `mat-hint-${nextUniqueId$1++}`;\n    }\n}\nMatHint.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatHint, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatHint.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatHint, selector: \"mat-hint\", inputs: { align: \"align\", id: \"id\" }, host: { properties: { \"class.mat-form-field-hint-end\": \"align === \\\"end\\\"\", \"attr.id\": \"id\", \"attr.align\": \"null\" }, classAttribute: \"mat-hint\" }, providers: [{ provide: _MAT_HINT, useExisting: MatHint }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatHint, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-hint',\n                    host: {\n                        'class': 'mat-hint',\n                        '[class.mat-form-field-hint-end]': 'align === \"end\"',\n                        '[attr.id]': 'id',\n                        // Remove align attribute to prevent it from interfering with layout.\n                        '[attr.align]': 'null',\n                    },\n                    providers: [{ provide: _MAT_HINT, useExisting: MatHint }],\n                }]\n        }], propDecorators: { align: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The floating label for a `mat-form-field`. */\nclass MatLabel {\n}\nMatLabel.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatLabel, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatLabel.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatLabel, selector: \"mat-label\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatLabel, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-label',\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The placeholder text for an `MatFormField`.\n * @deprecated Use `<mat-label>` to specify the label and the `placeholder` attribute to specify the\n *     placeholder.\n * @breaking-change 8.0.0\n */\nclass MatPlaceholder {\n}\nMatPlaceholder.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPlaceholder, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatPlaceholder.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatPlaceholder, selector: \"mat-placeholder\", ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPlaceholder, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-placeholder',\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatPrefix`. It serves as\n * alternative token to the actual `MatPrefix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_PREFIX = new InjectionToken('MatPrefix');\n/** Prefix to be placed in front of the form field. */\nclass MatPrefix {\n}\nMatPrefix.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPrefix, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatPrefix.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatPrefix, selector: \"[matPrefix]\", providers: [{ provide: MAT_PREFIX, useExisting: MatPrefix }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPrefix, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matPrefix]',\n                    providers: [{ provide: MAT_PREFIX, useExisting: MatPrefix }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Injection token that can be used to reference instances of `MatSuffix`. It serves as\n * alternative token to the actual `MatSuffix` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SUFFIX = new InjectionToken('MatSuffix');\n/** Suffix to be placed at the end of the form field. */\nclass MatSuffix {\n}\nMatSuffix.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSuffix, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatSuffix.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatSuffix, selector: \"[matSuffix]\", providers: [{ provide: MAT_SUFFIX, useExisting: MatSuffix }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSuffix, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matSuffix]',\n                    providers: [{ provide: MAT_SUFFIX, useExisting: MatSuffix }],\n                }]\n        }] });\n\nlet nextUniqueId = 0;\nconst floatingLabelScale = 0.75;\nconst outlineGapPadding = 5;\n/**\n * Boilerplate for applying mixins to MatFormField.\n * @docs-private\n */\nconst _MatFormFieldBase = mixinColor(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}, 'primary');\n/**\n * Injection token that can be used to configure the\n * default options for all form field within an app.\n */\nconst MAT_FORM_FIELD_DEFAULT_OPTIONS = new InjectionToken('MAT_FORM_FIELD_DEFAULT_OPTIONS');\n/**\n * Injection token that can be used to inject an instances of `MatFormField`. It serves\n * as alternative token to the actual `MatFormField` class which would cause unnecessary\n * retention of the `MatFormField` class and its component metadata.\n */\nconst MAT_FORM_FIELD = new InjectionToken('MatFormField');\n/** Container for form controls that applies Material Design styling and behavior. */\nclass MatFormField extends _MatFormFieldBase {\n    constructor(elementRef, _changeDetectorRef, _dir, _defaults, _platform, _ngZone, _animationMode) {\n        super(elementRef);\n        this._changeDetectorRef = _changeDetectorRef;\n        this._dir = _dir;\n        this._defaults = _defaults;\n        this._platform = _platform;\n        this._ngZone = _ngZone;\n        /**\n         * Whether the outline gap needs to be calculated\n         * immediately on the next change detection run.\n         */\n        this._outlineGapCalculationNeededImmediately = false;\n        /** Whether the outline gap needs to be calculated next time the zone has stabilized. */\n        this._outlineGapCalculationNeededOnStable = false;\n        this._destroyed = new Subject();\n        /** Override for the logic that disables the label animation in certain cases. */\n        this._showAlwaysAnimate = false;\n        /** State of the mat-hint and mat-error animations. */\n        this._subscriptAnimationState = '';\n        this._hintLabel = '';\n        // Unique id for the hint label.\n        this._hintLabelId = `mat-hint-${nextUniqueId++}`;\n        // Unique id for the label element.\n        this._labelId = `mat-form-field-label-${nextUniqueId++}`;\n        this.floatLabel = this._getDefaultFloatLabelState();\n        this._animationsEnabled = _animationMode !== 'NoopAnimations';\n        // Set the default through here so we invoke the setter on the first run.\n        this.appearance = _defaults && _defaults.appearance ? _defaults.appearance : 'legacy';\n        this._hideRequiredMarker =\n            _defaults && _defaults.hideRequiredMarker != null ? _defaults.hideRequiredMarker : false;\n    }\n    /** The form-field appearance style. */\n    get appearance() {\n        return this._appearance;\n    }\n    set appearance(value) {\n        const oldValue = this._appearance;\n        this._appearance = value || (this._defaults && this._defaults.appearance) || 'legacy';\n        if (this._appearance === 'outline' && oldValue !== value) {\n            this._outlineGapCalculationNeededOnStable = true;\n        }\n    }\n    /** Whether the required marker should be hidden. */\n    get hideRequiredMarker() {\n        return this._hideRequiredMarker;\n    }\n    set hideRequiredMarker(value) {\n        this._hideRequiredMarker = coerceBooleanProperty(value);\n    }\n    /** Whether the floating label should always float or not. */\n    _shouldAlwaysFloat() {\n        return this.floatLabel === 'always' && !this._showAlwaysAnimate;\n    }\n    /** Whether the label can float or not. */\n    _canLabelFloat() {\n        return this.floatLabel !== 'never';\n    }\n    /** Text for the form field hint. */\n    get hintLabel() {\n        return this._hintLabel;\n    }\n    set hintLabel(value) {\n        this._hintLabel = value;\n        this._processHints();\n    }\n    /**\n     * Whether the label should always float, never float or float as the user types.\n     *\n     * Note: only the legacy appearance supports the `never` option. `never` was originally added as a\n     * way to make the floating label emulate the behavior of a standard input placeholder. However\n     * the form field now supports both floating labels and placeholders. Therefore in the non-legacy\n     * appearances the `never` option has been disabled in favor of just using the placeholder.\n     */\n    get floatLabel() {\n        return this.appearance !== 'legacy' && this._floatLabel === 'never' ? 'auto' : this._floatLabel;\n    }\n    set floatLabel(value) {\n        if (value !== this._floatLabel) {\n            this._floatLabel = value || this._getDefaultFloatLabelState();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    get _control() {\n        // TODO(crisbeto): we need this workaround in order to support both Ivy and ViewEngine.\n        //  We should clean this up once Ivy is the default renderer.\n        return this._explicitFormFieldControl || this._controlNonStatic || this._controlStatic;\n    }\n    set _control(value) {\n        this._explicitFormFieldControl = value;\n    }\n    /**\n     * Gets the id of the label element. If no label is present, returns `null`.\n     */\n    getLabelId() {\n        return this._hasFloatingLabel() ? this._labelId : null;\n    }\n    /**\n     * Gets an ElementRef for the element that a overlay attached to the form-field should be\n     * positioned relative to.\n     */\n    getConnectedOverlayOrigin() {\n        return this._connectionContainerRef || this._elementRef;\n    }\n    ngAfterContentInit() {\n        this._validateControlChild();\n        const control = this._control;\n        if (control.controlType) {\n            this._elementRef.nativeElement.classList.add(`mat-form-field-type-${control.controlType}`);\n        }\n        // Subscribe to changes in the child control state in order to update the form field UI.\n        control.stateChanges.pipe(startWith(null)).subscribe(() => {\n            this._validatePlaceholders();\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Run change detection if the value changes.\n        if (control.ngControl && control.ngControl.valueChanges) {\n            control.ngControl.valueChanges\n                .pipe(takeUntil(this._destroyed))\n                .subscribe(() => this._changeDetectorRef.markForCheck());\n        }\n        // Note that we have to run outside of the `NgZone` explicitly,\n        // in order to avoid throwing users into an infinite loop\n        // if `zone-patch-rxjs` is included.\n        this._ngZone.runOutsideAngular(() => {\n            this._ngZone.onStable.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (this._outlineGapCalculationNeededOnStable) {\n                    this.updateOutlineGap();\n                }\n            });\n        });\n        // Run change detection and update the outline if the suffix or prefix changes.\n        merge(this._prefixChildren.changes, this._suffixChildren.changes).subscribe(() => {\n            this._outlineGapCalculationNeededOnStable = true;\n            this._changeDetectorRef.markForCheck();\n        });\n        // Re-validate when the number of hints changes.\n        this._hintChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._processHints();\n            this._changeDetectorRef.markForCheck();\n        });\n        // Update the aria-described by when the number of errors changes.\n        this._errorChildren.changes.pipe(startWith(null)).subscribe(() => {\n            this._syncDescribedByIds();\n            this._changeDetectorRef.markForCheck();\n        });\n        if (this._dir) {\n            this._dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n                if (typeof requestAnimationFrame === 'function') {\n                    this._ngZone.runOutsideAngular(() => {\n                        requestAnimationFrame(() => this.updateOutlineGap());\n                    });\n                }\n                else {\n                    this.updateOutlineGap();\n                }\n            });\n        }\n    }\n    ngAfterContentChecked() {\n        this._validateControlChild();\n        if (this._outlineGapCalculationNeededImmediately) {\n            this.updateOutlineGap();\n        }\n    }\n    ngAfterViewInit() {\n        // Avoid animations on load.\n        this._subscriptAnimationState = 'enter';\n        this._changeDetectorRef.detectChanges();\n    }\n    ngOnDestroy() {\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Determines whether a class from the NgControl should be forwarded to the host element. */\n    _shouldForward(prop) {\n        const ngControl = this._control ? this._control.ngControl : null;\n        return ngControl && ngControl[prop];\n    }\n    _hasPlaceholder() {\n        return !!((this._control && this._control.placeholder) || this._placeholderChild);\n    }\n    _hasLabel() {\n        return !!(this._labelChildNonStatic || this._labelChildStatic);\n    }\n    _shouldLabelFloat() {\n        return (this._canLabelFloat() &&\n            ((this._control && this._control.shouldLabelFloat) || this._shouldAlwaysFloat()));\n    }\n    _hideControlPlaceholder() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return ((this.appearance === 'legacy' && !this._hasLabel()) ||\n            (this._hasLabel() && !this._shouldLabelFloat()));\n    }\n    _hasFloatingLabel() {\n        // In the legacy appearance the placeholder is promoted to a label if no label is given.\n        return this._hasLabel() || (this.appearance === 'legacy' && this._hasPlaceholder());\n    }\n    /** Determines whether to display hints or errors. */\n    _getDisplayedMessages() {\n        return this._errorChildren && this._errorChildren.length > 0 && this._control.errorState\n            ? 'error'\n            : 'hint';\n    }\n    /** Animates the placeholder up and locks it in position. */\n    _animateAndLockLabel() {\n        if (this._hasFloatingLabel() && this._canLabelFloat()) {\n            // If animations are disabled, we shouldn't go in here,\n            // because the `transitionend` will never fire.\n            if (this._animationsEnabled && this._label) {\n                this._showAlwaysAnimate = true;\n                fromEvent(this._label.nativeElement, 'transitionend')\n                    .pipe(take(1))\n                    .subscribe(() => {\n                    this._showAlwaysAnimate = false;\n                });\n            }\n            this.floatLabel = 'always';\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /**\n     * Ensure that there is only one placeholder (either `placeholder` attribute on the child control\n     * or child element with the `mat-placeholder` directive).\n     */\n    _validatePlaceholders() {\n        if (this._control.placeholder &&\n            this._placeholderChild &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldPlaceholderConflictError();\n        }\n    }\n    /** Does any extra processing that is required when handling the hints. */\n    _processHints() {\n        this._validateHints();\n        this._syncDescribedByIds();\n    }\n    /**\n     * Ensure that there is a maximum of one of each `<mat-hint>` alignment specified, with the\n     * attribute being considered as `align=\"start\"`.\n     */\n    _validateHints() {\n        if (this._hintChildren && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            let startHint;\n            let endHint;\n            this._hintChildren.forEach((hint) => {\n                if (hint.align === 'start') {\n                    if (startHint || this.hintLabel) {\n                        throw getMatFormFieldDuplicatedHintError('start');\n                    }\n                    startHint = hint;\n                }\n                else if (hint.align === 'end') {\n                    if (endHint) {\n                        throw getMatFormFieldDuplicatedHintError('end');\n                    }\n                    endHint = hint;\n                }\n            });\n        }\n    }\n    /** Gets the default float label state. */\n    _getDefaultFloatLabelState() {\n        return (this._defaults && this._defaults.floatLabel) || 'auto';\n    }\n    /**\n     * Sets the list of element IDs that describe the child control. This allows the control to update\n     * its `aria-describedby` attribute accordingly.\n     */\n    _syncDescribedByIds() {\n        if (this._control) {\n            let ids = [];\n            // TODO(wagnermaciel): Remove the type check when we find the root cause of this bug.\n            if (this._control.userAriaDescribedBy &&\n                typeof this._control.userAriaDescribedBy === 'string') {\n                ids.push(...this._control.userAriaDescribedBy.split(' '));\n            }\n            if (this._getDisplayedMessages() === 'hint') {\n                const startHint = this._hintChildren\n                    ? this._hintChildren.find(hint => hint.align === 'start')\n                    : null;\n                const endHint = this._hintChildren\n                    ? this._hintChildren.find(hint => hint.align === 'end')\n                    : null;\n                if (startHint) {\n                    ids.push(startHint.id);\n                }\n                else if (this._hintLabel) {\n                    ids.push(this._hintLabelId);\n                }\n                if (endHint) {\n                    ids.push(endHint.id);\n                }\n            }\n            else if (this._errorChildren) {\n                ids.push(...this._errorChildren.map(error => error.id));\n            }\n            this._control.setDescribedByIds(ids);\n        }\n    }\n    /** Throws an error if the form field's control is missing. */\n    _validateControlChild() {\n        if (!this._control && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatFormFieldMissingControlError();\n        }\n    }\n    /**\n     * Updates the width and position of the gap in the outline. Only relevant for the outline\n     * appearance.\n     */\n    updateOutlineGap() {\n        const labelEl = this._label ? this._label.nativeElement : null;\n        const container = this._connectionContainerRef.nativeElement;\n        const outlineStartSelector = '.mat-form-field-outline-start';\n        const outlineGapSelector = '.mat-form-field-outline-gap';\n        // getBoundingClientRect isn't available on the server.\n        if (this.appearance !== 'outline' || !this._platform.isBrowser) {\n            return;\n        }\n        // If there is no content, set the gap elements to zero.\n        if (!labelEl || !labelEl.children.length || !labelEl.textContent.trim()) {\n            const gapElements = container.querySelectorAll(`${outlineStartSelector}, ${outlineGapSelector}`);\n            for (let i = 0; i < gapElements.length; i++) {\n                gapElements[i].style.width = '0';\n            }\n            return;\n        }\n        // If the element is not present in the DOM, the outline gap will need to be calculated\n        // the next time it is checked and in the DOM.\n        if (!this._isAttachedToDOM()) {\n            this._outlineGapCalculationNeededImmediately = true;\n            return;\n        }\n        let startWidth = 0;\n        let gapWidth = 0;\n        const startEls = container.querySelectorAll(outlineStartSelector);\n        const gapEls = container.querySelectorAll(outlineGapSelector);\n        if (this._label && this._label.nativeElement.children.length) {\n            const containerRect = container.getBoundingClientRect();\n            // If the container's width and height are zero, it means that the element is\n            // invisible and we can't calculate the outline gap. Mark the element as needing\n            // to be checked the next time the zone stabilizes. We can't do this immediately\n            // on the next change detection, because even if the element becomes visible,\n            // the `ClientRect` won't be reclaculated immediately. We reset the\n            // `_outlineGapCalculationNeededImmediately` flag some we don't run the checks twice.\n            if (containerRect.width === 0 && containerRect.height === 0) {\n                this._outlineGapCalculationNeededOnStable = true;\n                this._outlineGapCalculationNeededImmediately = false;\n                return;\n            }\n            const containerStart = this._getStartEnd(containerRect);\n            const labelChildren = labelEl.children;\n            const labelStart = this._getStartEnd(labelChildren[0].getBoundingClientRect());\n            let labelWidth = 0;\n            for (let i = 0; i < labelChildren.length; i++) {\n                labelWidth += labelChildren[i].offsetWidth;\n            }\n            startWidth = Math.abs(labelStart - containerStart) - outlineGapPadding;\n            gapWidth = labelWidth > 0 ? labelWidth * floatingLabelScale + outlineGapPadding * 2 : 0;\n        }\n        for (let i = 0; i < startEls.length; i++) {\n            startEls[i].style.width = `${startWidth}px`;\n        }\n        for (let i = 0; i < gapEls.length; i++) {\n            gapEls[i].style.width = `${gapWidth}px`;\n        }\n        this._outlineGapCalculationNeededOnStable = this._outlineGapCalculationNeededImmediately =\n            false;\n    }\n    /** Gets the start end of the rect considering the current directionality. */\n    _getStartEnd(rect) {\n        return this._dir && this._dir.value === 'rtl' ? rect.right : rect.left;\n    }\n    /** Checks whether the form field is attached to the DOM. */\n    _isAttachedToDOM() {\n        const element = this._elementRef.nativeElement;\n        if (element.getRootNode) {\n            const rootNode = element.getRootNode();\n            // If the element is inside the DOM the root node will be either the document\n            // or the closest shadow root, otherwise it'll be the element itself.\n            return rootNode && rootNode !== element;\n        }\n        // Otherwise fall back to checking if it's in the document. This doesn't account for\n        // shadow DOM, however browser that support shadow DOM should support `getRootNode` as well.\n        return document.documentElement.contains(element);\n    }\n}\nMatFormField.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFormField, deps: [{ token: i0.ElementRef }, { token: i0.ChangeDetectorRef }, { token: i1.Directionality, optional: true }, { token: MAT_FORM_FIELD_DEFAULT_OPTIONS, optional: true }, { token: i2.Platform }, { token: i0.NgZone }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatFormField.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatFormField, selector: \"mat-form-field\", inputs: { color: \"color\", appearance: \"appearance\", hideRequiredMarker: \"hideRequiredMarker\", hintLabel: \"hintLabel\", floatLabel: \"floatLabel\" }, host: { properties: { \"class.mat-form-field-appearance-standard\": \"appearance == \\\"standard\\\"\", \"class.mat-form-field-appearance-fill\": \"appearance == \\\"fill\\\"\", \"class.mat-form-field-appearance-outline\": \"appearance == \\\"outline\\\"\", \"class.mat-form-field-appearance-legacy\": \"appearance == \\\"legacy\\\"\", \"class.mat-form-field-invalid\": \"_control.errorState\", \"class.mat-form-field-can-float\": \"_canLabelFloat()\", \"class.mat-form-field-should-float\": \"_shouldLabelFloat()\", \"class.mat-form-field-has-label\": \"_hasFloatingLabel()\", \"class.mat-form-field-hide-placeholder\": \"_hideControlPlaceholder()\", \"class.mat-form-field-disabled\": \"_control.disabled\", \"class.mat-form-field-autofilled\": \"_control.autofilled\", \"class.mat-focused\": \"_control.focused\", \"class.ng-untouched\": \"_shouldForward(\\\"untouched\\\")\", \"class.ng-touched\": \"_shouldForward(\\\"touched\\\")\", \"class.ng-pristine\": \"_shouldForward(\\\"pristine\\\")\", \"class.ng-dirty\": \"_shouldForward(\\\"dirty\\\")\", \"class.ng-valid\": \"_shouldForward(\\\"valid\\\")\", \"class.ng-invalid\": \"_shouldForward(\\\"invalid\\\")\", \"class.ng-pending\": \"_shouldForward(\\\"pending\\\")\", \"class._mat-animation-noopable\": \"!_animationsEnabled\" }, classAttribute: \"mat-form-field\" }, providers: [{ provide: MAT_FORM_FIELD, useExisting: MatFormField }], queries: [{ propertyName: \"_controlNonStatic\", first: true, predicate: MatFormFieldControl, descendants: true }, { propertyName: \"_controlStatic\", first: true, predicate: MatFormFieldControl, descendants: true, static: true }, { propertyName: \"_labelChildNonStatic\", first: true, predicate: MatLabel, descendants: true }, { propertyName: \"_labelChildStatic\", first: true, predicate: MatLabel, descendants: true, static: true }, { propertyName: \"_placeholderChild\", first: true, predicate: MatPlaceholder, descendants: true }, { propertyName: \"_errorChildren\", predicate: MAT_ERROR, descendants: true }, { propertyName: \"_hintChildren\", predicate: _MAT_HINT, descendants: true }, { propertyName: \"_prefixChildren\", predicate: MAT_PREFIX, descendants: true }, { propertyName: \"_suffixChildren\", predicate: MAT_SUFFIX, descendants: true }], viewQueries: [{ propertyName: \"_connectionContainerRef\", first: true, predicate: [\"connectionContainer\"], descendants: true, static: true }, { propertyName: \"_inputContainerRef\", first: true, predicate: [\"inputContainer\"], descendants: true }, { propertyName: \"_label\", first: true, predicate: [\"label\"], descendants: true }], exportAs: [\"matFormField\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div\\n      class=\\\"mat-form-field-prefix\\\"\\n      *ngIf=\\\"_prefixChildren.length\\\"\\n      (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n      [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\"\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.cdk-high-contrast-active .mat-form-field-disabled .mat-form-field-label{color:GrayText}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex{outline-color:GrayText}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-form-field-flex{outline:dashed 3px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element:not([type=password])::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{opacity:0}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px)}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px;border-top-color:GrayText}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{border:3px dashed}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline{color:GrayText}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }, { type: i3.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i3.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }], animations: [matFormFieldAnimations.transitionMessages], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFormField, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-form-field', exportAs: 'matFormField', animations: [matFormFieldAnimations.transitionMessages], host: {\n                        'class': 'mat-form-field',\n                        '[class.mat-form-field-appearance-standard]': 'appearance == \"standard\"',\n                        '[class.mat-form-field-appearance-fill]': 'appearance == \"fill\"',\n                        '[class.mat-form-field-appearance-outline]': 'appearance == \"outline\"',\n                        '[class.mat-form-field-appearance-legacy]': 'appearance == \"legacy\"',\n                        '[class.mat-form-field-invalid]': '_control.errorState',\n                        '[class.mat-form-field-can-float]': '_canLabelFloat()',\n                        '[class.mat-form-field-should-float]': '_shouldLabelFloat()',\n                        '[class.mat-form-field-has-label]': '_hasFloatingLabel()',\n                        '[class.mat-form-field-hide-placeholder]': '_hideControlPlaceholder()',\n                        '[class.mat-form-field-disabled]': '_control.disabled',\n                        '[class.mat-form-field-autofilled]': '_control.autofilled',\n                        '[class.mat-focused]': '_control.focused',\n                        '[class.ng-untouched]': '_shouldForward(\"untouched\")',\n                        '[class.ng-touched]': '_shouldForward(\"touched\")',\n                        '[class.ng-pristine]': '_shouldForward(\"pristine\")',\n                        '[class.ng-dirty]': '_shouldForward(\"dirty\")',\n                        '[class.ng-valid]': '_shouldForward(\"valid\")',\n                        '[class.ng-invalid]': '_shouldForward(\"invalid\")',\n                        '[class.ng-pending]': '_shouldForward(\"pending\")',\n                        '[class._mat-animation-noopable]': '!_animationsEnabled',\n                    }, inputs: ['color'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MAT_FORM_FIELD, useExisting: MatFormField }], template: \"<div class=\\\"mat-form-field-wrapper\\\">\\n  <div class=\\\"mat-form-field-flex\\\" #connectionContainer\\n       (click)=\\\"_control.onContainerClick && _control.onContainerClick($event)\\\">\\n\\n    <!-- Outline used for outline appearance. -->\\n    <ng-container *ngIf=\\\"appearance == 'outline'\\\">\\n      <div class=\\\"mat-form-field-outline\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n      <div class=\\\"mat-form-field-outline mat-form-field-outline-thick\\\">\\n        <div class=\\\"mat-form-field-outline-start\\\"></div>\\n        <div class=\\\"mat-form-field-outline-gap\\\"></div>\\n        <div class=\\\"mat-form-field-outline-end\\\"></div>\\n      </div>\\n    </ng-container>\\n\\n    <div\\n      class=\\\"mat-form-field-prefix\\\"\\n      *ngIf=\\\"_prefixChildren.length\\\"\\n      (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n      [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\">\\n      <ng-content select=\\\"[matPrefix]\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-infix\\\" #inputContainer>\\n      <ng-content></ng-content>\\n\\n      <span class=\\\"mat-form-field-label-wrapper\\\">\\n        <!-- We add aria-owns as a workaround for an issue in JAWS & NVDA where the label isn't\\n             read if it comes before the control in the DOM. -->\\n        <label class=\\\"mat-form-field-label\\\"\\n               (cdkObserveContent)=\\\"updateOutlineGap()\\\"\\n               [cdkObserveContentDisabled]=\\\"appearance != 'outline'\\\"\\n               [id]=\\\"_labelId\\\"\\n               [attr.for]=\\\"_control.id\\\"\\n               [attr.aria-owns]=\\\"_control.id\\\"\\n               [class.mat-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-form-field-empty]=\\\"_control.empty && !_shouldAlwaysFloat()\\\"\\n               [class.mat-accent]=\\\"color == 'accent'\\\"\\n               [class.mat-warn]=\\\"color == 'warn'\\\"\\n               #label\\n               *ngIf=\\\"_hasFloatingLabel()\\\"\\n               [ngSwitch]=\\\"_hasLabel()\\\">\\n\\n          <!-- @breaking-change 8.0.0 remove in favor of mat-label element an placeholder attr. -->\\n          <ng-container *ngSwitchCase=\\\"false\\\">\\n            <ng-content select=\\\"mat-placeholder\\\"></ng-content>\\n            <span>{{_control.placeholder}}</span>\\n          </ng-container>\\n\\n          <ng-content select=\\\"mat-label\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n\\n          <!-- @breaking-change 8.0.0 remove `mat-placeholder-required` class -->\\n          <span\\n            class=\\\"mat-placeholder-required mat-form-field-required-marker\\\"\\n            aria-hidden=\\\"true\\\"\\n            *ngIf=\\\"!hideRequiredMarker && _control.required && !_control.disabled\\\">&#32;*</span>\\n        </label>\\n      </span>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-suffix\\\" *ngIf=\\\"_suffixChildren.length\\\">\\n      <ng-content select=\\\"[matSuffix]\\\"></ng-content>\\n    </div>\\n  </div>\\n\\n  <!-- Underline used for legacy, standard, and box appearances. -->\\n  <div class=\\\"mat-form-field-underline\\\"\\n       *ngIf=\\\"appearance != 'outline'\\\">\\n    <span class=\\\"mat-form-field-ripple\\\"\\n          [class.mat-accent]=\\\"color == 'accent'\\\"\\n          [class.mat-warn]=\\\"color == 'warn'\\\"></span>\\n  </div>\\n\\n  <div class=\\\"mat-form-field-subscript-wrapper\\\"\\n       [ngSwitch]=\\\"_getDisplayedMessages()\\\">\\n    <div *ngSwitchCase=\\\"'error'\\\" [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <ng-content select=\\\"mat-error\\\"></ng-content>\\n    </div>\\n\\n    <div class=\\\"mat-form-field-hint-wrapper\\\" *ngSwitchCase=\\\"'hint'\\\"\\n      [@transitionMessages]=\\\"_subscriptAnimationState\\\">\\n      <!-- TODO(mmalerba): use an actual <mat-hint> once all selectors are switched to mat-* -->\\n      <div *ngIf=\\\"hintLabel\\\" [id]=\\\"_hintLabelId\\\" class=\\\"mat-hint\\\">{{hintLabel}}</div>\\n      <ng-content select=\\\"mat-hint:not([align='end'])\\\"></ng-content>\\n      <div class=\\\"mat-form-field-hint-spacer\\\"></div>\\n      <ng-content select=\\\"mat-hint[align='end']\\\"></ng-content>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-form-field{display:inline-block;position:relative;text-align:left}[dir=rtl] .mat-form-field{text-align:right}.mat-form-field-wrapper{position:relative}.mat-form-field-flex{display:inline-flex;align-items:baseline;box-sizing:border-box;width:100%}.mat-form-field-prefix,.mat-form-field-suffix{white-space:nowrap;flex:none;position:relative}.mat-form-field-infix{display:block;position:relative;flex:auto;min-width:0;width:180px}.cdk-high-contrast-active .mat-form-field-infix{border-image:linear-gradient(transparent, transparent)}.mat-form-field-label-wrapper{position:absolute;left:0;box-sizing:content-box;width:100%;height:100%;overflow:hidden;pointer-events:none}[dir=rtl] .mat-form-field-label-wrapper{left:auto;right:0}.mat-form-field-label{position:absolute;left:0;font:inherit;pointer-events:none;width:100%;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;transform-origin:0 0;transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1),color 400ms cubic-bezier(0.25, 0.8, 0.25, 1),width 400ms cubic-bezier(0.25, 0.8, 0.25, 1);display:none}[dir=rtl] .mat-form-field-label{transform-origin:100% 0;left:auto;right:0}.cdk-high-contrast-active .mat-form-field-disabled .mat-form-field-label{color:GrayText}.mat-form-field-empty.mat-form-field-label,.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{display:block}.mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-form-field-autofill-control:-webkit-autofill+.mat-form-field-label-wrapper .mat-form-field-label{display:block;transition:none}.mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:none}.mat-form-field-can-float .mat-input-server:focus+.mat-form-field-label-wrapper .mat-form-field-label,.mat-form-field-can-float .mat-input-server[placeholder]:not(:placeholder-shown)+.mat-form-field-label-wrapper .mat-form-field-label{display:block}.mat-form-field-label:not(.mat-form-field-empty){transition:none}.mat-form-field-underline{position:absolute;width:100%;pointer-events:none;transform:scale3d(1, 1.0001, 1)}.mat-form-field-ripple{position:absolute;left:0;width:100%;transform-origin:50%;transform:scaleX(0.5);opacity:0;transition:background-color 300ms cubic-bezier(0.55, 0, 0.55, 0.2)}.mat-form-field.mat-focused .mat-form-field-ripple,.mat-form-field.mat-form-field-invalid .mat-form-field-ripple{opacity:1;transform:none;transition:transform 300ms cubic-bezier(0.25, 0.8, 0.25, 1),opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1),background-color 300ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-subscript-wrapper{position:absolute;box-sizing:border-box;width:100%;overflow:hidden}.mat-form-field-subscript-wrapper .mat-icon,.mat-form-field-label-wrapper .mat-icon{width:1em;height:1em;font-size:inherit;vertical-align:baseline}.mat-form-field-hint-wrapper{display:flex}.mat-form-field-hint-spacer{flex:1 0 1em}.mat-error{display:block}.mat-form-field-control-wrapper{position:relative}.mat-form-field-hint-end{order:1}.mat-form-field._mat-animation-noopable .mat-form-field-label,.mat-form-field._mat-animation-noopable .mat-form-field-ripple{transition:none}\\n\", \".mat-form-field-appearance-fill .mat-form-field-flex{border-radius:4px 4px 0 0;padding:.75em .75em 0 .75em}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-flex{outline:solid 1px}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-form-field-disabled .mat-form-field-flex{outline-color:GrayText}.cdk-high-contrast-active .mat-form-field-appearance-fill.mat-focused .mat-form-field-flex{outline:dashed 3px}.mat-form-field-appearance-fill .mat-form-field-underline::before{content:\\\"\\\";display:block;position:absolute;bottom:0;height:1px;width:100%}.mat-form-field-appearance-fill .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-fill .mat-form-field-ripple{height:0}.mat-form-field-appearance-fill:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-fill._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}.mat-form-field-appearance-fill .mat-form-field-subscript-wrapper{padding:0 1em}\\n\", \".mat-input-element{font:inherit;background:transparent;color:currentColor;border:none;outline:none;padding:0;margin:0;width:100%;max-width:100%;vertical-align:bottom;text-align:inherit;box-sizing:content-box}.mat-input-element:-moz-ui-invalid{box-shadow:none}.mat-input-element,.mat-input-element::-webkit-search-cancel-button,.mat-input-element::-webkit-search-decoration,.mat-input-element::-webkit-search-results-button,.mat-input-element::-webkit-search-results-decoration{-webkit-appearance:none}.mat-input-element::-webkit-contacts-auto-fill-button,.mat-input-element::-webkit-caps-lock-indicator,.mat-input-element:not([type=password])::-webkit-credentials-auto-fill-button{visibility:hidden}.mat-input-element[type=date],.mat-input-element[type=datetime],.mat-input-element[type=datetime-local],.mat-input-element[type=month],.mat-input-element[type=week],.mat-input-element[type=time]{line-height:1}.mat-input-element[type=date]::after,.mat-input-element[type=datetime]::after,.mat-input-element[type=datetime-local]::after,.mat-input-element[type=month]::after,.mat-input-element[type=week]::after,.mat-input-element[type=time]::after{content:\\\" \\\";white-space:pre;width:1px}.mat-input-element::-webkit-inner-spin-button,.mat-input-element::-webkit-calendar-picker-indicator,.mat-input-element::-webkit-clear-button{font-size:.75em}.mat-input-element::placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-moz-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element::-webkit-input-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-input-element:-ms-input-placeholder{-webkit-user-select:none;user-select:none;transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-hide-placeholder .mat-input-element::placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-moz-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element::-webkit-input-placeholder{opacity:0}.mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{color:transparent !important;-webkit-text-fill-color:transparent;transition:none}.cdk-high-contrast-active .mat-form-field-hide-placeholder .mat-input-element:-ms-input-placeholder{opacity:0}textarea.mat-input-element{resize:vertical;overflow:auto}textarea.mat-input-element.cdk-textarea-autosize{resize:none}textarea.mat-input-element{padding:2px 0;margin:-2px 0}select.mat-input-element{-moz-appearance:none;-webkit-appearance:none;position:relative;background-color:transparent;display:inline-flex;box-sizing:border-box;padding-top:1em;top:-1em;margin-bottom:-1em}select.mat-input-element::-moz-focus-inner{border:0}select.mat-input-element:not(:disabled){cursor:pointer}.mat-form-field-type-mat-native-select .mat-form-field-infix::after{content:\\\"\\\";width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;position:absolute;top:50%;right:0;margin-top:-2.5px;pointer-events:none}[dir=rtl] .mat-form-field-type-mat-native-select .mat-form-field-infix::after{right:auto;left:0}.mat-form-field-type-mat-native-select .mat-input-element{padding-right:15px}[dir=rtl] .mat-form-field-type-mat-native-select .mat-input-element{padding-right:0;padding-left:15px}.mat-form-field-type-mat-native-select .mat-form-field-label-wrapper{max-width:calc(100% - 10px)}.mat-form-field-type-mat-native-select.mat-form-field-appearance-outline .mat-form-field-infix::after{margin-top:-5px}.mat-form-field-type-mat-native-select.mat-form-field-appearance-fill .mat-form-field-infix::after{margin-top:-10px}\\n\", \".mat-form-field-appearance-legacy .mat-form-field-label{transform:perspective(100px)}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon{width:1em}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button{font:inherit;vertical-align:baseline}.mat-form-field-appearance-legacy .mat-form-field-prefix .mat-icon-button .mat-icon,.mat-form-field-appearance-legacy .mat-form-field-suffix .mat-icon-button .mat-icon{font-size:inherit}.mat-form-field-appearance-legacy .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-legacy .mat-form-field-ripple{top:0;height:2px;overflow:hidden}.cdk-high-contrast-active .mat-form-field-appearance-legacy .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-legacy.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px;border-top-color:GrayText}.mat-form-field-appearance-legacy.mat-form-field-invalid:not(.mat-focused) .mat-form-field-ripple{height:1px}\\n\", \".mat-form-field-appearance-outline .mat-form-field-wrapper{margin:.25em 0}.mat-form-field-appearance-outline .mat-form-field-flex{padding:0 .75em 0 .75em;margin-top:-0.25em;position:relative}.mat-form-field-appearance-outline .mat-form-field-prefix,.mat-form-field-appearance-outline .mat-form-field-suffix{top:.25em}.mat-form-field-appearance-outline .mat-form-field-outline{display:flex;position:absolute;top:.25em;left:0;right:0;bottom:0;pointer-events:none}.mat-form-field-appearance-outline .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-end{border:1px solid currentColor;min-width:5px}.mat-form-field-appearance-outline .mat-form-field-outline-start{border-radius:5px 0 0 5px;border-right-style:none}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-start{border-right-style:solid;border-left-style:none;border-radius:0 5px 5px 0}.mat-form-field-appearance-outline .mat-form-field-outline-end{border-radius:0 5px 5px 0;border-left-style:none;flex-grow:1}[dir=rtl] .mat-form-field-appearance-outline .mat-form-field-outline-end{border-left-style:solid;border-right-style:none;border-radius:5px 0 0 5px}.mat-form-field-appearance-outline .mat-form-field-outline-gap{border-radius:.000001px;border:1px solid currentColor;border-left-style:none;border-right-style:none}.mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-outline-gap{border-top-color:transparent}.mat-form-field-appearance-outline .mat-form-field-outline-thick{opacity:0}.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-start,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-end,.mat-form-field-appearance-outline .mat-form-field-outline-thick .mat-form-field-outline-gap{border-width:2px}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline{opacity:0;transition:opacity 100ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick,.mat-form-field-appearance-outline.mat-form-field-invalid .mat-form-field-outline-thick{opacity:1}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick{border:3px dashed}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline{opacity:0;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-outline:not(.mat-form-field-disabled) .mat-form-field-flex:hover .mat-form-field-outline-thick{opacity:1}.mat-form-field-appearance-outline .mat-form-field-subscript-wrapper{padding:0 1em}.cdk-high-contrast-active .mat-form-field-appearance-outline.mat-form-field-disabled .mat-form-field-outline{color:GrayText}.mat-form-field-appearance-outline._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-start,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-end,.mat-form-field-appearance-outline._mat-animation-noopable .mat-form-field-outline-gap{transition:none}\\n\", \".mat-form-field-appearance-standard .mat-form-field-flex{padding-top:.75em}.mat-form-field-appearance-standard .mat-form-field-underline{height:1px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-underline{height:0;border-top:solid 1px}.mat-form-field-appearance-standard .mat-form-field-ripple{bottom:0;height:2px}.cdk-high-contrast-active .mat-form-field-appearance-standard .mat-form-field-ripple{height:0;border-top:solid 2px}.mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{background-position:0;background-color:transparent}.cdk-high-contrast-active .mat-form-field-appearance-standard.mat-form-field-disabled .mat-form-field-underline{border-top-style:dotted;border-top-width:2px}.mat-form-field-appearance-standard:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{opacity:1;transform:none;transition:opacity 600ms cubic-bezier(0.25, 0.8, 0.25, 1)}.mat-form-field-appearance-standard._mat-animation-noopable:not(.mat-form-field-disabled) .mat-form-field-flex:hover~.mat-form-field-underline .mat-form-field-ripple{transition:none}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i0.ChangeDetectorRef }, { type: i1.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_FORM_FIELD_DEFAULT_OPTIONS]\n                    }] }, { type: i2.Platform }, { type: i0.NgZone }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { appearance: [{\n                type: Input\n            }], hideRequiredMarker: [{\n                type: Input\n            }], hintLabel: [{\n                type: Input\n            }], floatLabel: [{\n                type: Input\n            }], _connectionContainerRef: [{\n                type: ViewChild,\n                args: ['connectionContainer', { static: true }]\n            }], _inputContainerRef: [{\n                type: ViewChild,\n                args: ['inputContainer']\n            }], _label: [{\n                type: ViewChild,\n                args: ['label']\n            }], _controlNonStatic: [{\n                type: ContentChild,\n                args: [MatFormFieldControl]\n            }], _controlStatic: [{\n                type: ContentChild,\n                args: [MatFormFieldControl, { static: true }]\n            }], _labelChildNonStatic: [{\n                type: ContentChild,\n                args: [MatLabel]\n            }], _labelChildStatic: [{\n                type: ContentChild,\n                args: [MatLabel, { static: true }]\n            }], _placeholderChild: [{\n                type: ContentChild,\n                args: [MatPlaceholder]\n            }], _errorChildren: [{\n                type: ContentChildren,\n                args: [MAT_ERROR, { descendants: true }]\n            }], _hintChildren: [{\n                type: ContentChildren,\n                args: [_MAT_HINT, { descendants: true }]\n            }], _prefixChildren: [{\n                type: ContentChildren,\n                args: [MAT_PREFIX, { descendants: true }]\n            }], _suffixChildren: [{\n                type: ContentChildren,\n                args: [MAT_SUFFIX, { descendants: true }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatFormFieldModule {\n}\nMatFormFieldModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFormFieldModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatFormFieldModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFormFieldModule, declarations: [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix], imports: [CommonModule, MatCommonModule, ObserversModule], exports: [MatCommonModule,\n        MatError,\n        MatFormField,\n        MatHint,\n        MatLabel,\n        MatPlaceholder,\n        MatPrefix,\n        MatSuffix] });\nMatFormFieldModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFormFieldModule, imports: [[CommonModule, MatCommonModule, ObserversModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFormFieldModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [MatError, MatFormField, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix],\n                    imports: [CommonModule, MatCommonModule, ObserversModule],\n                    exports: [\n                        MatCommonModule,\n                        MatError,\n                        MatFormField,\n                        MatHint,\n                        MatLabel,\n                        MatPlaceholder,\n                        MatPrefix,\n                        MatSuffix,\n                    ],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_ERROR, MAT_FORM_FIELD, MAT_FORM_FIELD_DEFAULT_OPTIONS, MAT_PREFIX, MAT_SUFFIX, MatError, MatFormField, MatFormFieldControl, MatFormFieldModule, MatHint, MatLabel, MatPlaceholder, MatPrefix, MatSuffix, _MAT_HINT, getMatFormFieldDuplicatedHintError, getMatFormFieldMissingControlError, getMatFormFieldPlaceholderConflictError, matFormFieldAnimations };\n","import { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport * as i1 from '@angular/cdk/platform';\nimport { getSupportedInputTypes } from '@angular/cdk/platform';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Optional, Self, Inject, Input, NgModule } from '@angular/core';\nimport * as i2 from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport * as i3 from '@angular/material/core';\nimport { mixinErrorState, MatCommonModule, ErrorStateMatcher } from '@angular/material/core';\nimport * as i5 from '@angular/material/form-field';\nimport { MAT_FORM_FIELD, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport { Subject } from 'rxjs';\nimport * as i4 from '@angular/cdk/text-field';\nimport { TextFieldModule } from '@angular/cdk/text-field';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getMatInputUnsupportedTypeError(type) {\n    return Error(`Input type \"${type}\" isn't supported by matInput.`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token is used to inject the object whose value should be set into `MatInput`. If none is\n * provided, the native `HTMLInputElement` is used. Directives like `MatDatepickerInput` can provide\n * themselves for this token, in order to make `MatInput` delegate the getting and setting of the\n * value to them.\n */\nconst MAT_INPUT_VALUE_ACCESSOR = new InjectionToken('MAT_INPUT_VALUE_ACCESSOR');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Invalid input type. Using one of these will throw an MatInputUnsupportedTypeError.\nconst MAT_INPUT_INVALID_TYPES = [\n    'button',\n    'checkbox',\n    'file',\n    'hidden',\n    'image',\n    'radio',\n    'range',\n    'reset',\n    'submit',\n];\nlet nextUniqueId = 0;\n// Boilerplate for applying mixins to MatInput.\n/** @docs-private */\nconst _MatInputBase = mixinErrorState(class {\n    constructor(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, \n    /** @docs-private */\n    ngControl) {\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n});\n/** Directive that allows a native input to work inside a `MatFormField`. */\nclass MatInput extends _MatInputBase {\n    constructor(_elementRef, _platform, ngControl, _parentForm, _parentFormGroup, _defaultErrorStateMatcher, inputValueAccessor, _autofillMonitor, ngZone, \n    // TODO: Remove this once the legacy appearance has been removed. We only need\n    // to inject the form-field for determining whether the placeholder has been promoted.\n    _formField) {\n        super(_defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._elementRef = _elementRef;\n        this._platform = _platform;\n        this._autofillMonitor = _autofillMonitor;\n        this._formField = _formField;\n        this._uid = `mat-input-${nextUniqueId++}`;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.focused = false;\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.stateChanges = new Subject();\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.controlType = 'mat-input';\n        /**\n         * Implemented as part of MatFormFieldControl.\n         * @docs-private\n         */\n        this.autofilled = false;\n        this._disabled = false;\n        this._type = 'text';\n        this._readonly = false;\n        this._neverEmptyInputTypes = [\n            'date',\n            'datetime',\n            'datetime-local',\n            'month',\n            'time',\n            'week',\n        ].filter(t => getSupportedInputTypes().has(t));\n        this._iOSKeyupListener = (event) => {\n            const el = event.target;\n            // Note: We specifically check for 0, rather than `!el.selectionStart`, because the two\n            // indicate different things. If the value is 0, it means that the caret is at the start\n            // of the input, whereas a value of `null` means that the input doesn't support\n            // manipulating the selection range. Inputs that don't support setting the selection range\n            // will throw an error so we want to avoid calling `setSelectionRange` on them. See:\n            // https://html.spec.whatwg.org/multipage/input.html#do-not-apply\n            if (!el.value && el.selectionStart === 0 && el.selectionEnd === 0) {\n                // Note: Just setting `0, 0` doesn't fix the issue. Setting\n                // `1, 1` fixes it for the first time that you type text and\n                // then hold delete. Toggling to `1, 1` and then back to\n                // `0, 0` seems to completely fix it.\n                el.setSelectionRange(1, 1);\n                el.setSelectionRange(0, 0);\n            }\n        };\n        const element = this._elementRef.nativeElement;\n        const nodeName = element.nodeName.toLowerCase();\n        // If no input value accessor was explicitly specified, use the element as the input value\n        // accessor.\n        this._inputValueAccessor = inputValueAccessor || element;\n        this._previousNativeValue = this.value;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n        // On some versions of iOS the caret gets stuck in the wrong place when holding down the delete\n        // key. In order to get around this we need to \"jiggle\" the caret loose. Since this bug only\n        // exists on iOS, we only bother to install the listener on iOS.\n        if (_platform.IOS) {\n            ngZone.runOutsideAngular(() => {\n                _elementRef.nativeElement.addEventListener('keyup', this._iOSKeyupListener);\n            });\n        }\n        this._isServer = !this._platform.isBrowser;\n        this._isNativeSelect = nodeName === 'select';\n        this._isTextarea = nodeName === 'textarea';\n        this._isInFormField = !!_formField;\n        if (this._isNativeSelect) {\n            this.controlType = element.multiple\n                ? 'mat-native-select-multiple'\n                : 'mat-native-select';\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() {\n        if (this.ngControl && this.ngControl.disabled !== null) {\n            return this.ngControl.disabled;\n        }\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // Browsers may not fire the blur event if the input is disabled too quickly.\n        // Reset from here to ensure that the element doesn't become stuck.\n        if (this.focused) {\n            this.focused = false;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() {\n        return this._id;\n    }\n    set id(value) {\n        this._id = value || this._uid;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() {\n        var _a, _b, _c, _d;\n        return (_d = (_a = this._required) !== null && _a !== void 0 ? _a : (_c = (_b = this.ngControl) === null || _b === void 0 ? void 0 : _b.control) === null || _c === void 0 ? void 0 : _c.hasValidator(Validators.required)) !== null && _d !== void 0 ? _d : false;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Input type of the element. */\n    get type() {\n        return this._type;\n    }\n    set type(value) {\n        this._type = value || 'text';\n        this._validateType();\n        // When using Angular inputs, developers are no longer able to set the properties on the native\n        // input element. To ensure that bindings for `type` work, we need to sync the setter\n        // with the native property. Textarea elements don't support the type property or attribute.\n        if (!this._isTextarea && getSupportedInputTypes().has(this._type)) {\n            this._elementRef.nativeElement.type = this._type;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() {\n        return this._inputValueAccessor.value;\n    }\n    set value(value) {\n        if (value !== this.value) {\n            this._inputValueAccessor.value = value;\n            this.stateChanges.next();\n        }\n    }\n    /** Whether the element is readonly. */\n    get readonly() {\n        return this._readonly;\n    }\n    set readonly(value) {\n        this._readonly = coerceBooleanProperty(value);\n    }\n    ngAfterViewInit() {\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.monitor(this._elementRef.nativeElement).subscribe(event => {\n                this.autofilled = event.isAutofilled;\n                this.stateChanges.next();\n            });\n        }\n    }\n    ngOnChanges() {\n        this.stateChanges.next();\n    }\n    ngOnDestroy() {\n        this.stateChanges.complete();\n        if (this._platform.isBrowser) {\n            this._autofillMonitor.stopMonitoring(this._elementRef.nativeElement);\n        }\n        if (this._platform.IOS) {\n            this._elementRef.nativeElement.removeEventListener('keyup', this._iOSKeyupListener);\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n        // We need to dirty-check the native element's value, because there are some cases where\n        // we won't be notified when it changes (e.g. the consumer isn't using forms or they're\n        // updating the value using `emitEvent: false`).\n        this._dirtyCheckNativeValue();\n        // We need to dirty-check and set the placeholder attribute ourselves, because whether it's\n        // present or not depends on a query which is prone to \"changed after checked\" errors.\n        this._dirtyCheckPlaceholder();\n    }\n    /** Focuses the input. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Callback for the cases where the focused state of the input changes. */\n    _focusChanged(isFocused) {\n        if (isFocused !== this.focused) {\n            this.focused = isFocused;\n            this.stateChanges.next();\n        }\n    }\n    _onInput() {\n        // This is a noop function and is used to let Angular know whenever the value changes.\n        // Angular will run a new change detection each time the `input` event has been dispatched.\n        // It's necessary that Angular recognizes the value change, because when floatingLabel\n        // is set to false and Angular forms aren't used, the placeholder won't recognize the\n        // value changes and will not disappear.\n        // Listening to the input event wouldn't be necessary when the input is using the\n        // FormsModule or ReactiveFormsModule, because Angular forms also listens to input events.\n    }\n    /** Does some manual dirty checking on the native input `placeholder` attribute. */\n    _dirtyCheckPlaceholder() {\n        var _a, _b;\n        // If we're hiding the native placeholder, it should also be cleared from the DOM, otherwise\n        // screen readers will read it out twice: once from the label and once from the attribute.\n        // TODO: can be removed once we get rid of the `legacy` style for the form field, because it's\n        // the only one that supports promoting the placeholder to a label.\n        const placeholder = ((_b = (_a = this._formField) === null || _a === void 0 ? void 0 : _a._hideControlPlaceholder) === null || _b === void 0 ? void 0 : _b.call(_a)) ? null : this.placeholder;\n        if (placeholder !== this._previousPlaceholder) {\n            const element = this._elementRef.nativeElement;\n            this._previousPlaceholder = placeholder;\n            placeholder\n                ? element.setAttribute('placeholder', placeholder)\n                : element.removeAttribute('placeholder');\n        }\n    }\n    /** Does some manual dirty checking on the native input `value` property. */\n    _dirtyCheckNativeValue() {\n        const newValue = this._elementRef.nativeElement.value;\n        if (this._previousNativeValue !== newValue) {\n            this._previousNativeValue = newValue;\n            this.stateChanges.next();\n        }\n    }\n    /** Make sure the input is a supported type. */\n    _validateType() {\n        if (MAT_INPUT_INVALID_TYPES.indexOf(this._type) > -1 &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatInputUnsupportedTypeError(this._type);\n        }\n    }\n    /** Checks whether the input type is one of the types that are never empty. */\n    _isNeverEmpty() {\n        return this._neverEmptyInputTypes.indexOf(this._type) > -1;\n    }\n    /** Checks whether the input is invalid based on the native validation. */\n    _isBadInput() {\n        // The `validity` property won't be present on platform-server.\n        let validity = this._elementRef.nativeElement.validity;\n        return validity && validity.badInput;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n        return (!this._isNeverEmpty() &&\n            !this._elementRef.nativeElement.value &&\n            !this._isBadInput() &&\n            !this.autofilled);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        if (this._isNativeSelect) {\n            // For a single-selection `<select>`, the label should float when the selected option has\n            // a non-empty display value. For a `<select multiple>`, the label *always* floats to avoid\n            // overlapping the label with the options.\n            const selectElement = this._elementRef.nativeElement;\n            const firstOption = selectElement.options[0];\n            // On most browsers the `selectedIndex` will always be 0, however on IE and Edge it'll be\n            // -1 if the `value` is set to something, that isn't in the list of options, at a later point.\n            return (this.focused ||\n                selectElement.multiple ||\n                !this.empty ||\n                !!(selectElement.selectedIndex > -1 && firstOption && firstOption.label));\n        }\n        else {\n            return this.focused || !this.empty;\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        if (ids.length) {\n            this._elementRef.nativeElement.setAttribute('aria-describedby', ids.join(' '));\n        }\n        else {\n            this._elementRef.nativeElement.removeAttribute('aria-describedby');\n        }\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        // Do not re-focus the input element if the element is already focused. Otherwise it can happen\n        // that someone clicks on a time input and the cursor resets to the \"hours\" field while the\n        // \"minutes\" field was actually clicked. See: https://github.com/angular/components/issues/12849\n        if (!this.focused) {\n            this.focus();\n        }\n    }\n    /** Whether the form control is a native select that is displayed inline. */\n    _isInlineSelect() {\n        const element = this._elementRef.nativeElement;\n        return this._isNativeSelect && (element.multiple || element.size > 1);\n    }\n}\nMatInput.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatInput, deps: [{ token: i0.ElementRef }, { token: i1.Platform }, { token: i2.NgControl, optional: true, self: true }, { token: i2.NgForm, optional: true }, { token: i2.FormGroupDirective, optional: true }, { token: i3.ErrorStateMatcher }, { token: MAT_INPUT_VALUE_ACCESSOR, optional: true, self: true }, { token: i4.AutofillMonitor }, { token: i0.NgZone }, { token: MAT_FORM_FIELD, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatInput.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatInput, selector: \"input[matInput], textarea[matInput], select[matNativeControl],\\n      input[matNativeControl], textarea[matNativeControl]\", inputs: { disabled: \"disabled\", id: \"id\", placeholder: \"placeholder\", name: \"name\", required: \"required\", type: \"type\", errorStateMatcher: \"errorStateMatcher\", userAriaDescribedBy: [\"aria-describedby\", \"userAriaDescribedBy\"], value: \"value\", readonly: \"readonly\" }, host: { listeners: { \"focus\": \"_focusChanged(true)\", \"blur\": \"_focusChanged(false)\", \"input\": \"_onInput()\" }, properties: { \"class.mat-input-server\": \"_isServer\", \"attr.id\": \"id\", \"attr.data-placeholder\": \"placeholder\", \"disabled\": \"disabled\", \"required\": \"required\", \"attr.name\": \"name || null\", \"attr.readonly\": \"readonly && !_isNativeSelect || null\", \"class.mat-native-select-inline\": \"_isInlineSelect()\", \"attr.aria-invalid\": \"(empty && required) ? null : errorState\", \"attr.aria-required\": \"required\" }, classAttribute: \"mat-input-element mat-form-field-autofill-control\" }, providers: [{ provide: MatFormFieldControl, useExisting: MatInput }], exportAs: [\"matInput\"], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatInput, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `input[matInput], textarea[matInput], select[matNativeControl],\n      input[matNativeControl], textarea[matNativeControl]`,\n                    exportAs: 'matInput',\n                    host: {\n                        /**\n                         * @breaking-change 8.0.0 remove .mat-form-field-autofill-control in favor of AutofillMonitor.\n                         */\n                        'class': 'mat-input-element mat-form-field-autofill-control',\n                        '[class.mat-input-server]': '_isServer',\n                        // Native input properties that are overwritten by Angular inputs need to be synced with\n                        // the native input element. Otherwise property bindings for those don't work.\n                        '[attr.id]': 'id',\n                        // At the time of writing, we have a lot of customer tests that look up the input based on its\n                        // placeholder. Since we sometimes omit the placeholder attribute from the DOM to prevent screen\n                        // readers from reading it twice, we have to keep it somewhere in the DOM for the lookup.\n                        '[attr.data-placeholder]': 'placeholder',\n                        '[disabled]': 'disabled',\n                        '[required]': 'required',\n                        '[attr.name]': 'name || null',\n                        '[attr.readonly]': 'readonly && !_isNativeSelect || null',\n                        '[class.mat-native-select-inline]': '_isInlineSelect()',\n                        // Only mark the input as invalid for assistive technology if it has a value since the\n                        // state usually overlaps with `aria-required` when the input is empty and can be redundant.\n                        '[attr.aria-invalid]': '(empty && required) ? null : errorState',\n                        '[attr.aria-required]': 'required',\n                        '(focus)': '_focusChanged(true)',\n                        '(blur)': '_focusChanged(false)',\n                        '(input)': '_onInput()',\n                    },\n                    providers: [{ provide: MatFormFieldControl, useExisting: MatInput }],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.Platform }, { type: i2.NgControl, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }] }, { type: i2.NgForm, decorators: [{\n                        type: Optional\n                    }] }, { type: i2.FormGroupDirective, decorators: [{\n                        type: Optional\n                    }] }, { type: i3.ErrorStateMatcher }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Self\n                    }, {\n                        type: Inject,\n                        args: [MAT_INPUT_VALUE_ACCESSOR]\n                    }] }, { type: i4.AutofillMonitor }, { type: i0.NgZone }, { type: i5.MatFormField, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_FORM_FIELD]\n                    }] }];\n    }, propDecorators: { disabled: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], name: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], type: [{\n                type: Input\n            }], errorStateMatcher: [{\n                type: Input\n            }], userAriaDescribedBy: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], value: [{\n                type: Input\n            }], readonly: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatInputModule {\n}\nMatInputModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatInputModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatInputModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatInputModule, declarations: [MatInput], imports: [TextFieldModule, MatFormFieldModule, MatCommonModule], exports: [TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule,\n        MatInput] });\nMatInputModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatInputModule, providers: [ErrorStateMatcher], imports: [[TextFieldModule, MatFormFieldModule, MatCommonModule], TextFieldModule,\n        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n        // be used together with `MatFormField`.\n        MatFormFieldModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatInputModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [MatInput],\n                    imports: [TextFieldModule, MatFormFieldModule, MatCommonModule],\n                    exports: [\n                        TextFieldModule,\n                        // We re-export the `MatFormFieldModule` since `MatInput` will almost always\n                        // be used together with `MatFormField`.\n                        MatFormFieldModule,\n                        MatInput,\n                    ],\n                    providers: [ErrorStateMatcher],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_INPUT_VALUE_ACCESSOR, MatInput, MatInputModule, getMatInputUnsupportedTypeError };\n","import * as i6 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Optional, SkipSelf, InjectionToken, EventEmitter, Directive, Input, Output, Component, ChangeDetectionStrategy, ViewEncapsulation, Inject, NgModule } from '@angular/core';\nimport * as i4 from '@angular/material/core';\nimport { mixinDisabled, mixinInitialized, MatCommonModule } from '@angular/material/core';\nimport * as i5 from '@angular/material/button';\nimport { MatButtonModule } from '@angular/material/button';\nimport * as i3 from '@angular/material/select';\nimport { MatSelectModule } from '@angular/material/select';\nimport * as i7 from '@angular/material/tooltip';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { coerceNumberProperty, coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { Subject } from 'rxjs';\nimport * as i2 from '@angular/material/form-field';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatPaginatorIntl and\n * include it in a custom provider\n */\nclass MatPaginatorIntl {\n    constructor() {\n        /**\n         * Stream to emit from when labels are changed. Use this to notify components when the labels have\n         * changed after initialization.\n         */\n        this.changes = new Subject();\n        /** A label for the page size selector. */\n        this.itemsPerPageLabel = 'Items per page:';\n        /** A label for the button that increments the current page. */\n        this.nextPageLabel = 'Next page';\n        /** A label for the button that decrements the current page. */\n        this.previousPageLabel = 'Previous page';\n        /** A label for the button that moves to the first page. */\n        this.firstPageLabel = 'First page';\n        /** A label for the button that moves to the last page. */\n        this.lastPageLabel = 'Last page';\n        /** A label for the range of items within the current page and the length of the whole list. */\n        this.getRangeLabel = (page, pageSize, length) => {\n            if (length == 0 || pageSize == 0) {\n                return `0 of ${length}`;\n            }\n            length = Math.max(length, 0);\n            const startIndex = page * pageSize;\n            // If the start index exceeds the list length, do not try and fix the end index to the end.\n            const endIndex = startIndex < length ? Math.min(startIndex + pageSize, length) : startIndex + pageSize;\n            return `${startIndex + 1} – ${endIndex} of ${length}`;\n        };\n    }\n}\nMatPaginatorIntl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPaginatorIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nMatPaginatorIntl.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPaginatorIntl, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPaginatorIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** @docs-private */\nfunction MAT_PAGINATOR_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatPaginatorIntl();\n}\n/** @docs-private */\nconst MAT_PAGINATOR_INTL_PROVIDER = {\n    // If there is already an MatPaginatorIntl available, use that. Otherwise, provide a new one.\n    provide: MatPaginatorIntl,\n    deps: [[new Optional(), new SkipSelf(), MatPaginatorIntl]],\n    useFactory: MAT_PAGINATOR_INTL_PROVIDER_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** The default page size if there is no page size and there are no provided page size options. */\nconst DEFAULT_PAGE_SIZE = 50;\n/**\n * Change event object that is emitted when the user selects a\n * different page size or navigates to another page.\n */\nclass PageEvent {\n}\n/** Injection token that can be used to provide the default options for the paginator module. */\nconst MAT_PAGINATOR_DEFAULT_OPTIONS = new InjectionToken('MAT_PAGINATOR_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to _MatPaginatorBase.\n/** @docs-private */\nconst _MatPaginatorMixinBase = mixinDisabled(mixinInitialized(class {\n}));\n/**\n * Base class with all of the `MatPaginator` functionality.\n * @docs-private\n */\nclass _MatPaginatorBase extends _MatPaginatorMixinBase {\n    constructor(_intl, _changeDetectorRef, defaults) {\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._pageIndex = 0;\n        this._length = 0;\n        this._pageSizeOptions = [];\n        this._hidePageSize = false;\n        this._showFirstLastButtons = false;\n        /** Event emitted when the paginator changes the page size or page index. */\n        this.page = new EventEmitter();\n        this._intlChanges = _intl.changes.subscribe(() => this._changeDetectorRef.markForCheck());\n        if (defaults) {\n            const { pageSize, pageSizeOptions, hidePageSize, showFirstLastButtons } = defaults;\n            if (pageSize != null) {\n                this._pageSize = pageSize;\n            }\n            if (pageSizeOptions != null) {\n                this._pageSizeOptions = pageSizeOptions;\n            }\n            if (hidePageSize != null) {\n                this._hidePageSize = hidePageSize;\n            }\n            if (showFirstLastButtons != null) {\n                this._showFirstLastButtons = showFirstLastButtons;\n            }\n        }\n    }\n    /** The zero-based page index of the displayed list of items. Defaulted to 0. */\n    get pageIndex() {\n        return this._pageIndex;\n    }\n    set pageIndex(value) {\n        this._pageIndex = Math.max(coerceNumberProperty(value), 0);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** The length of the total number of items that are being paginated. Defaulted to 0. */\n    get length() {\n        return this._length;\n    }\n    set length(value) {\n        this._length = coerceNumberProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Number of items to display on a page. By default set to 50. */\n    get pageSize() {\n        return this._pageSize;\n    }\n    set pageSize(value) {\n        this._pageSize = Math.max(coerceNumberProperty(value), 0);\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** The set of provided page size options to display to the user. */\n    get pageSizeOptions() {\n        return this._pageSizeOptions;\n    }\n    set pageSizeOptions(value) {\n        this._pageSizeOptions = (value || []).map(p => coerceNumberProperty(p));\n        this._updateDisplayedPageSizeOptions();\n    }\n    /** Whether to hide the page size selection UI from the user. */\n    get hidePageSize() {\n        return this._hidePageSize;\n    }\n    set hidePageSize(value) {\n        this._hidePageSize = coerceBooleanProperty(value);\n    }\n    /** Whether to show the first/last buttons UI to the user. */\n    get showFirstLastButtons() {\n        return this._showFirstLastButtons;\n    }\n    set showFirstLastButtons(value) {\n        this._showFirstLastButtons = coerceBooleanProperty(value);\n    }\n    ngOnInit() {\n        this._initialized = true;\n        this._updateDisplayedPageSizeOptions();\n        this._markInitialized();\n    }\n    ngOnDestroy() {\n        this._intlChanges.unsubscribe();\n    }\n    /** Advances to the next page if it exists. */\n    nextPage() {\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.pageIndex + 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move back to the previous page if it exists. */\n    previousPage() {\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.pageIndex - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the first page if not already there. */\n    firstPage() {\n        // hasPreviousPage being false implies at the start\n        if (!this.hasPreviousPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = 0;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Move to the last page if not already there. */\n    lastPage() {\n        // hasNextPage being false implies at the end\n        if (!this.hasNextPage()) {\n            return;\n        }\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = this.getNumberOfPages() - 1;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Whether there is a previous page. */\n    hasPreviousPage() {\n        return this.pageIndex >= 1 && this.pageSize != 0;\n    }\n    /** Whether there is a next page. */\n    hasNextPage() {\n        const maxPageIndex = this.getNumberOfPages() - 1;\n        return this.pageIndex < maxPageIndex && this.pageSize != 0;\n    }\n    /** Calculate the number of pages */\n    getNumberOfPages() {\n        if (!this.pageSize) {\n            return 0;\n        }\n        return Math.ceil(this.length / this.pageSize);\n    }\n    /**\n     * Changes the page size so that the first item displayed on the page will still be\n     * displayed using the new page size.\n     *\n     * For example, if the page size is 10 and on the second page (items indexed 10-19) then\n     * switching so that the page size is 5 will set the third page as the current page so\n     * that the 10th item will still be displayed.\n     */\n    _changePageSize(pageSize) {\n        // Current page needs to be updated to reflect the new page size. Navigate to the page\n        // containing the previous page's first item.\n        const startIndex = this.pageIndex * this.pageSize;\n        const previousPageIndex = this.pageIndex;\n        this.pageIndex = Math.floor(startIndex / pageSize) || 0;\n        this.pageSize = pageSize;\n        this._emitPageEvent(previousPageIndex);\n    }\n    /** Checks whether the buttons for going forwards should be disabled. */\n    _nextButtonsDisabled() {\n        return this.disabled || !this.hasNextPage();\n    }\n    /** Checks whether the buttons for going backwards should be disabled. */\n    _previousButtonsDisabled() {\n        return this.disabled || !this.hasPreviousPage();\n    }\n    /**\n     * Updates the list of page size options to display to the user. Includes making sure that\n     * the page size is an option and that the list is sorted.\n     */\n    _updateDisplayedPageSizeOptions() {\n        if (!this._initialized) {\n            return;\n        }\n        // If no page size is provided, use the first page size option or the default page size.\n        if (!this.pageSize) {\n            this._pageSize =\n                this.pageSizeOptions.length != 0 ? this.pageSizeOptions[0] : DEFAULT_PAGE_SIZE;\n        }\n        this._displayedPageSizeOptions = this.pageSizeOptions.slice();\n        if (this._displayedPageSizeOptions.indexOf(this.pageSize) === -1) {\n            this._displayedPageSizeOptions.push(this.pageSize);\n        }\n        // Sort the numbers using a number-specific sort function.\n        this._displayedPageSizeOptions.sort((a, b) => a - b);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits an event notifying that a change of the paginator's properties has been triggered. */\n    _emitPageEvent(previousPageIndex) {\n        this.page.emit({\n            previousPageIndex,\n            pageIndex: this.pageIndex,\n            pageSize: this.pageSize,\n            length: this.length,\n        });\n    }\n}\n_MatPaginatorBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatPaginatorBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive });\n_MatPaginatorBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatPaginatorBase, inputs: { color: \"color\", pageIndex: \"pageIndex\", length: \"length\", pageSize: \"pageSize\", pageSizeOptions: \"pageSizeOptions\", hidePageSize: \"hidePageSize\", showFirstLastButtons: \"showFirstLastButtons\" }, outputs: { page: \"page\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatPaginatorBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () { return [{ type: MatPaginatorIntl }, { type: i0.ChangeDetectorRef }, { type: undefined }]; }, propDecorators: { color: [{\n                type: Input\n            }], pageIndex: [{\n                type: Input\n            }], length: [{\n                type: Input\n            }], pageSize: [{\n                type: Input\n            }], pageSizeOptions: [{\n                type: Input\n            }], hidePageSize: [{\n                type: Input\n            }], showFirstLastButtons: [{\n                type: Input\n            }], page: [{\n                type: Output\n            }] } });\n/**\n * Component to provide navigation between paged information. Displays the size of the current\n * page, user-selectable options to change that size, what items are being shown, and\n * navigational button to go to the previous or next page.\n */\nclass MatPaginator extends _MatPaginatorBase {\n    constructor(intl, changeDetectorRef, defaults) {\n        super(intl, changeDetectorRef, defaults);\n        if (defaults && defaults.formFieldAppearance != null) {\n            this._formFieldAppearance = defaults.formFieldAppearance;\n        }\n    }\n}\nMatPaginator.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPaginator, deps: [{ token: MatPaginatorIntl }, { token: i0.ChangeDetectorRef }, { token: MAT_PAGINATOR_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatPaginator.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatPaginator, selector: \"mat-paginator\", inputs: { disabled: \"disabled\" }, host: { attributes: { \"role\": \"group\" }, classAttribute: \"mat-paginator\" }, exportAs: [\"matPaginator\"], usesInheritance: true, ngImport: i0, template: \"<div class=\\\"mat-paginator-outer-container\\\">\\n  <div class=\\\"mat-paginator-container\\\">\\n    <div class=\\\"mat-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\">\\n      <div class=\\\"mat-paginator-page-size-label\\\">\\n        {{_intl.itemsPerPageLabel}}\\n      </div>\\n\\n      <mat-form-field\\n        *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\"\\n        [appearance]=\\\"_formFieldAppearance!\\\"\\n        [color]=\\\"color\\\"\\n        class=\\\"mat-paginator-page-size-select\\\">\\n        <mat-select\\n          [value]=\\\"pageSize\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [aria-label]=\\\"_intl.itemsPerPageLabel\\\"\\n          (selectionChange)=\\\"_changePageSize($event.value)\\\">\\n          <mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">\\n            {{pageSizeOption}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <div\\n        class=\\\"mat-paginator-page-size-value\\\"\\n        *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div>\\n    </div>\\n\\n    <div class=\\\"mat-paginator-range-actions\\\">\\n      <div class=\\\"mat-paginator-range-label\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-first\\\"\\n              (click)=\\\"firstPage()\\\"\\n              [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-last\\\"\\n              (click)=\\\"lastPage()\\\"\\n              [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n        </svg>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-paginator-icon{fill:CanvasText}\\n\"], components: [{ type: i2.MatFormField, selector: \"mat-form-field\", inputs: [\"color\", \"appearance\", \"hideRequiredMarker\", \"hintLabel\", \"floatLabel\"], exportAs: [\"matFormField\"] }, { type: i3.MatSelect, selector: \"mat-select\", inputs: [\"disabled\", \"disableRipple\", \"tabIndex\"], exportAs: [\"matSelect\"] }, { type: i4.MatOption, selector: \"mat-option\", exportAs: [\"matOption\"] }, { type: i5.MatButton, selector: \"button[mat-button], button[mat-raised-button], button[mat-icon-button],             button[mat-fab], button[mat-mini-fab], button[mat-stroked-button],             button[mat-flat-button]\", inputs: [\"disabled\", \"disableRipple\", \"color\"], exportAs: [\"matButton\"] }], directives: [{ type: i6.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i6.NgForOf, selector: \"[ngFor][ngForOf]\", inputs: [\"ngForOf\", \"ngForTrackBy\", \"ngForTemplate\"] }, { type: i7.MatTooltip, selector: \"[matTooltip]\", exportAs: [\"matTooltip\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPaginator, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-paginator', exportAs: 'matPaginator', inputs: ['disabled'], host: {\n                        'class': 'mat-paginator',\n                        'role': 'group',\n                    }, changeDetection: ChangeDetectionStrategy.OnPush, encapsulation: ViewEncapsulation.None, template: \"<div class=\\\"mat-paginator-outer-container\\\">\\n  <div class=\\\"mat-paginator-container\\\">\\n    <div class=\\\"mat-paginator-page-size\\\" *ngIf=\\\"!hidePageSize\\\">\\n      <div class=\\\"mat-paginator-page-size-label\\\">\\n        {{_intl.itemsPerPageLabel}}\\n      </div>\\n\\n      <mat-form-field\\n        *ngIf=\\\"_displayedPageSizeOptions.length > 1\\\"\\n        [appearance]=\\\"_formFieldAppearance!\\\"\\n        [color]=\\\"color\\\"\\n        class=\\\"mat-paginator-page-size-select\\\">\\n        <mat-select\\n          [value]=\\\"pageSize\\\"\\n          [disabled]=\\\"disabled\\\"\\n          [aria-label]=\\\"_intl.itemsPerPageLabel\\\"\\n          (selectionChange)=\\\"_changePageSize($event.value)\\\">\\n          <mat-option *ngFor=\\\"let pageSizeOption of _displayedPageSizeOptions\\\" [value]=\\\"pageSizeOption\\\">\\n            {{pageSizeOption}}\\n          </mat-option>\\n        </mat-select>\\n      </mat-form-field>\\n\\n      <div\\n        class=\\\"mat-paginator-page-size-value\\\"\\n        *ngIf=\\\"_displayedPageSizeOptions.length <= 1\\\">{{pageSize}}</div>\\n    </div>\\n\\n    <div class=\\\"mat-paginator-range-actions\\\">\\n      <div class=\\\"mat-paginator-range-label\\\">\\n        {{_intl.getRangeLabel(pageIndex, pageSize, length)}}\\n      </div>\\n\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-first\\\"\\n              (click)=\\\"firstPage()\\\"\\n              [attr.aria-label]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltip]=\\\"_intl.firstPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M18.41 16.59L13.82 12l4.59-4.59L17 6l-6 6 6 6zM6 6h2v12H6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-previous\\\"\\n              (click)=\\\"previousPage()\\\"\\n              [attr.aria-label]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltip]=\\\"_intl.previousPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_previousButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_previousButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M15.41 7.41L14 6l-6 6 6 6 1.41-1.41L10.83 12z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-next\\\"\\n              (click)=\\\"nextPage()\\\"\\n              [attr.aria-label]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltip]=\\\"_intl.nextPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M10 6L8.59 7.41 13.17 12l-4.58 4.59L10 18l6-6z\\\"/>\\n        </svg>\\n      </button>\\n      <button mat-icon-button type=\\\"button\\\"\\n              class=\\\"mat-paginator-navigation-last\\\"\\n              (click)=\\\"lastPage()\\\"\\n              [attr.aria-label]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltip]=\\\"_intl.lastPageLabel\\\"\\n              [matTooltipDisabled]=\\\"_nextButtonsDisabled()\\\"\\n              [matTooltipPosition]=\\\"'above'\\\"\\n              [disabled]=\\\"_nextButtonsDisabled()\\\"\\n              *ngIf=\\\"showFirstLastButtons\\\">\\n        <svg class=\\\"mat-paginator-icon\\\" viewBox=\\\"0 0 24 24\\\" focusable=\\\"false\\\">\\n          <path d=\\\"M5.59 7.41L10.18 12l-4.59 4.59L7 18l6-6-6-6zM16 6h2v12h-2z\\\"/>\\n        </svg>\\n      </button>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-paginator{display:block}.mat-paginator-outer-container{display:flex}.mat-paginator-container{display:flex;align-items:center;justify-content:flex-end;padding:0 8px;flex-wrap:wrap-reverse;width:100%}.mat-paginator-page-size{display:flex;align-items:baseline;margin-right:8px}[dir=rtl] .mat-paginator-page-size{margin-right:0;margin-left:8px}.mat-paginator-page-size-label{margin:0 4px}.mat-paginator-page-size-select{margin:6px 4px 0 4px;width:56px}.mat-paginator-page-size-select.mat-form-field-appearance-outline{width:64px}.mat-paginator-page-size-select.mat-form-field-appearance-fill{width:64px}.mat-paginator-range-label{margin:0 32px 0 24px}.mat-paginator-range-actions{display:flex;align-items:center}.mat-paginator-icon{width:28px;fill:currentColor}[dir=rtl] .mat-paginator-icon{transform:rotate(180deg)}.cdk-high-contrast-active .mat-paginator-icon{fill:CanvasText}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: MatPaginatorIntl }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_PAGINATOR_DEFAULT_OPTIONS]\n                    }] }];\n    } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatPaginatorModule {\n}\nMatPaginatorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPaginatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatPaginatorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPaginatorModule, declarations: [MatPaginator], imports: [CommonModule, MatButtonModule, MatSelectModule, MatTooltipModule, MatCommonModule], exports: [MatPaginator] });\nMatPaginatorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPaginatorModule, providers: [MAT_PAGINATOR_INTL_PROVIDER], imports: [[CommonModule, MatButtonModule, MatSelectModule, MatTooltipModule, MatCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatPaginatorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatButtonModule, MatSelectModule, MatTooltipModule, MatCommonModule],\n                    exports: [MatPaginator],\n                    declarations: [MatPaginator],\n                    providers: [MAT_PAGINATOR_INTL_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_PAGINATOR_DEFAULT_OPTIONS, MAT_PAGINATOR_INTL_PROVIDER, MAT_PAGINATOR_INTL_PROVIDER_FACTORY, MatPaginator, MatPaginatorIntl, MatPaginatorModule, PageEvent, _MatPaginatorBase };\n","import * as i7 from '@angular/cdk/overlay';\nimport { Overlay, CdkConnectedOverlay, OverlayModule } from '@angular/cdk/overlay';\nimport * as i8 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, EventEmitter, Optional, Inject, Self, Attribute, ViewChild, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, ContentChild, NgModule } from '@angular/core';\nimport * as i2 from '@angular/material/core';\nimport { mixinDisableRipple, mixinTabIndex, mixinDisabled, mixinErrorState, _countGroupLabelsBeforeOption, _getOptionScrollPosition, MAT_OPTION_PARENT_COMPONENT, MatOption, MAT_OPTGROUP, MatOptionModule, MatCommonModule } from '@angular/material/core';\nimport * as i6 from '@angular/material/form-field';\nimport { MAT_FORM_FIELD, MatFormFieldControl, MatFormFieldModule } from '@angular/material/form-field';\nimport * as i1 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport * as i5 from '@angular/cdk/a11y';\nimport { ActiveDescendantKeyManager } from '@angular/cdk/a11y';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { DOWN_ARROW, UP_ARROW, LEFT_ARROW, RIGHT_ARROW, ENTER, SPACE, hasModifierKey, A } from '@angular/cdk/keycodes';\nimport * as i4 from '@angular/forms';\nimport { Validators } from '@angular/forms';\nimport { Subject, defer, merge } from 'rxjs';\nimport { startWith, switchMap, take, filter, map, distinctUntilChanged, takeUntil } from 'rxjs/operators';\nimport { trigger, transition, query, animateChild, state, style, animate } from '@angular/animations';\nimport * as i3 from '@angular/cdk/bidi';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The following are all the animations for the mat-select component, with each\n * const containing the metadata for one animation.\n *\n * The values below match the implementation of the AngularJS Material mat-select animation.\n * @docs-private\n */\nconst matSelectAnimations = {\n    /**\n     * This animation ensures the select's overlay panel animation (transformPanel) is called when\n     * closing the select.\n     * This is needed due to https://github.com/angular/angular/issues/23302\n     */\n    transformPanelWrap: trigger('transformPanelWrap', [\n        transition('* => void', query('@transformPanel', [animateChild()], { optional: true })),\n    ]),\n    /**\n     * This animation transforms the select's overlay panel on and off the page.\n     *\n     * When the panel is attached to the DOM, it expands its width by the amount of padding, scales it\n     * up to 100% on the Y axis, fades in its border, and translates slightly up and to the\n     * side to ensure the option text correctly overlaps the trigger text.\n     *\n     * When the panel is removed from the DOM, it simply fades out linearly.\n     */\n    transformPanel: trigger('transformPanel', [\n        state('void', style({\n            transform: 'scaleY(0.8)',\n            minWidth: '100%',\n            opacity: 0,\n        })),\n        state('showing', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 32px)',\n            transform: 'scaleY(1)',\n        })),\n        state('showing-multiple', style({\n            opacity: 1,\n            minWidth: 'calc(100% + 64px)',\n            transform: 'scaleY(1)',\n        })),\n        transition('void => *', animate('120ms cubic-bezier(0, 0, 0.2, 1)')),\n        transition('* => void', animate('100ms 25ms linear', style({ opacity: 0 }))),\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns an exception to be thrown when attempting to change a select's `multiple` option\n * after initialization.\n * @docs-private\n */\nfunction getMatSelectDynamicMultipleError() {\n    return Error('Cannot change `multiple` mode of select after initialization.');\n}\n/**\n * Returns an exception to be thrown when attempting to assign a non-array value to a select\n * in `multiple` mode. Note that `undefined` and `null` are still valid values to allow for\n * resetting the value.\n * @docs-private\n */\nfunction getMatSelectNonArrayValueError() {\n    return Error('Value must be an array in multiple-selection mode.');\n}\n/**\n * Returns an exception to be thrown when assigning a non-function value to the comparator\n * used to determine if a value corresponds to an option. Note that whether the function\n * actually takes two values and returns a boolean is not checked.\n */\nfunction getMatSelectNonFunctionValueError() {\n    return Error('`compareWith` must be a function.');\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nlet nextUniqueId = 0;\n/**\n * The following style constants are necessary to save here in order\n * to properly calculate the alignment of the selected option over\n * the trigger element.\n */\n/** The max height of the select's overlay panel. */\nconst SELECT_PANEL_MAX_HEIGHT = 256;\n/** The panel's padding on the x-axis. */\nconst SELECT_PANEL_PADDING_X = 16;\n/** The panel's x axis padding if it is indented (e.g. there is an option group). */\nconst SELECT_PANEL_INDENT_PADDING_X = SELECT_PANEL_PADDING_X * 2;\n/** The height of the select items in `em` units. */\nconst SELECT_ITEM_HEIGHT_EM = 3;\n// TODO(josephperrott): Revert to a constant after 2018 spec updates are fully merged.\n/**\n * Distance between the panel edge and the option text in\n * multi-selection mode.\n *\n * Calculated as:\n * (SELECT_PANEL_PADDING_X * 1.5) + 16 = 40\n * The padding is multiplied by 1.5 because the checkbox's margin is half the padding.\n * The checkbox width is 16px.\n */\nconst SELECT_MULTIPLE_PANEL_PADDING_X = SELECT_PANEL_PADDING_X * 1.5 + 16;\n/**\n * The select panel will only \"fit\" inside the viewport if it is positioned at\n * this value or more away from the viewport boundary.\n */\nconst SELECT_PANEL_VIEWPORT_PADDING = 8;\n/** Injection token that determines the scroll handling while a select is open. */\nconst MAT_SELECT_SCROLL_STRATEGY = new InjectionToken('mat-select-scroll-strategy');\n/** @docs-private */\nfunction MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition();\n}\n/** Injection token that can be used to provide the default options the select module. */\nconst MAT_SELECT_CONFIG = new InjectionToken('MAT_SELECT_CONFIG');\n/** @docs-private */\nconst MAT_SELECT_SCROLL_STRATEGY_PROVIDER = {\n    provide: MAT_SELECT_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY,\n};\n/** Change event object that is emitted when the select value has changed. */\nclass MatSelectChange {\n    constructor(\n    /** Reference to the select that emitted the change event. */\n    source, \n    /** Current value of the select that emitted the event. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n// Boilerplate for applying mixins to MatSelect.\n/** @docs-private */\nconst _MatSelectMixinBase = mixinDisableRipple(mixinTabIndex(mixinDisabled(mixinErrorState(class {\n    constructor(_elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl) {\n        this._elementRef = _elementRef;\n        this._defaultErrorStateMatcher = _defaultErrorStateMatcher;\n        this._parentForm = _parentForm;\n        this._parentFormGroup = _parentFormGroup;\n        this.ngControl = ngControl;\n    }\n}))));\n/**\n * Injection token that can be used to reference instances of `MatSelectTrigger`. It serves as\n * alternative token to the actual `MatSelectTrigger` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_SELECT_TRIGGER = new InjectionToken('MatSelectTrigger');\n/**\n * Allows the user to customize the trigger that is displayed when the select has a value.\n */\nclass MatSelectTrigger {\n}\nMatSelectTrigger.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSelectTrigger, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatSelectTrigger.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatSelectTrigger, selector: \"mat-select-trigger\", providers: [{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSelectTrigger, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-select-trigger',\n                    providers: [{ provide: MAT_SELECT_TRIGGER, useExisting: MatSelectTrigger }],\n                }]\n        }] });\n/** Base class with all of the `MatSelect` functionality. */\nclass _MatSelectBase extends _MatSelectMixinBase {\n    constructor(_viewportRuler, _changeDetectorRef, _ngZone, _defaultErrorStateMatcher, elementRef, _dir, _parentForm, _parentFormGroup, _parentFormField, ngControl, tabIndex, scrollStrategyFactory, _liveAnnouncer, _defaultOptions) {\n        var _a, _b, _c;\n        super(elementRef, _defaultErrorStateMatcher, _parentForm, _parentFormGroup, ngControl);\n        this._viewportRuler = _viewportRuler;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._ngZone = _ngZone;\n        this._dir = _dir;\n        this._parentFormField = _parentFormField;\n        this._liveAnnouncer = _liveAnnouncer;\n        this._defaultOptions = _defaultOptions;\n        /** Whether or not the overlay panel is open. */\n        this._panelOpen = false;\n        /** Comparison function to specify which option is displayed. Defaults to object equality. */\n        this._compareWith = (o1, o2) => o1 === o2;\n        /** Unique id for this input. */\n        this._uid = `mat-select-${nextUniqueId++}`;\n        /** Current `ariar-labelledby` value for the select trigger. */\n        this._triggerAriaLabelledBy = null;\n        /** Emits whenever the component is destroyed. */\n        this._destroy = new Subject();\n        /** `View -> model callback called when value changes` */\n        this._onChange = () => { };\n        /** `View -> model callback called when select has been touched` */\n        this._onTouched = () => { };\n        /** ID for the DOM node containing the select's value. */\n        this._valueId = `mat-select-value-${nextUniqueId++}`;\n        /** Emits when the panel element is finished transforming in. */\n        this._panelDoneAnimatingStream = new Subject();\n        this._overlayPanelClass = ((_a = this._defaultOptions) === null || _a === void 0 ? void 0 : _a.overlayPanelClass) || '';\n        this._focused = false;\n        /** A name for this control that can be used by `mat-form-field`. */\n        this.controlType = 'mat-select';\n        this._multiple = false;\n        this._disableOptionCentering = (_c = (_b = this._defaultOptions) === null || _b === void 0 ? void 0 : _b.disableOptionCentering) !== null && _c !== void 0 ? _c : false;\n        /** Aria label of the select. */\n        this.ariaLabel = '';\n        /** Combined stream of all of the child options' change events. */\n        this.optionSelectionChanges = defer(() => {\n            const options = this.options;\n            if (options) {\n                return options.changes.pipe(startWith(options), switchMap(() => merge(...options.map(option => option.onSelectionChange))));\n            }\n            return this._ngZone.onStable.pipe(take(1), switchMap(() => this.optionSelectionChanges));\n        });\n        /** Event emitted when the select panel has been toggled. */\n        this.openedChange = new EventEmitter();\n        /** Event emitted when the select has been opened. */\n        this._openedStream = this.openedChange.pipe(filter(o => o), map(() => { }));\n        /** Event emitted when the select has been closed. */\n        this._closedStream = this.openedChange.pipe(filter(o => !o), map(() => { }));\n        /** Event emitted when the selected value has been changed by the user. */\n        this.selectionChange = new EventEmitter();\n        /**\n         * Event that emits whenever the raw value of the select changes. This is here primarily\n         * to facilitate the two-way binding for the `value` input.\n         * @docs-private\n         */\n        this.valueChange = new EventEmitter();\n        if (this.ngControl) {\n            // Note: we provide the value accessor through here, instead of\n            // the `providers` to avoid running into a circular import.\n            this.ngControl.valueAccessor = this;\n        }\n        // Note that we only want to set this when the defaults pass it in, otherwise it should\n        // stay as `undefined` so that it falls back to the default in the key manager.\n        if ((_defaultOptions === null || _defaultOptions === void 0 ? void 0 : _defaultOptions.typeaheadDebounceInterval) != null) {\n            this._typeaheadDebounceInterval = _defaultOptions.typeaheadDebounceInterval;\n        }\n        this._scrollStrategyFactory = scrollStrategyFactory;\n        this._scrollStrategy = this._scrollStrategyFactory();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        // Force setter to be called in case id was not specified.\n        this.id = this.id;\n    }\n    /** Whether the select is focused. */\n    get focused() {\n        return this._focused || this._panelOpen;\n    }\n    /** Placeholder to be shown if no value has been selected. */\n    get placeholder() {\n        return this._placeholder;\n    }\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    /** Whether the component is required. */\n    get required() {\n        var _a, _b, _c, _d;\n        return (_d = (_a = this._required) !== null && _a !== void 0 ? _a : (_c = (_b = this.ngControl) === null || _b === void 0 ? void 0 : _b.control) === null || _c === void 0 ? void 0 : _c.hasValidator(Validators.required)) !== null && _d !== void 0 ? _d : false;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n        this.stateChanges.next();\n    }\n    /** Whether the user should be allowed to select multiple options. */\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        if (this._selectionModel && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectDynamicMultipleError();\n        }\n        this._multiple = coerceBooleanProperty(value);\n    }\n    /** Whether to center the active option over the trigger. */\n    get disableOptionCentering() {\n        return this._disableOptionCentering;\n    }\n    set disableOptionCentering(value) {\n        this._disableOptionCentering = coerceBooleanProperty(value);\n    }\n    /**\n     * Function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    get compareWith() {\n        return this._compareWith;\n    }\n    set compareWith(fn) {\n        if (typeof fn !== 'function' && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getMatSelectNonFunctionValueError();\n        }\n        this._compareWith = fn;\n        if (this._selectionModel) {\n            // A different comparator means the selection could change.\n            this._initializeSelection();\n        }\n    }\n    /** Value of the select control. */\n    get value() {\n        return this._value;\n    }\n    set value(newValue) {\n        const hasAssigned = this._assignValue(newValue);\n        if (hasAssigned) {\n            this._onChange(newValue);\n        }\n    }\n    /** Time to wait in milliseconds after the last keystroke before moving focus to an item. */\n    get typeaheadDebounceInterval() {\n        return this._typeaheadDebounceInterval;\n    }\n    set typeaheadDebounceInterval(value) {\n        this._typeaheadDebounceInterval = coerceNumberProperty(value);\n    }\n    /** Unique id of the element. */\n    get id() {\n        return this._id;\n    }\n    set id(value) {\n        this._id = value || this._uid;\n        this.stateChanges.next();\n    }\n    ngOnInit() {\n        this._selectionModel = new SelectionModel(this.multiple);\n        this.stateChanges.next();\n        // We need `distinctUntilChanged` here, because some browsers will\n        // fire the animation end event twice for the same animation. See:\n        // https://github.com/angular/angular/issues/24084\n        this._panelDoneAnimatingStream\n            .pipe(distinctUntilChanged(), takeUntil(this._destroy))\n            .subscribe(() => this._panelDoneAnimating(this.panelOpen));\n    }\n    ngAfterContentInit() {\n        this._initKeyManager();\n        this._selectionModel.changed.pipe(takeUntil(this._destroy)).subscribe(event => {\n            event.added.forEach(option => option.select());\n            event.removed.forEach(option => option.deselect());\n        });\n        this.options.changes.pipe(startWith(null), takeUntil(this._destroy)).subscribe(() => {\n            this._resetOptions();\n            this._initializeSelection();\n        });\n    }\n    ngDoCheck() {\n        const newAriaLabelledby = this._getTriggerAriaLabelledby();\n        const ngControl = this.ngControl;\n        // We have to manage setting the `aria-labelledby` ourselves, because part of its value\n        // is computed as a result of a content query which can cause this binding to trigger a\n        // \"changed after checked\" error.\n        if (newAriaLabelledby !== this._triggerAriaLabelledBy) {\n            const element = this._elementRef.nativeElement;\n            this._triggerAriaLabelledBy = newAriaLabelledby;\n            if (newAriaLabelledby) {\n                element.setAttribute('aria-labelledby', newAriaLabelledby);\n            }\n            else {\n                element.removeAttribute('aria-labelledby');\n            }\n        }\n        if (ngControl) {\n            // The disabled state might go out of sync if the form group is swapped out. See #17860.\n            if (this._previousControl !== ngControl.control) {\n                if (this._previousControl !== undefined &&\n                    ngControl.disabled !== null &&\n                    ngControl.disabled !== this.disabled) {\n                    this.disabled = ngControl.disabled;\n                }\n                this._previousControl = ngControl.control;\n            }\n            this.updateErrorState();\n        }\n    }\n    ngOnChanges(changes) {\n        // Updating the disabled state is handled by `mixinDisabled`, but we need to additionally let\n        // the parent form field know to run change detection when the disabled state changes.\n        if (changes['disabled']) {\n            this.stateChanges.next();\n        }\n        if (changes['typeaheadDebounceInterval'] && this._keyManager) {\n            this._keyManager.withTypeAhead(this._typeaheadDebounceInterval);\n        }\n    }\n    ngOnDestroy() {\n        this._destroy.next();\n        this._destroy.complete();\n        this.stateChanges.complete();\n    }\n    /** Toggles the overlay panel open or closed. */\n    toggle() {\n        this.panelOpen ? this.close() : this.open();\n    }\n    /** Opens the overlay panel. */\n    open() {\n        if (this._canOpen()) {\n            this._panelOpen = true;\n            this._keyManager.withHorizontalOrientation(null);\n            this._highlightCorrectOption();\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    /** Closes the overlay panel and focuses the host element. */\n    close() {\n        if (this._panelOpen) {\n            this._panelOpen = false;\n            this._keyManager.withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr');\n            this._changeDetectorRef.markForCheck();\n            this._onTouched();\n        }\n    }\n    /**\n     * Sets the select's value. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param value New value to be written to the model.\n     */\n    writeValue(value) {\n        this._assignValue(value);\n    }\n    /**\n     * Saves a callback function to be invoked when the select's value\n     * changes from user input. Part of the ControlValueAccessor interface\n     * required to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the value changes.\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Saves a callback function to be invoked when the select is blurred\n     * by the user. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param fn Callback to be triggered when the component has been touched.\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Disables the select. Part of the ControlValueAccessor interface required\n     * to integrate with Angular's core forms API.\n     *\n     * @param isDisabled Sets whether the component is disabled.\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    /** Whether or not the overlay panel is open. */\n    get panelOpen() {\n        return this._panelOpen;\n    }\n    /** The currently selected option. */\n    get selected() {\n        var _a, _b;\n        return this.multiple ? ((_a = this._selectionModel) === null || _a === void 0 ? void 0 : _a.selected) || [] : (_b = this._selectionModel) === null || _b === void 0 ? void 0 : _b.selected[0];\n    }\n    /** The value displayed in the trigger. */\n    get triggerValue() {\n        if (this.empty) {\n            return '';\n        }\n        if (this._multiple) {\n            const selectedOptions = this._selectionModel.selected.map(option => option.viewValue);\n            if (this._isRtl()) {\n                selectedOptions.reverse();\n            }\n            // TODO(crisbeto): delimiter should be configurable for proper localization.\n            return selectedOptions.join(', ');\n        }\n        return this._selectionModel.selected[0].viewValue;\n    }\n    /** Whether the element is in RTL mode. */\n    _isRtl() {\n        return this._dir ? this._dir.value === 'rtl' : false;\n    }\n    /** Handles all keydown events on the select. */\n    _handleKeydown(event) {\n        if (!this.disabled) {\n            this.panelOpen ? this._handleOpenKeydown(event) : this._handleClosedKeydown(event);\n        }\n    }\n    /** Handles keyboard events while the select is closed. */\n    _handleClosedKeydown(event) {\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW ||\n            keyCode === UP_ARROW ||\n            keyCode === LEFT_ARROW ||\n            keyCode === RIGHT_ARROW;\n        const isOpenKey = keyCode === ENTER || keyCode === SPACE;\n        const manager = this._keyManager;\n        // Open the select on ALT + arrow key to match the native <select>\n        if ((!manager.isTyping() && isOpenKey && !hasModifierKey(event)) ||\n            ((this.multiple || event.altKey) && isArrowKey)) {\n            event.preventDefault(); // prevents the page from scrolling down when pressing space\n            this.open();\n        }\n        else if (!this.multiple) {\n            const previouslySelectedOption = this.selected;\n            manager.onKeydown(event);\n            const selectedOption = this.selected;\n            // Since the value has changed, we need to announce it ourselves.\n            if (selectedOption && previouslySelectedOption !== selectedOption) {\n                // We set a duration on the live announcement, because we want the live element to be\n                // cleared after a while so that users can't navigate to it using the arrow keys.\n                this._liveAnnouncer.announce(selectedOption.viewValue, 10000);\n            }\n        }\n    }\n    /** Handles keyboard events when the selected is open. */\n    _handleOpenKeydown(event) {\n        const manager = this._keyManager;\n        const keyCode = event.keyCode;\n        const isArrowKey = keyCode === DOWN_ARROW || keyCode === UP_ARROW;\n        const isTyping = manager.isTyping();\n        if (isArrowKey && event.altKey) {\n            // Close the select on ALT + arrow key to match the native <select>\n            event.preventDefault();\n            this.close();\n            // Don't do anything in this case if the user is typing,\n            // because the typing sequence can include the space key.\n        }\n        else if (!isTyping &&\n            (keyCode === ENTER || keyCode === SPACE) &&\n            manager.activeItem &&\n            !hasModifierKey(event)) {\n            event.preventDefault();\n            manager.activeItem._selectViaInteraction();\n        }\n        else if (!isTyping && this._multiple && keyCode === A && event.ctrlKey) {\n            event.preventDefault();\n            const hasDeselectedOptions = this.options.some(opt => !opt.disabled && !opt.selected);\n            this.options.forEach(option => {\n                if (!option.disabled) {\n                    hasDeselectedOptions ? option.select() : option.deselect();\n                }\n            });\n        }\n        else {\n            const previouslyFocusedIndex = manager.activeItemIndex;\n            manager.onKeydown(event);\n            if (this._multiple &&\n                isArrowKey &&\n                event.shiftKey &&\n                manager.activeItem &&\n                manager.activeItemIndex !== previouslyFocusedIndex) {\n                manager.activeItem._selectViaInteraction();\n            }\n        }\n    }\n    _onFocus() {\n        if (!this.disabled) {\n            this._focused = true;\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Calls the touched callback only if the panel is closed. Otherwise, the trigger will\n     * \"blur\" to the panel when it opens, causing a false positive.\n     */\n    _onBlur() {\n        this._focused = false;\n        if (!this.disabled && !this.panelOpen) {\n            this._onTouched();\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        }\n    }\n    /**\n     * Callback that is invoked when the overlay panel has been attached.\n     */\n    _onAttached() {\n        this._overlayDir.positionChange.pipe(take(1)).subscribe(() => {\n            this._changeDetectorRef.detectChanges();\n            this._positioningSettled();\n        });\n    }\n    /** Returns the theme to be used on the panel. */\n    _getPanelTheme() {\n        return this._parentFormField ? `mat-${this._parentFormField.color}` : '';\n    }\n    /** Whether the select has a value. */\n    get empty() {\n        return !this._selectionModel || this._selectionModel.isEmpty();\n    }\n    _initializeSelection() {\n        // Defer setting the value in order to avoid the \"Expression\n        // has changed after it was checked\" errors from Angular.\n        Promise.resolve().then(() => {\n            if (this.ngControl) {\n                this._value = this.ngControl.value;\n            }\n            this._setSelectionByValue(this._value);\n            this.stateChanges.next();\n        });\n    }\n    /**\n     * Sets the selected option based on a value. If no option can be\n     * found with the designated value, the select trigger is cleared.\n     */\n    _setSelectionByValue(value) {\n        this._selectionModel.selected.forEach(option => option.setInactiveStyles());\n        this._selectionModel.clear();\n        if (this.multiple && value) {\n            if (!Array.isArray(value) && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n                throw getMatSelectNonArrayValueError();\n            }\n            value.forEach((currentValue) => this._selectOptionByValue(currentValue));\n            this._sortValues();\n        }\n        else {\n            const correspondingOption = this._selectOptionByValue(value);\n            // Shift focus to the active item. Note that we shouldn't do this in multiple\n            // mode, because we don't know what option the user interacted with last.\n            if (correspondingOption) {\n                this._keyManager.updateActiveItem(correspondingOption);\n            }\n            else if (!this.panelOpen) {\n                // Otherwise reset the highlighted option. Note that we only want to do this while\n                // closed, because doing it while open can shift the user's focus unnecessarily.\n                this._keyManager.updateActiveItem(-1);\n            }\n        }\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Finds and selects and option based on its value.\n     * @returns Option that has the corresponding value.\n     */\n    _selectOptionByValue(value) {\n        const correspondingOption = this.options.find((option) => {\n            // Skip options that are already in the model. This allows us to handle cases\n            // where the same primitive value is selected multiple times.\n            if (this._selectionModel.isSelected(option)) {\n                return false;\n            }\n            try {\n                // Treat null as a special reset value.\n                return option.value != null && this._compareWith(option.value, value);\n            }\n            catch (error) {\n                if (typeof ngDevMode === 'undefined' || ngDevMode) {\n                    // Notify developers of errors in their comparator.\n                    console.warn(error);\n                }\n                return false;\n            }\n        });\n        if (correspondingOption) {\n            this._selectionModel.select(correspondingOption);\n        }\n        return correspondingOption;\n    }\n    /** Assigns a specific value to the select. Returns whether the value has changed. */\n    _assignValue(newValue) {\n        // Always re-assign an array, because it might have been mutated.\n        if (newValue !== this._value || (this._multiple && Array.isArray(newValue))) {\n            if (this.options) {\n                this._setSelectionByValue(newValue);\n            }\n            this._value = newValue;\n            return true;\n        }\n        return false;\n    }\n    /** Sets up a key manager to listen to keyboard events on the overlay panel. */\n    _initKeyManager() {\n        this._keyManager = new ActiveDescendantKeyManager(this.options)\n            .withTypeAhead(this._typeaheadDebounceInterval)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._isRtl() ? 'rtl' : 'ltr')\n            .withHomeAndEnd()\n            .withAllowedModifierKeys(['shiftKey']);\n        this._keyManager.tabOut.pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this.panelOpen) {\n                // Select the active item when tabbing away. This is consistent with how the native\n                // select behaves. Note that we only want to do this in single selection mode.\n                if (!this.multiple && this._keyManager.activeItem) {\n                    this._keyManager.activeItem._selectViaInteraction();\n                }\n                // Restore focus to the trigger before closing. Ensures that the focus\n                // position won't be lost if the user got focus into the overlay.\n                this.focus();\n                this.close();\n            }\n        });\n        this._keyManager.change.pipe(takeUntil(this._destroy)).subscribe(() => {\n            if (this._panelOpen && this.panel) {\n                this._scrollOptionIntoView(this._keyManager.activeItemIndex || 0);\n            }\n            else if (!this._panelOpen && !this.multiple && this._keyManager.activeItem) {\n                this._keyManager.activeItem._selectViaInteraction();\n            }\n        });\n    }\n    /** Drops current option subscriptions and IDs and resets from scratch. */\n    _resetOptions() {\n        const changedOrDestroyed = merge(this.options.changes, this._destroy);\n        this.optionSelectionChanges.pipe(takeUntil(changedOrDestroyed)).subscribe(event => {\n            this._onSelect(event.source, event.isUserInput);\n            if (event.isUserInput && !this.multiple && this._panelOpen) {\n                this.close();\n                this.focus();\n            }\n        });\n        // Listen to changes in the internal state of the options and react accordingly.\n        // Handles cases like the labels of the selected options changing.\n        merge(...this.options.map(option => option._stateChanges))\n            .pipe(takeUntil(changedOrDestroyed))\n            .subscribe(() => {\n            this._changeDetectorRef.markForCheck();\n            this.stateChanges.next();\n        });\n    }\n    /** Invoked when an option is clicked. */\n    _onSelect(option, isUserInput) {\n        const wasSelected = this._selectionModel.isSelected(option);\n        if (option.value == null && !this._multiple) {\n            option.deselect();\n            this._selectionModel.clear();\n            if (this.value != null) {\n                this._propagateChanges(option.value);\n            }\n        }\n        else {\n            if (wasSelected !== option.selected) {\n                option.selected\n                    ? this._selectionModel.select(option)\n                    : this._selectionModel.deselect(option);\n            }\n            if (isUserInput) {\n                this._keyManager.setActiveItem(option);\n            }\n            if (this.multiple) {\n                this._sortValues();\n                if (isUserInput) {\n                    // In case the user selected the option with their mouse, we\n                    // want to restore focus back to the trigger, in order to\n                    // prevent the select keyboard controls from clashing with\n                    // the ones from `mat-option`.\n                    this.focus();\n                }\n            }\n        }\n        if (wasSelected !== this._selectionModel.isSelected(option)) {\n            this._propagateChanges();\n        }\n        this.stateChanges.next();\n    }\n    /** Sorts the selected values in the selected based on their order in the panel. */\n    _sortValues() {\n        if (this.multiple) {\n            const options = this.options.toArray();\n            this._selectionModel.sort((a, b) => {\n                return this.sortComparator\n                    ? this.sortComparator(a, b, options)\n                    : options.indexOf(a) - options.indexOf(b);\n            });\n            this.stateChanges.next();\n        }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges(fallbackValue) {\n        let valueToEmit = null;\n        if (this.multiple) {\n            valueToEmit = this.selected.map(option => option.value);\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : fallbackValue;\n        }\n        this._value = valueToEmit;\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this.selectionChange.emit(this._getChangeEvent(valueToEmit));\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Highlights the selected item. If no option is selected, it will highlight\n     * the first item instead.\n     */\n    _highlightCorrectOption() {\n        if (this._keyManager) {\n            if (this.empty) {\n                this._keyManager.setFirstItemActive();\n            }\n            else {\n                this._keyManager.setActiveItem(this._selectionModel.selected[0]);\n            }\n        }\n    }\n    /** Whether the panel is allowed to open. */\n    _canOpen() {\n        var _a;\n        return !this._panelOpen && !this.disabled && ((_a = this.options) === null || _a === void 0 ? void 0 : _a.length) > 0;\n    }\n    /** Focuses the select element. */\n    focus(options) {\n        this._elementRef.nativeElement.focus(options);\n    }\n    /** Gets the aria-labelledby for the select panel. */\n    _getPanelAriaLabelledby() {\n        var _a;\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = (_a = this._parentFormField) === null || _a === void 0 ? void 0 : _a.getLabelId();\n        const labelExpression = labelId ? labelId + ' ' : '';\n        return this.ariaLabelledby ? labelExpression + this.ariaLabelledby : labelId;\n    }\n    /** Determines the `aria-activedescendant` to be set on the host. */\n    _getAriaActiveDescendant() {\n        if (this.panelOpen && this._keyManager && this._keyManager.activeItem) {\n            return this._keyManager.activeItem.id;\n        }\n        return null;\n    }\n    /** Gets the aria-labelledby of the select component trigger. */\n    _getTriggerAriaLabelledby() {\n        var _a;\n        if (this.ariaLabel) {\n            return null;\n        }\n        const labelId = (_a = this._parentFormField) === null || _a === void 0 ? void 0 : _a.getLabelId();\n        let value = (labelId ? labelId + ' ' : '') + this._valueId;\n        if (this.ariaLabelledby) {\n            value += ' ' + this.ariaLabelledby;\n        }\n        return value;\n    }\n    /** Called when the overlay panel is done animating. */\n    _panelDoneAnimating(isOpen) {\n        this.openedChange.emit(isOpen);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        this._ariaDescribedby = ids.join(' ');\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick() {\n        this.focus();\n        this.open();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        return this._panelOpen || !this.empty || (this._focused && !!this._placeholder);\n    }\n}\n_MatSelectBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatSelectBase, deps: [{ token: i1.ViewportRuler }, { token: i0.ChangeDetectorRef }, { token: i0.NgZone }, { token: i2.ErrorStateMatcher }, { token: i0.ElementRef }, { token: i3.Directionality, optional: true }, { token: i4.NgForm, optional: true }, { token: i4.FormGroupDirective, optional: true }, { token: MAT_FORM_FIELD, optional: true }, { token: i4.NgControl, optional: true, self: true }, { token: 'tabindex', attribute: true }, { token: MAT_SELECT_SCROLL_STRATEGY }, { token: i5.LiveAnnouncer }, { token: MAT_SELECT_CONFIG, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_MatSelectBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatSelectBase, inputs: { panelClass: \"panelClass\", placeholder: \"placeholder\", required: \"required\", multiple: \"multiple\", disableOptionCentering: \"disableOptionCentering\", compareWith: \"compareWith\", value: \"value\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], errorStateMatcher: \"errorStateMatcher\", typeaheadDebounceInterval: \"typeaheadDebounceInterval\", sortComparator: \"sortComparator\", id: \"id\" }, outputs: { openedChange: \"openedChange\", _openedStream: \"opened\", _closedStream: \"closed\", selectionChange: \"selectionChange\", valueChange: \"valueChange\" }, viewQueries: [{ propertyName: \"trigger\", first: true, predicate: [\"trigger\"], descendants: true }, { propertyName: \"panel\", first: true, predicate: [\"panel\"], descendants: true }, { propertyName: \"_overlayDir\", first: true, predicate: CdkConnectedOverlay, descendants: true }], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatSelectBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i1.ViewportRuler }, { type: i0.ChangeDetectorRef }, { type: i0.NgZone }, { type: i2.ErrorStateMatcher }, { type: i0.ElementRef }, { type: i3.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: i4.NgForm, decorators: [{\n                        type: Optional\n                    }] }, { type: i4.FormGroupDirective, decorators: [{\n                        type: Optional\n                    }] }, { type: i6.MatFormField, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_FORM_FIELD]\n                    }] }, { type: i4.NgControl, decorators: [{\n                        type: Self\n                    }, {\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['tabindex']\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_SELECT_SCROLL_STRATEGY]\n                    }] }, { type: i5.LiveAnnouncer }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_SELECT_CONFIG]\n                    }] }];\n    }, propDecorators: { trigger: [{\n                type: ViewChild,\n                args: ['trigger']\n            }], panel: [{\n                type: ViewChild,\n                args: ['panel']\n            }], _overlayDir: [{\n                type: ViewChild,\n                args: [CdkConnectedOverlay]\n            }], panelClass: [{\n                type: Input\n            }], placeholder: [{\n                type: Input\n            }], required: [{\n                type: Input\n            }], multiple: [{\n                type: Input\n            }], disableOptionCentering: [{\n                type: Input\n            }], compareWith: [{\n                type: Input\n            }], value: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], errorStateMatcher: [{\n                type: Input\n            }], typeaheadDebounceInterval: [{\n                type: Input\n            }], sortComparator: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], openedChange: [{\n                type: Output\n            }], _openedStream: [{\n                type: Output,\n                args: ['opened']\n            }], _closedStream: [{\n                type: Output,\n                args: ['closed']\n            }], selectionChange: [{\n                type: Output\n            }], valueChange: [{\n                type: Output\n            }] } });\nclass MatSelect extends _MatSelectBase {\n    constructor() {\n        super(...arguments);\n        /** The scroll position of the overlay panel, calculated to center the selected option. */\n        this._scrollTop = 0;\n        /** The cached font-size of the trigger element. */\n        this._triggerFontSize = 0;\n        /** The value of the select panel's transform-origin property. */\n        this._transformOrigin = 'top';\n        /**\n         * The y-offset of the overlay panel in relation to the trigger's top start corner.\n         * This must be adjusted to align the selected option text over the trigger text.\n         * when the panel opens. Will change based on the y-position of the selected option.\n         */\n        this._offsetY = 0;\n        this._positions = [\n            {\n                originX: 'start',\n                originY: 'top',\n                overlayX: 'start',\n                overlayY: 'top',\n            },\n            {\n                originX: 'start',\n                originY: 'bottom',\n                overlayX: 'start',\n                overlayY: 'bottom',\n            },\n        ];\n    }\n    /**\n     * Calculates the scroll position of the select's overlay panel.\n     *\n     * Attempts to center the selected option in the panel. If the option is\n     * too high or too low in the panel to be scrolled to the center, it clamps the\n     * scroll position to the min or max scroll positions respectively.\n     */\n    _calculateOverlayScroll(selectedIndex, scrollBuffer, maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const optionOffsetFromScrollTop = itemHeight * selectedIndex;\n        const halfOptionHeight = itemHeight / 2;\n        // Starts at the optionOffsetFromScrollTop, which scrolls the option to the top of the\n        // scroll container, then subtracts the scroll buffer to scroll the option down to\n        // the center of the overlay panel. Half the option height must be re-added to the\n        // scrollTop so the option is centered based on its middle, not its top edge.\n        const optimalScrollPosition = optionOffsetFromScrollTop - scrollBuffer + halfOptionHeight;\n        return Math.min(Math.max(0, optimalScrollPosition), maxScroll);\n    }\n    ngOnInit() {\n        super.ngOnInit();\n        this._viewportRuler\n            .change()\n            .pipe(takeUntil(this._destroy))\n            .subscribe(() => {\n            if (this.panelOpen) {\n                this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n    }\n    open() {\n        if (super._canOpen()) {\n            super.open();\n            this._triggerRect = this.trigger.nativeElement.getBoundingClientRect();\n            // Note: The computed font-size will be a string pixel value (e.g. \"16px\").\n            // `parseInt` ignores the trailing 'px' and converts this to a number.\n            this._triggerFontSize = parseInt(getComputedStyle(this.trigger.nativeElement).fontSize || '0');\n            this._calculateOverlayPosition();\n            // Set the font size on the panel element once it exists.\n            this._ngZone.onStable.pipe(take(1)).subscribe(() => {\n                if (this._triggerFontSize &&\n                    this._overlayDir.overlayRef &&\n                    this._overlayDir.overlayRef.overlayElement) {\n                    this._overlayDir.overlayRef.overlayElement.style.fontSize = `${this._triggerFontSize}px`;\n                }\n            });\n        }\n    }\n    /** Scrolls the active option into view. */\n    _scrollOptionIntoView(index) {\n        const labelCount = _countGroupLabelsBeforeOption(index, this.options, this.optionGroups);\n        const itemHeight = this._getItemHeight();\n        if (index === 0 && labelCount === 1) {\n            // If we've got one group label before the option and we're at the top option,\n            // scroll the list to the top. This is better UX than scrolling the list to the\n            // top of the option, because it allows the user to read the top group's label.\n            this.panel.nativeElement.scrollTop = 0;\n        }\n        else {\n            this.panel.nativeElement.scrollTop = _getOptionScrollPosition((index + labelCount) * itemHeight, itemHeight, this.panel.nativeElement.scrollTop, SELECT_PANEL_MAX_HEIGHT);\n        }\n    }\n    _positioningSettled() {\n        this._calculateOverlayOffsetX();\n        this.panel.nativeElement.scrollTop = this._scrollTop;\n    }\n    _panelDoneAnimating(isOpen) {\n        if (this.panelOpen) {\n            this._scrollTop = 0;\n        }\n        else {\n            this._overlayDir.offsetX = 0;\n            this._changeDetectorRef.markForCheck();\n        }\n        super._panelDoneAnimating(isOpen);\n    }\n    _getChangeEvent(value) {\n        return new MatSelectChange(this, value);\n    }\n    /**\n     * Sets the x-offset of the overlay panel in relation to the trigger's top start corner.\n     * This must be adjusted to align the selected option text over the trigger text when\n     * the panel opens. Will change based on LTR or RTL text direction. Note that the offset\n     * can't be calculated until the panel has been attached, because we need to know the\n     * content width in order to constrain the panel within the viewport.\n     */\n    _calculateOverlayOffsetX() {\n        const overlayRect = this._overlayDir.overlayRef.overlayElement.getBoundingClientRect();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const isRtl = this._isRtl();\n        const paddingWidth = this.multiple\n            ? SELECT_MULTIPLE_PANEL_PADDING_X + SELECT_PANEL_PADDING_X\n            : SELECT_PANEL_PADDING_X * 2;\n        let offsetX;\n        // Adjust the offset, depending on the option padding.\n        if (this.multiple) {\n            offsetX = SELECT_MULTIPLE_PANEL_PADDING_X;\n        }\n        else if (this.disableOptionCentering) {\n            offsetX = SELECT_PANEL_PADDING_X;\n        }\n        else {\n            let selected = this._selectionModel.selected[0] || this.options.first;\n            offsetX = selected && selected.group ? SELECT_PANEL_INDENT_PADDING_X : SELECT_PANEL_PADDING_X;\n        }\n        // Invert the offset in LTR.\n        if (!isRtl) {\n            offsetX *= -1;\n        }\n        // Determine how much the select overflows on each side.\n        const leftOverflow = 0 - (overlayRect.left + offsetX - (isRtl ? paddingWidth : 0));\n        const rightOverflow = overlayRect.right + offsetX - viewportSize.width + (isRtl ? 0 : paddingWidth);\n        // If the element overflows on either side, reduce the offset to allow it to fit.\n        if (leftOverflow > 0) {\n            offsetX += leftOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        else if (rightOverflow > 0) {\n            offsetX -= rightOverflow + SELECT_PANEL_VIEWPORT_PADDING;\n        }\n        // Set the offset directly in order to avoid having to go through change detection and\n        // potentially triggering \"changed after it was checked\" errors. Round the value to avoid\n        // blurry content in some browsers.\n        this._overlayDir.offsetX = Math.round(offsetX);\n        this._overlayDir.overlayRef.updatePosition();\n    }\n    /**\n     * Calculates the y-offset of the select's overlay panel in relation to the\n     * top start corner of the trigger. It has to be adjusted in order for the\n     * selected option to be aligned over the trigger when the panel opens.\n     */\n    _calculateOverlayOffsetY(selectedIndex, scrollBuffer, maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        const maxOptionsDisplayed = Math.floor(SELECT_PANEL_MAX_HEIGHT / itemHeight);\n        let optionOffsetFromPanelTop;\n        // Disable offset if requested by user by returning 0 as value to offset\n        if (this.disableOptionCentering) {\n            return 0;\n        }\n        if (this._scrollTop === 0) {\n            optionOffsetFromPanelTop = selectedIndex * itemHeight;\n        }\n        else if (this._scrollTop === maxScroll) {\n            const firstDisplayedIndex = this._getItemCount() - maxOptionsDisplayed;\n            const selectedDisplayIndex = selectedIndex - firstDisplayedIndex;\n            // The first item is partially out of the viewport. Therefore we need to calculate what\n            // portion of it is shown in the viewport and account for it in our offset.\n            let partialItemHeight = itemHeight - ((this._getItemCount() * itemHeight - SELECT_PANEL_MAX_HEIGHT) % itemHeight);\n            // Because the panel height is longer than the height of the options alone,\n            // there is always extra padding at the top or bottom of the panel. When\n            // scrolled to the very bottom, this padding is at the top of the panel and\n            // must be added to the offset.\n            optionOffsetFromPanelTop = selectedDisplayIndex * itemHeight + partialItemHeight;\n        }\n        else {\n            // If the option was scrolled to the middle of the panel using a scroll buffer,\n            // its offset will be the scroll buffer minus the half height that was added to\n            // center it.\n            optionOffsetFromPanelTop = scrollBuffer - itemHeight / 2;\n        }\n        // The final offset is the option's offset from the top, adjusted for the height difference,\n        // multiplied by -1 to ensure that the overlay moves in the correct direction up the page.\n        // The value is rounded to prevent some browsers from blurring the content.\n        return Math.round(optionOffsetFromPanelTop * -1 - optionHeightAdjustment);\n    }\n    /**\n     * Checks that the attempted overlay position will fit within the viewport.\n     * If it will not fit, tries to adjust the scroll position and the associated\n     * y-offset so the panel can open fully on-screen. If it still won't fit,\n     * sets the offset back to 0 to allow the fallback position to take over.\n     */\n    _checkOverlayWithinViewport(maxScroll) {\n        const itemHeight = this._getItemHeight();\n        const viewportSize = this._viewportRuler.getViewportSize();\n        const topSpaceAvailable = this._triggerRect.top - SELECT_PANEL_VIEWPORT_PADDING;\n        const bottomSpaceAvailable = viewportSize.height - this._triggerRect.bottom - SELECT_PANEL_VIEWPORT_PADDING;\n        const panelHeightTop = Math.abs(this._offsetY);\n        const totalPanelHeight = Math.min(this._getItemCount() * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const panelHeightBottom = totalPanelHeight - panelHeightTop - this._triggerRect.height;\n        if (panelHeightBottom > bottomSpaceAvailable) {\n            this._adjustPanelUp(panelHeightBottom, bottomSpaceAvailable);\n        }\n        else if (panelHeightTop > topSpaceAvailable) {\n            this._adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll);\n        }\n        else {\n            this._transformOrigin = this._getOriginBasedOnOption();\n        }\n    }\n    /** Adjusts the overlay panel up to fit in the viewport. */\n    _adjustPanelUp(panelHeightBottom, bottomSpaceAvailable) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceBelowViewport = Math.round(panelHeightBottom - bottomSpaceAvailable);\n        // Scrolls the panel up by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel up into the viewport.\n        this._scrollTop -= distanceBelowViewport;\n        this._offsetY -= distanceBelowViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very top, it won't be able to fit the panel\n        // by scrolling, so set the offset to 0 to allow the fallback position to take\n        // effect.\n        if (this._scrollTop <= 0) {\n            this._scrollTop = 0;\n            this._offsetY = 0;\n            this._transformOrigin = `50% bottom 0px`;\n        }\n    }\n    /** Adjusts the overlay panel down to fit in the viewport. */\n    _adjustPanelDown(panelHeightTop, topSpaceAvailable, maxScroll) {\n        // Browsers ignore fractional scroll offsets, so we need to round.\n        const distanceAboveViewport = Math.round(panelHeightTop - topSpaceAvailable);\n        // Scrolls the panel down by the distance it was extending past the boundary, then\n        // adjusts the offset by that amount to move the panel down into the viewport.\n        this._scrollTop += distanceAboveViewport;\n        this._offsetY += distanceAboveViewport;\n        this._transformOrigin = this._getOriginBasedOnOption();\n        // If the panel is scrolled to the very bottom, it won't be able to fit the\n        // panel by scrolling, so set the offset to 0 to allow the fallback position\n        // to take effect.\n        if (this._scrollTop >= maxScroll) {\n            this._scrollTop = maxScroll;\n            this._offsetY = 0;\n            this._transformOrigin = `50% top 0px`;\n            return;\n        }\n    }\n    /** Calculates the scroll position and x- and y-offsets of the overlay panel. */\n    _calculateOverlayPosition() {\n        const itemHeight = this._getItemHeight();\n        const items = this._getItemCount();\n        const panelHeight = Math.min(items * itemHeight, SELECT_PANEL_MAX_HEIGHT);\n        const scrollContainerHeight = items * itemHeight;\n        // The farthest the panel can be scrolled before it hits the bottom\n        const maxScroll = scrollContainerHeight - panelHeight;\n        // If no value is selected we open the popup to the first item.\n        let selectedOptionOffset;\n        if (this.empty) {\n            selectedOptionOffset = 0;\n        }\n        else {\n            selectedOptionOffset = Math.max(this.options.toArray().indexOf(this._selectionModel.selected[0]), 0);\n        }\n        selectedOptionOffset += _countGroupLabelsBeforeOption(selectedOptionOffset, this.options, this.optionGroups);\n        // We must maintain a scroll buffer so the selected option will be scrolled to the\n        // center of the overlay panel rather than the top.\n        const scrollBuffer = panelHeight / 2;\n        this._scrollTop = this._calculateOverlayScroll(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._offsetY = this._calculateOverlayOffsetY(selectedOptionOffset, scrollBuffer, maxScroll);\n        this._checkOverlayWithinViewport(maxScroll);\n    }\n    /** Sets the transform origin point based on the selected option. */\n    _getOriginBasedOnOption() {\n        const itemHeight = this._getItemHeight();\n        const optionHeightAdjustment = (itemHeight - this._triggerRect.height) / 2;\n        const originY = Math.abs(this._offsetY) - optionHeightAdjustment + itemHeight / 2;\n        return `50% ${originY}px 0px`;\n    }\n    /** Calculates the height of the select's options. */\n    _getItemHeight() {\n        return this._triggerFontSize * SELECT_ITEM_HEIGHT_EM;\n    }\n    /** Calculates the amount of items in the select. This includes options and group labels. */\n    _getItemCount() {\n        return this.options.length + this.optionGroups.length;\n    }\n}\nMatSelect.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSelect, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatSelect.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatSelect, selector: \"mat-select\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", tabIndex: \"tabIndex\" }, host: { attributes: { \"role\": \"combobox\", \"aria-autocomplete\": \"none\", \"aria-haspopup\": \"true\" }, listeners: { \"keydown\": \"_handleKeydown($event)\", \"focus\": \"_onFocus()\", \"blur\": \"_onBlur()\" }, properties: { \"attr.id\": \"id\", \"attr.tabindex\": \"tabIndex\", \"attr.aria-controls\": \"panelOpen ? id + \\\"-panel\\\" : null\", \"attr.aria-expanded\": \"panelOpen\", \"attr.aria-label\": \"ariaLabel || null\", \"attr.aria-required\": \"required.toString()\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.aria-invalid\": \"errorState\", \"attr.aria-describedby\": \"_ariaDescribedby || null\", \"attr.aria-activedescendant\": \"_getAriaActiveDescendant()\", \"class.mat-select-disabled\": \"disabled\", \"class.mat-select-invalid\": \"errorState\", \"class.mat-select-required\": \"required\", \"class.mat-select-empty\": \"empty\", \"class.mat-select-multiple\": \"multiple\" }, classAttribute: \"mat-select\" }, providers: [\n        { provide: MatFormFieldControl, useExisting: MatSelect },\n        { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect },\n    ], queries: [{ propertyName: \"customTrigger\", first: true, predicate: MAT_SELECT_TRIGGER, descendants: true }, { propertyName: \"options\", predicate: MatOption, descendants: true }, { propertyName: \"optionGroups\", predicate: MAT_OPTGROUP, descendants: true }], exportAs: [\"matSelect\"], usesInheritance: true, ngImport: i0, template: \"<!--\\n Note that the select trigger element specifies `aria-owns` pointing to the listbox overlay.\\n While aria-owns is not required for the ARIA 1.2 `role=\\\"combobox\\\"` interaction pattern,\\n it fixes an issue with VoiceOver when the select appears inside of an `aria-model=\\\"true\\\"`\\n element (e.g. a dialog). Without this `aria-owns`, the `aria-modal` on a dialog prevents\\n VoiceOver from \\\"seeing\\\" the select's listbox overlay for aria-activedescendant.\\n Using `aria-owns` re-parents the select overlay so that it works again.\\n See https://github.com/angular/components/issues/20694\\n-->\\n<div cdk-overlay-origin\\n     [attr.aria-owns]=\\\"panelOpen ? id + '-panel' : null\\\"\\n     class=\\\"mat-select-trigger\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\" [attr.id]=\\\"_valueId\\\">\\n    <span class=\\\"mat-select-placeholder mat-select-min-line\\\" *ngSwitchCase=\\\"true\\\">{{placeholder}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span class=\\\"mat-select-min-line\\\" *ngSwitchDefault>{{triggerValue}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayPanelClass]=\\\"_overlayPanelClass\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width!\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      role=\\\"listbox\\\"\\n      tabindex=\\\"-1\\\"\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [attr.id]=\\\"id + '-panel'\\\"\\n      [attr.aria-multiselectable]=\\\"multiple\\\"\\n      [attr.aria-label]=\\\"ariaLabel || null\\\"\\n      [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{height:16px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-form-field.mat-focused .mat-select-arrow{transform:translateX(0)}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}.mat-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px;display:inline-block;visibility:hidden}\\n\"], directives: [{ type: i7.CdkOverlayOrigin, selector: \"[cdk-overlay-origin], [overlay-origin], [cdkOverlayOrigin]\", exportAs: [\"cdkOverlayOrigin\"] }, { type: i8.NgSwitch, selector: \"[ngSwitch]\", inputs: [\"ngSwitch\"] }, { type: i8.NgSwitchCase, selector: \"[ngSwitchCase]\", inputs: [\"ngSwitchCase\"] }, { type: i8.NgSwitchDefault, selector: \"[ngSwitchDefault]\" }, { type: i7.CdkConnectedOverlay, selector: \"[cdk-connected-overlay], [connected-overlay], [cdkConnectedOverlay]\", inputs: [\"cdkConnectedOverlayOrigin\", \"cdkConnectedOverlayPositions\", \"cdkConnectedOverlayPositionStrategy\", \"cdkConnectedOverlayOffsetX\", \"cdkConnectedOverlayOffsetY\", \"cdkConnectedOverlayWidth\", \"cdkConnectedOverlayHeight\", \"cdkConnectedOverlayMinWidth\", \"cdkConnectedOverlayMinHeight\", \"cdkConnectedOverlayBackdropClass\", \"cdkConnectedOverlayPanelClass\", \"cdkConnectedOverlayViewportMargin\", \"cdkConnectedOverlayScrollStrategy\", \"cdkConnectedOverlayOpen\", \"cdkConnectedOverlayDisableClose\", \"cdkConnectedOverlayTransformOriginOn\", \"cdkConnectedOverlayHasBackdrop\", \"cdkConnectedOverlayLockPosition\", \"cdkConnectedOverlayFlexibleDimensions\", \"cdkConnectedOverlayGrowAfterOpen\", \"cdkConnectedOverlayPush\"], outputs: [\"backdropClick\", \"positionChange\", \"attach\", \"detach\", \"overlayKeydown\", \"overlayOutsideClick\"], exportAs: [\"cdkConnectedOverlay\"] }, { type: i8.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], animations: [matSelectAnimations.transformPanelWrap, matSelectAnimations.transformPanel], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSelect, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-select', exportAs: 'matSelect', inputs: ['disabled', 'disableRipple', 'tabIndex'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        'role': 'combobox',\n                        'aria-autocomplete': 'none',\n                        // TODO(crisbeto): the value for aria-haspopup should be `listbox`, but currently it's difficult\n                        // to sync into Google, because of an outdated automated a11y check which flags it as an invalid\n                        // value. At some point we should try to switch it back to being `listbox`.\n                        'aria-haspopup': 'true',\n                        'class': 'mat-select',\n                        '[attr.id]': 'id',\n                        '[attr.tabindex]': 'tabIndex',\n                        '[attr.aria-controls]': 'panelOpen ? id + \"-panel\" : null',\n                        '[attr.aria-expanded]': 'panelOpen',\n                        '[attr.aria-label]': 'ariaLabel || null',\n                        '[attr.aria-required]': 'required.toString()',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.aria-invalid]': 'errorState',\n                        '[attr.aria-describedby]': '_ariaDescribedby || null',\n                        '[attr.aria-activedescendant]': '_getAriaActiveDescendant()',\n                        '[class.mat-select-disabled]': 'disabled',\n                        '[class.mat-select-invalid]': 'errorState',\n                        '[class.mat-select-required]': 'required',\n                        '[class.mat-select-empty]': 'empty',\n                        '[class.mat-select-multiple]': 'multiple',\n                        '(keydown)': '_handleKeydown($event)',\n                        '(focus)': '_onFocus()',\n                        '(blur)': '_onBlur()',\n                    }, animations: [matSelectAnimations.transformPanelWrap, matSelectAnimations.transformPanel], providers: [\n                        { provide: MatFormFieldControl, useExisting: MatSelect },\n                        { provide: MAT_OPTION_PARENT_COMPONENT, useExisting: MatSelect },\n                    ], template: \"<!--\\n Note that the select trigger element specifies `aria-owns` pointing to the listbox overlay.\\n While aria-owns is not required for the ARIA 1.2 `role=\\\"combobox\\\"` interaction pattern,\\n it fixes an issue with VoiceOver when the select appears inside of an `aria-model=\\\"true\\\"`\\n element (e.g. a dialog). Without this `aria-owns`, the `aria-modal` on a dialog prevents\\n VoiceOver from \\\"seeing\\\" the select's listbox overlay for aria-activedescendant.\\n Using `aria-owns` re-parents the select overlay so that it works again.\\n See https://github.com/angular/components/issues/20694\\n-->\\n<div cdk-overlay-origin\\n     [attr.aria-owns]=\\\"panelOpen ? id + '-panel' : null\\\"\\n     class=\\\"mat-select-trigger\\\"\\n     (click)=\\\"toggle()\\\"\\n     #origin=\\\"cdkOverlayOrigin\\\"\\n     #trigger>\\n  <div class=\\\"mat-select-value\\\" [ngSwitch]=\\\"empty\\\" [attr.id]=\\\"_valueId\\\">\\n    <span class=\\\"mat-select-placeholder mat-select-min-line\\\" *ngSwitchCase=\\\"true\\\">{{placeholder}}</span>\\n    <span class=\\\"mat-select-value-text\\\" *ngSwitchCase=\\\"false\\\" [ngSwitch]=\\\"!!customTrigger\\\">\\n      <span class=\\\"mat-select-min-line\\\" *ngSwitchDefault>{{triggerValue}}</span>\\n      <ng-content select=\\\"mat-select-trigger\\\" *ngSwitchCase=\\\"true\\\"></ng-content>\\n    </span>\\n  </div>\\n\\n  <div class=\\\"mat-select-arrow-wrapper\\\"><div class=\\\"mat-select-arrow\\\"></div></div>\\n</div>\\n\\n<ng-template\\n  cdk-connected-overlay\\n  cdkConnectedOverlayLockPosition\\n  cdkConnectedOverlayHasBackdrop\\n  cdkConnectedOverlayBackdropClass=\\\"cdk-overlay-transparent-backdrop\\\"\\n  [cdkConnectedOverlayPanelClass]=\\\"_overlayPanelClass\\\"\\n  [cdkConnectedOverlayScrollStrategy]=\\\"_scrollStrategy\\\"\\n  [cdkConnectedOverlayOrigin]=\\\"origin\\\"\\n  [cdkConnectedOverlayOpen]=\\\"panelOpen\\\"\\n  [cdkConnectedOverlayPositions]=\\\"_positions\\\"\\n  [cdkConnectedOverlayMinWidth]=\\\"_triggerRect?.width!\\\"\\n  [cdkConnectedOverlayOffsetY]=\\\"_offsetY\\\"\\n  (backdropClick)=\\\"close()\\\"\\n  (attach)=\\\"_onAttached()\\\"\\n  (detach)=\\\"close()\\\">\\n  <div class=\\\"mat-select-panel-wrap\\\" [@transformPanelWrap]>\\n    <div\\n      #panel\\n      role=\\\"listbox\\\"\\n      tabindex=\\\"-1\\\"\\n      class=\\\"mat-select-panel {{ _getPanelTheme() }}\\\"\\n      [attr.id]=\\\"id + '-panel'\\\"\\n      [attr.aria-multiselectable]=\\\"multiple\\\"\\n      [attr.aria-label]=\\\"ariaLabel || null\\\"\\n      [attr.aria-labelledby]=\\\"_getPanelAriaLabelledby()\\\"\\n      [ngClass]=\\\"panelClass\\\"\\n      [@transformPanel]=\\\"multiple ? 'showing-multiple' : 'showing'\\\"\\n      (@transformPanel.done)=\\\"_panelDoneAnimatingStream.next($event.toState)\\\"\\n      [style.transformOrigin]=\\\"_transformOrigin\\\"\\n      [style.font-size.px]=\\\"_triggerFontSize\\\"\\n      (keydown)=\\\"_handleKeydown($event)\\\">\\n      <ng-content></ng-content>\\n    </div>\\n  </div>\\n</ng-template>\\n\", styles: [\".mat-select{display:inline-block;width:100%;outline:none}.mat-select-trigger{display:inline-flex;align-items:center;cursor:pointer;position:relative;box-sizing:border-box;width:100%}.mat-select-disabled .mat-select-trigger{-webkit-user-select:none;user-select:none;cursor:default}.mat-select-value{width:100%;overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.mat-select-value-text{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-select-arrow-wrapper{height:16px;flex-shrink:0;display:inline-flex;align-items:center}.mat-form-field-appearance-fill .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-outline .mat-select-arrow-wrapper{transform:translateY(-25%)}.mat-form-field-appearance-standard.mat-form-field-has-label .mat-select:not(.mat-select-empty) .mat-select-arrow-wrapper{transform:translateY(-50%)}.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:transform 400ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable.mat-form-field-appearance-standard .mat-select.mat-select-empty .mat-select-arrow-wrapper{transition:none}.mat-select-arrow{width:0;height:0;border-left:5px solid transparent;border-right:5px solid transparent;border-top:5px solid;margin:0 4px}.mat-form-field.mat-focused .mat-select-arrow{transform:translateX(0)}.mat-select-panel-wrap{flex-basis:100%}.mat-select-panel{min-width:112px;max-width:280px;overflow:auto;-webkit-overflow-scrolling:touch;padding-top:0;padding-bottom:0;max-height:256px;min-width:100%;border-radius:4px;outline:0}.cdk-high-contrast-active .mat-select-panel{outline:solid 1px}.mat-select-panel .mat-optgroup-label,.mat-select-panel .mat-option{font-size:inherit;line-height:3em;height:3em}.mat-form-field-type-mat-select:not(.mat-form-field-disabled) .mat-form-field-flex{cursor:pointer}.mat-form-field-type-mat-select .mat-form-field-label{width:calc(100% - 18px)}.mat-select-placeholder{transition:color 400ms 133.3333333333ms cubic-bezier(0.25, 0.8, 0.25, 1)}._mat-animation-noopable .mat-select-placeholder{transition:none}.mat-form-field-hide-placeholder .mat-select-placeholder{color:transparent;-webkit-text-fill-color:transparent;transition:none;display:block}.mat-select-min-line:empty::before{content:\\\" \\\";white-space:pre;width:1px;display:inline-block;visibility:hidden}\\n\"] }]\n        }], propDecorators: { options: [{\n                type: ContentChildren,\n                args: [MatOption, { descendants: true }]\n            }], optionGroups: [{\n                type: ContentChildren,\n                args: [MAT_OPTGROUP, { descendants: true }]\n            }], customTrigger: [{\n                type: ContentChild,\n                args: [MAT_SELECT_TRIGGER]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSelectModule {\n}\nMatSelectModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSelectModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatSelectModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSelectModule, declarations: [MatSelect, MatSelectTrigger], imports: [CommonModule, OverlayModule, MatOptionModule, MatCommonModule], exports: [CdkScrollableModule,\n        MatFormFieldModule,\n        MatSelect,\n        MatSelectTrigger,\n        MatOptionModule,\n        MatCommonModule] });\nMatSelectModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSelectModule, providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER], imports: [[CommonModule, OverlayModule, MatOptionModule, MatCommonModule], CdkScrollableModule,\n        MatFormFieldModule,\n        MatOptionModule,\n        MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSelectModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, OverlayModule, MatOptionModule, MatCommonModule],\n                    exports: [\n                        CdkScrollableModule,\n                        MatFormFieldModule,\n                        MatSelect,\n                        MatSelectTrigger,\n                        MatOptionModule,\n                        MatCommonModule,\n                    ],\n                    declarations: [MatSelect, MatSelectTrigger],\n                    providers: [MAT_SELECT_SCROLL_STRATEGY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SELECT_CONFIG, MAT_SELECT_SCROLL_STRATEGY, MAT_SELECT_SCROLL_STRATEGY_PROVIDER, MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY, MAT_SELECT_TRIGGER, MatSelect, MatSelectChange, MatSelectModule, MatSelectTrigger, _MatSelectBase, matSelectAnimations };\n","import * as i3 from '@angular/cdk/observers';\nimport { ObserversModule } from '@angular/cdk/observers';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, forwardRef, EventEmitter, Component, ViewEncapsulation, ChangeDetectionStrategy, Attribute, Inject, Optional, ViewChild, Input, Output, Directive, NgModule } from '@angular/core';\nimport * as i2 from '@angular/material/core';\nimport { mixinTabIndex, mixinColor, mixinDisableRipple, mixinDisabled, MatRippleModule, MatCommonModule } from '@angular/material/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { NG_VALUE_ACCESSOR, NG_VALIDATORS, CheckboxRequiredValidator } from '@angular/forms';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport * as i1 from '@angular/cdk/a11y';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-slide-toggle`. */\nconst MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS = new InjectionToken('mat-slide-toggle-default-options', {\n    providedIn: 'root',\n    factory: () => ({ disableToggleValue: false }),\n});\n\n// Increasing integer for generating unique ids for slide-toggle components.\nlet nextUniqueId = 0;\n/** @docs-private */\nconst MAT_SLIDE_TOGGLE_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatSlideToggle),\n    multi: true,\n};\n/** Change event object emitted by a MatSlideToggle. */\nclass MatSlideToggleChange {\n    constructor(\n    /** The source MatSlideToggle of the event. */\n    source, \n    /** The new `checked` value of the MatSlideToggle. */\n    checked) {\n        this.source = source;\n        this.checked = checked;\n    }\n}\n// Boilerplate for applying mixins to MatSlideToggle.\n/** @docs-private */\nconst _MatSlideToggleBase = mixinTabIndex(mixinColor(mixinDisableRipple(mixinDisabled(class {\n    constructor(_elementRef) {\n        this._elementRef = _elementRef;\n    }\n}))));\n/** Represents a slidable \"switch\" toggle that can be moved between on and off. */\nclass MatSlideToggle extends _MatSlideToggleBase {\n    constructor(elementRef, _focusMonitor, _changeDetectorRef, tabIndex, defaults, animationMode) {\n        super(elementRef);\n        this._focusMonitor = _focusMonitor;\n        this._changeDetectorRef = _changeDetectorRef;\n        this.defaults = defaults;\n        this._onChange = (_) => { };\n        this._onTouched = () => { };\n        this._uniqueId = `mat-slide-toggle-${++nextUniqueId}`;\n        this._required = false;\n        this._checked = false;\n        /** Name value will be applied to the input element if present. */\n        this.name = null;\n        /** A unique id for the slide-toggle input. If none is supplied, it will be auto-generated. */\n        this.id = this._uniqueId;\n        /** Whether the label should appear after or before the slide-toggle. Defaults to 'after'. */\n        this.labelPosition = 'after';\n        /** Used to set the aria-label attribute on the underlying input element. */\n        this.ariaLabel = null;\n        /** Used to set the aria-labelledby attribute on the underlying input element. */\n        this.ariaLabelledby = null;\n        /** An event will be dispatched each time the slide-toggle changes its value. */\n        this.change = new EventEmitter();\n        /**\n         * An event will be dispatched each time the slide-toggle input is toggled.\n         * This event is always emitted when the user toggles the slide toggle, but this does not mean\n         * the slide toggle's value has changed.\n         */\n        this.toggleChange = new EventEmitter();\n        this.tabIndex = parseInt(tabIndex) || 0;\n        this.color = this.defaultColor = defaults.color || 'accent';\n        this._noopAnimations = animationMode === 'NoopAnimations';\n    }\n    /** Whether the slide-toggle is required. */\n    get required() {\n        return this._required;\n    }\n    set required(value) {\n        this._required = coerceBooleanProperty(value);\n    }\n    /** Whether the slide-toggle element is checked or not. */\n    get checked() {\n        return this._checked;\n    }\n    set checked(value) {\n        this._checked = coerceBooleanProperty(value);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Returns the unique id for the visual hidden input. */\n    get inputId() {\n        return `${this.id || this._uniqueId}-input`;\n    }\n    ngAfterContentInit() {\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(focusOrigin => {\n            if (!focusOrigin) {\n                // When a focused element becomes disabled, the browser *immediately* fires a blur event.\n                // Angular does not expect events to be raised during change detection, so any state\n                // change (such as a form control's 'ng-touched') will cause a changed-after-checked\n                // error. See https://github.com/angular/angular/issues/17793. To work around this,\n                // we defer telling the form control it has been touched until the next tick.\n                Promise.resolve().then(() => this._onTouched());\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n    }\n    /** Method being called whenever the underlying input emits a change event. */\n    _onChangeEvent(event) {\n        // We always have to stop propagation on the change event.\n        // Otherwise the change event, from the input element, will bubble up and\n        // emit its event object to the component's `change` output.\n        event.stopPropagation();\n        this.toggleChange.emit();\n        // When the slide toggle's config disables toggle change event by setting\n        // `disableToggleValue: true`, the slide toggle's value does not change, and the\n        // checked state of the underlying input needs to be changed back.\n        if (this.defaults.disableToggleValue) {\n            this._inputElement.nativeElement.checked = this.checked;\n            return;\n        }\n        // Sync the value from the underlying input element with the component instance.\n        this.checked = this._inputElement.nativeElement.checked;\n        // Emit our custom change event only if the underlying input emitted one. This ensures that\n        // there is no change event, when the checked state changes programmatically.\n        this._emitChangeEvent();\n    }\n    /** Method being called whenever the slide-toggle has been clicked. */\n    _onInputClick(event) {\n        // We have to stop propagation for click events on the visual hidden input element.\n        // By default, when a user clicks on a label element, a generated click event will be\n        // dispatched on the associated input element. Since we are using a label element as our\n        // root container, the click event on the `slide-toggle` will be executed twice.\n        // The real click event will bubble up, and the generated click event also tries to bubble up.\n        // This will lead to multiple click events.\n        // Preventing bubbling for the second event will solve that issue.\n        event.stopPropagation();\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    writeValue(value) {\n        this.checked = !!value;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /** Implemented as part of ControlValueAccessor. */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /** Implemented as a part of ControlValueAccessor. */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Focuses the slide-toggle. */\n    focus(options, origin) {\n        if (origin) {\n            this._focusMonitor.focusVia(this._inputElement, origin, options);\n        }\n        else {\n            this._inputElement.nativeElement.focus(options);\n        }\n    }\n    /** Toggles the checked state of the slide-toggle. */\n    toggle() {\n        this.checked = !this.checked;\n        this._onChange(this.checked);\n    }\n    /**\n     * Emits a change event on the `change` output. Also notifies the FormControl about the change.\n     */\n    _emitChangeEvent() {\n        this._onChange(this.checked);\n        this.change.emit(new MatSlideToggleChange(this, this.checked));\n    }\n    /** Method being called whenever the label text changes. */\n    _onLabelTextChange() {\n        // Since the event of the `cdkObserveContent` directive runs outside of the zone, the\n        // slide-toggle component will be only marked for check, but no actual change detection runs\n        // automatically. Instead of going back into the zone in order to trigger a change detection\n        // which causes *all* components to be checked (if explicitly marked or not using OnPush),\n        // we only trigger an explicit change detection for the slide-toggle view and its children.\n        this._changeDetectorRef.detectChanges();\n    }\n}\nMatSlideToggle.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSlideToggle, deps: [{ token: i0.ElementRef }, { token: i1.FocusMonitor }, { token: i0.ChangeDetectorRef }, { token: 'tabindex', attribute: true }, { token: MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatSlideToggle.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatSlideToggle, selector: \"mat-slide-toggle\", inputs: { disabled: \"disabled\", disableRipple: \"disableRipple\", color: \"color\", tabIndex: \"tabIndex\", name: \"name\", id: \"id\", labelPosition: \"labelPosition\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaLabelledby: [\"aria-labelledby\", \"ariaLabelledby\"], ariaDescribedby: [\"aria-describedby\", \"ariaDescribedby\"], required: \"required\", checked: \"checked\" }, outputs: { change: \"change\", toggleChange: \"toggleChange\" }, host: { properties: { \"id\": \"id\", \"attr.tabindex\": \"null\", \"attr.aria-label\": \"null\", \"attr.aria-labelledby\": \"null\", \"attr.name\": \"null\", \"class.mat-checked\": \"checked\", \"class.mat-disabled\": \"disabled\", \"class.mat-slide-toggle-label-before\": \"labelPosition == \\\"before\\\"\", \"class._mat-animation-noopable\": \"_noopAnimations\" }, classAttribute: \"mat-slide-toggle\" }, providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR], viewQueries: [{ propertyName: \"_thumbEl\", first: true, predicate: [\"thumbContainer\"], descendants: true }, { propertyName: \"_thumbBarEl\", first: true, predicate: [\"toggleBar\"], descendants: true }, { propertyName: \"_inputElement\", first: true, predicate: [\"input\"], descendants: true }], exportAs: [\"matSlideToggle\"], usesInheritance: true, ngImport: i0, template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-slide-toggle-label\\\" #label>\\n  <span #toggleBar class=\\\"mat-slide-toggle-bar\\\"\\n       [class.mat-slide-toggle-bar-no-side-margin]=\\\"!labelContent.textContent || !labelContent.textContent.trim()\\\">\\n\\n    <input #input class=\\\"mat-slide-toggle-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           role=\\\"switch\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.aria-checked]=\\\"checked\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           (change)=\\\"_onChangeEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n\\n    <span class=\\\"mat-slide-toggle-thumb-container\\\" #thumbContainer>\\n      <span class=\\\"mat-slide-toggle-thumb\\\"></span>\\n      <span class=\\\"mat-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n           [matRippleTrigger]=\\\"label\\\"\\n           [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n           [matRippleCentered]=\\\"true\\\"\\n           [matRippleRadius]=\\\"20\\\"\\n           [matRippleAnimation]=\\\"{enterDuration: _noopAnimations ? 0 : 150}\\\">\\n\\n        <span class=\\\"mat-ripple-element mat-slide-toggle-persistent-ripple\\\"></span>\\n      </span>\\n    </span>\\n\\n  </span>\\n\\n  <span class=\\\"mat-slide-toggle-content\\\" #labelContent (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\", styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{-webkit-user-select:none;user-select:none;display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%;display:block}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"], directives: [{ type: i2.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleRadius\", \"matRippleAnimation\", \"matRippleDisabled\", \"matRippleTrigger\"], exportAs: [\"matRipple\"] }, { type: i3.CdkObserveContent, selector: \"[cdkObserveContent]\", inputs: [\"cdkObserveContentDisabled\", \"debounce\"], outputs: [\"cdkObserveContent\"], exportAs: [\"cdkObserveContent\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSlideToggle, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-slide-toggle', exportAs: 'matSlideToggle', host: {\n                        'class': 'mat-slide-toggle',\n                        '[id]': 'id',\n                        // Needs to be removed since it causes some a11y issues (see #21266).\n                        '[attr.tabindex]': 'null',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-labelledby]': 'null',\n                        '[attr.name]': 'null',\n                        '[class.mat-checked]': 'checked',\n                        '[class.mat-disabled]': 'disabled',\n                        '[class.mat-slide-toggle-label-before]': 'labelPosition == \"before\"',\n                        '[class._mat-animation-noopable]': '_noopAnimations',\n                    }, providers: [MAT_SLIDE_TOGGLE_VALUE_ACCESSOR], inputs: ['disabled', 'disableRipple', 'color', 'tabIndex'], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, template: \"<label [attr.for]=\\\"inputId\\\" class=\\\"mat-slide-toggle-label\\\" #label>\\n  <span #toggleBar class=\\\"mat-slide-toggle-bar\\\"\\n       [class.mat-slide-toggle-bar-no-side-margin]=\\\"!labelContent.textContent || !labelContent.textContent.trim()\\\">\\n\\n    <input #input class=\\\"mat-slide-toggle-input cdk-visually-hidden\\\" type=\\\"checkbox\\\"\\n           role=\\\"switch\\\"\\n           [id]=\\\"inputId\\\"\\n           [required]=\\\"required\\\"\\n           [tabIndex]=\\\"tabIndex\\\"\\n           [checked]=\\\"checked\\\"\\n           [disabled]=\\\"disabled\\\"\\n           [attr.name]=\\\"name\\\"\\n           [attr.aria-checked]=\\\"checked\\\"\\n           [attr.aria-label]=\\\"ariaLabel\\\"\\n           [attr.aria-labelledby]=\\\"ariaLabelledby\\\"\\n           [attr.aria-describedby]=\\\"ariaDescribedby\\\"\\n           (change)=\\\"_onChangeEvent($event)\\\"\\n           (click)=\\\"_onInputClick($event)\\\">\\n\\n    <span class=\\\"mat-slide-toggle-thumb-container\\\" #thumbContainer>\\n      <span class=\\\"mat-slide-toggle-thumb\\\"></span>\\n      <span class=\\\"mat-slide-toggle-ripple mat-focus-indicator\\\" mat-ripple\\n           [matRippleTrigger]=\\\"label\\\"\\n           [matRippleDisabled]=\\\"disableRipple || disabled\\\"\\n           [matRippleCentered]=\\\"true\\\"\\n           [matRippleRadius]=\\\"20\\\"\\n           [matRippleAnimation]=\\\"{enterDuration: _noopAnimations ? 0 : 150}\\\">\\n\\n        <span class=\\\"mat-ripple-element mat-slide-toggle-persistent-ripple\\\"></span>\\n      </span>\\n    </span>\\n\\n  </span>\\n\\n  <span class=\\\"mat-slide-toggle-content\\\" #labelContent (cdkObserveContent)=\\\"_onLabelTextChange()\\\">\\n    <!-- Add an invisible span so JAWS can read the label -->\\n    <span style=\\\"display:none\\\">&nbsp;</span>\\n    <ng-content></ng-content>\\n  </span>\\n</label>\\n\", styles: [\".mat-slide-toggle{display:inline-block;height:24px;max-width:100%;line-height:24px;white-space:nowrap;outline:none;-webkit-tap-highlight-color:transparent}.mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(16px, 0, 0)}[dir=rtl] .mat-slide-toggle.mat-checked .mat-slide-toggle-thumb-container{transform:translate3d(-16px, 0, 0)}.mat-slide-toggle.mat-disabled{opacity:.38}.mat-slide-toggle.mat-disabled .mat-slide-toggle-label,.mat-slide-toggle.mat-disabled .mat-slide-toggle-thumb-container{cursor:default}.mat-slide-toggle-label{-webkit-user-select:none;user-select:none;display:flex;flex:1;flex-direction:row;align-items:center;height:inherit;cursor:pointer}.mat-slide-toggle-content{white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.mat-slide-toggle-label-before .mat-slide-toggle-label{order:1}.mat-slide-toggle-label-before .mat-slide-toggle-bar{order:2}[dir=rtl] .mat-slide-toggle-label-before .mat-slide-toggle-bar,.mat-slide-toggle-bar{margin-right:8px;margin-left:0}[dir=rtl] .mat-slide-toggle-bar,.mat-slide-toggle-label-before .mat-slide-toggle-bar{margin-left:8px;margin-right:0}.mat-slide-toggle-bar-no-side-margin{margin-left:0;margin-right:0}.mat-slide-toggle-thumb-container{position:absolute;z-index:1;width:20px;height:20px;top:-3px;left:0;transform:translate3d(0, 0, 0);transition:all 80ms linear;transition-property:transform}._mat-animation-noopable .mat-slide-toggle-thumb-container{transition:none}[dir=rtl] .mat-slide-toggle-thumb-container{left:auto;right:0}.mat-slide-toggle-thumb{height:20px;width:20px;border-radius:50%;display:block}.mat-slide-toggle-bar{position:relative;width:36px;height:14px;flex-shrink:0;border-radius:8px}.mat-slide-toggle-input{bottom:0;left:10px}[dir=rtl] .mat-slide-toggle-input{left:auto;right:10px}.mat-slide-toggle-bar,.mat-slide-toggle-thumb{transition:all 80ms linear;transition-property:background-color;transition-delay:50ms}._mat-animation-noopable .mat-slide-toggle-bar,._mat-animation-noopable .mat-slide-toggle-thumb{transition:none}.mat-slide-toggle .mat-slide-toggle-ripple{position:absolute;top:calc(50% - 20px);left:calc(50% - 20px);height:40px;width:40px;z-index:1;pointer-events:none}.mat-slide-toggle .mat-slide-toggle-ripple .mat-ripple-element:not(.mat-slide-toggle-persistent-ripple){opacity:.12}.mat-slide-toggle-persistent-ripple{width:100%;height:100%;transform:none}.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:.04}.mat-slide-toggle:not(.mat-disabled).cdk-keyboard-focused .mat-slide-toggle-persistent-ripple{opacity:.12}.mat-slide-toggle-persistent-ripple,.mat-slide-toggle.mat-disabled .mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{opacity:0}@media(hover: none){.mat-slide-toggle-bar:hover .mat-slide-toggle-persistent-ripple{display:none}}.cdk-high-contrast-active .mat-slide-toggle-thumb,.cdk-high-contrast-active .mat-slide-toggle-bar{border:1px solid}.cdk-high-contrast-active .mat-slide-toggle.cdk-keyboard-focused .mat-slide-toggle-bar{outline:2px dotted;outline-offset:5px}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ElementRef }, { type: i1.FocusMonitor }, { type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                        type: Attribute,\n                        args: ['tabindex']\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS]\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { _thumbEl: [{\n                type: ViewChild,\n                args: ['thumbContainer']\n            }], _thumbBarEl: [{\n                type: ViewChild,\n                args: ['toggleBar']\n            }], name: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], labelPosition: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaLabelledby: [{\n                type: Input,\n                args: ['aria-labelledby']\n            }], ariaDescribedby: [{\n                type: Input,\n                args: ['aria-describedby']\n            }], required: [{\n                type: Input\n            }], checked: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], toggleChange: [{\n                type: Output\n            }], _inputElement: [{\n                type: ViewChild,\n                args: ['input']\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR = {\n    provide: NG_VALIDATORS,\n    useExisting: forwardRef(() => MatSlideToggleRequiredValidator),\n    multi: true,\n};\n/**\n * Validator for Material slide-toggle components with the required attribute in a\n * template-driven form. The default validator for required form controls asserts\n * that the control value is not undefined but that is not appropriate for a slide-toggle\n * where the value is always defined.\n *\n * Required slide-toggle form controls are valid when checked.\n */\nclass MatSlideToggleRequiredValidator extends CheckboxRequiredValidator {\n}\nMatSlideToggleRequiredValidator.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSlideToggleRequiredValidator, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatSlideToggleRequiredValidator.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatSlideToggleRequiredValidator, selector: \"mat-slide-toggle[required][formControlName],\\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]\", providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSlideToggleRequiredValidator, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: `mat-slide-toggle[required][formControlName],\n             mat-slide-toggle[required][formControl], mat-slide-toggle[required][ngModel]`,\n                    providers: [MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** This module is used by both original and MDC-based slide-toggle implementations. */\nclass _MatSlideToggleRequiredValidatorModule {\n}\n_MatSlideToggleRequiredValidatorModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatSlideToggleRequiredValidatorModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n_MatSlideToggleRequiredValidatorModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatSlideToggleRequiredValidatorModule, declarations: [MatSlideToggleRequiredValidator], exports: [MatSlideToggleRequiredValidator] });\n_MatSlideToggleRequiredValidatorModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatSlideToggleRequiredValidatorModule });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatSlideToggleRequiredValidatorModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    exports: [MatSlideToggleRequiredValidator],\n                    declarations: [MatSlideToggleRequiredValidator],\n                }]\n        }] });\nclass MatSlideToggleModule {\n}\nMatSlideToggleModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSlideToggleModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatSlideToggleModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSlideToggleModule, declarations: [MatSlideToggle], imports: [_MatSlideToggleRequiredValidatorModule, MatRippleModule,\n        MatCommonModule,\n        ObserversModule], exports: [_MatSlideToggleRequiredValidatorModule, MatSlideToggle, MatCommonModule] });\nMatSlideToggleModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSlideToggleModule, imports: [[\n            _MatSlideToggleRequiredValidatorModule,\n            MatRippleModule,\n            MatCommonModule,\n            ObserversModule,\n        ], _MatSlideToggleRequiredValidatorModule, MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSlideToggleModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [\n                        _MatSlideToggleRequiredValidatorModule,\n                        MatRippleModule,\n                        MatCommonModule,\n                        ObserversModule,\n                    ],\n                    exports: [_MatSlideToggleRequiredValidatorModule, MatSlideToggle, MatCommonModule],\n                    declarations: [MatSlideToggle],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS, MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR, MAT_SLIDE_TOGGLE_VALUE_ACCESSOR, MatSlideToggle, MatSlideToggleChange, MatSlideToggleModule, MatSlideToggleRequiredValidator, _MatSlideToggleRequiredValidatorModule };\n","import * as i0 from '@angular/core';\nimport { Injectable, Optional, SkipSelf, InjectionToken, EventEmitter, Directive, Inject, Input, Output, Component, ViewEncapsulation, ChangeDetectionStrategy, NgModule } from '@angular/core';\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\nimport { SPACE, ENTER } from '@angular/cdk/keycodes';\nimport { AnimationDurations, AnimationCurves, mixinInitialized, mixinDisabled, MatCommonModule } from '@angular/material/core';\nimport { Subject, merge } from 'rxjs';\nimport { trigger, state, style, transition, animate, keyframes, query, animateChild } from '@angular/animations';\nimport * as i3 from '@angular/cdk/a11y';\nimport * as i4 from '@angular/common';\nimport { CommonModule } from '@angular/common';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst SORT_ANIMATION_TRANSITION = AnimationDurations.ENTERING + ' ' + AnimationCurves.STANDARD_CURVE;\n/**\n * Animations used by MatSort.\n * @docs-private\n */\nconst matSortAnimations = {\n    /** Animation that moves the sort indicator. */\n    indicator: trigger('indicator', [\n        state('active-asc, asc', style({ transform: 'translateY(0px)' })),\n        // 10px is the height of the sort indicator, minus the width of the pointers\n        state('active-desc, desc', style({ transform: 'translateY(10px)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /** Animation that rotates the left pointer of the indicator based on the sorting direction. */\n    leftPointer: trigger('leftPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(-45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /** Animation that rotates the right pointer of the indicator based on the sorting direction. */\n    rightPointer: trigger('rightPointer', [\n        state('active-asc, asc', style({ transform: 'rotate(45deg)' })),\n        state('active-desc, desc', style({ transform: 'rotate(-45deg)' })),\n        transition('active-asc <=> active-desc', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /** Animation that controls the arrow opacity. */\n    arrowOpacity: trigger('arrowOpacity', [\n        state('desc-to-active, asc-to-active, active', style({ opacity: 1 })),\n        state('desc-to-hint, asc-to-hint, hint', style({ opacity: 0.54 })),\n        state('hint-to-desc, active-to-desc, desc, hint-to-asc, active-to-asc, asc, void', style({ opacity: 0 })),\n        // Transition between all states except for immediate transitions\n        transition('* => asc, * => desc, * => active, * => hint, * => void', animate('0ms')),\n        transition('* <=> *', animate(SORT_ANIMATION_TRANSITION)),\n    ]),\n    /**\n     * Animation for the translation of the arrow as a whole. States are separated into two\n     * groups: ones with animations and others that are immediate. Immediate states are asc, desc,\n     * peek, and active. The other states define a specific animation (source-to-destination)\n     * and are determined as a function of their prev user-perceived state and what the next state\n     * should be.\n     */\n    arrowPosition: trigger('arrowPosition', [\n        // Hidden Above => Hint Center\n        transition('* => desc-to-hint, * => desc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(-25%)' }), style({ transform: 'translateY(0)' })]))),\n        // Hint Center => Hidden Below\n        transition('* => hint-to-desc, * => active-to-desc', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(0)' }), style({ transform: 'translateY(25%)' })]))),\n        // Hidden Below => Hint Center\n        transition('* => asc-to-hint, * => asc-to-active', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(25%)' }), style({ transform: 'translateY(0)' })]))),\n        // Hint Center => Hidden Above\n        transition('* => hint-to-asc, * => active-to-asc', animate(SORT_ANIMATION_TRANSITION, keyframes([style({ transform: 'translateY(0)' }), style({ transform: 'translateY(-25%)' })]))),\n        state('desc-to-hint, asc-to-hint, hint, desc-to-active, asc-to-active, active', style({ transform: 'translateY(0)' })),\n        state('hint-to-desc, active-to-desc, desc', style({ transform: 'translateY(-25%)' })),\n        state('hint-to-asc, active-to-asc, asc', style({ transform: 'translateY(25%)' })),\n    ]),\n    /** Necessary trigger that calls animate on children animations. */\n    allowChildren: trigger('allowChildren', [\n        transition('* <=> *', [query('@*', animateChild(), { optional: true })]),\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** @docs-private */\nfunction getSortDuplicateSortableIdError(id) {\n    return Error(`Cannot have two MatSortables with the same id (${id}).`);\n}\n/** @docs-private */\nfunction getSortHeaderNotContainedWithinSortError() {\n    return Error(`MatSortHeader must be placed within a parent element with the MatSort directive.`);\n}\n/** @docs-private */\nfunction getSortHeaderMissingIdError() {\n    return Error(`MatSortHeader must be provided with a unique id.`);\n}\n/** @docs-private */\nfunction getSortInvalidDirectionError(direction) {\n    return Error(`${direction} is not a valid sort direction ('asc' or 'desc').`);\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * To modify the labels and text displayed, create a new instance of MatSortHeaderIntl and\n * include it in a custom provider.\n */\nclass MatSortHeaderIntl {\n    constructor() {\n        /**\n         * Stream that emits whenever the labels here are changed. Use this to notify\n         * components if the labels have changed after initialization.\n         */\n        this.changes = new Subject();\n    }\n}\nMatSortHeaderIntl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSortHeaderIntl, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nMatSortHeaderIntl.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSortHeaderIntl, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSortHeaderIntl, decorators: [{\n            type: Injectable,\n            args: [{ providedIn: 'root' }]\n        }] });\n/** @docs-private */\nfunction MAT_SORT_HEADER_INTL_PROVIDER_FACTORY(parentIntl) {\n    return parentIntl || new MatSortHeaderIntl();\n}\n/** @docs-private */\nconst MAT_SORT_HEADER_INTL_PROVIDER = {\n    // If there is already an MatSortHeaderIntl available, use that. Otherwise, provide a new one.\n    provide: MatSortHeaderIntl,\n    deps: [[new Optional(), new SkipSelf(), MatSortHeaderIntl]],\n    useFactory: MAT_SORT_HEADER_INTL_PROVIDER_FACTORY,\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token to be used to override the default options for `mat-sort`. */\nconst MAT_SORT_DEFAULT_OPTIONS = new InjectionToken('MAT_SORT_DEFAULT_OPTIONS');\n// Boilerplate for applying mixins to MatSort.\n/** @docs-private */\nconst _MatSortBase = mixinInitialized(mixinDisabled(class {\n}));\n/** Container for MatSortables to manage the sort state and provide default sort parameters. */\nclass MatSort extends _MatSortBase {\n    constructor(_defaultOptions) {\n        super();\n        this._defaultOptions = _defaultOptions;\n        /** Collection of all registered sortables that this directive manages. */\n        this.sortables = new Map();\n        /** Used to notify any child components listening to state changes. */\n        this._stateChanges = new Subject();\n        /**\n         * The direction to set when an MatSortable is initially sorted.\n         * May be overriden by the MatSortable's sort start.\n         */\n        this.start = 'asc';\n        this._direction = '';\n        /** Event emitted when the user changes either the active sort or sort direction. */\n        this.sortChange = new EventEmitter();\n    }\n    /** The sort direction of the currently active MatSortable. */\n    get direction() {\n        return this._direction;\n    }\n    set direction(direction) {\n        if (direction &&\n            direction !== 'asc' &&\n            direction !== 'desc' &&\n            (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getSortInvalidDirectionError(direction);\n        }\n        this._direction = direction;\n    }\n    /**\n     * Whether to disable the user from clearing the sort by finishing the sort direction cycle.\n     * May be overriden by the MatSortable's disable clear input.\n     */\n    get disableClear() {\n        return this._disableClear;\n    }\n    set disableClear(v) {\n        this._disableClear = coerceBooleanProperty(v);\n    }\n    /**\n     * Register function to be used by the contained MatSortables. Adds the MatSortable to the\n     * collection of MatSortables.\n     */\n    register(sortable) {\n        if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            if (!sortable.id) {\n                throw getSortHeaderMissingIdError();\n            }\n            if (this.sortables.has(sortable.id)) {\n                throw getSortDuplicateSortableIdError(sortable.id);\n            }\n        }\n        this.sortables.set(sortable.id, sortable);\n    }\n    /**\n     * Unregister function to be used by the contained MatSortables. Removes the MatSortable from the\n     * collection of contained MatSortables.\n     */\n    deregister(sortable) {\n        this.sortables.delete(sortable.id);\n    }\n    /** Sets the active sort id and determines the new sort direction. */\n    sort(sortable) {\n        if (this.active != sortable.id) {\n            this.active = sortable.id;\n            this.direction = sortable.start ? sortable.start : this.start;\n        }\n        else {\n            this.direction = this.getNextSortDirection(sortable);\n        }\n        this.sortChange.emit({ active: this.active, direction: this.direction });\n    }\n    /** Returns the next sort direction of the active sortable, checking for potential overrides. */\n    getNextSortDirection(sortable) {\n        var _a, _b, _c;\n        if (!sortable) {\n            return '';\n        }\n        // Get the sort direction cycle with the potential sortable overrides.\n        const disableClear = (_b = (_a = sortable === null || sortable === void 0 ? void 0 : sortable.disableClear) !== null && _a !== void 0 ? _a : this.disableClear) !== null && _b !== void 0 ? _b : !!((_c = this._defaultOptions) === null || _c === void 0 ? void 0 : _c.disableClear);\n        let sortDirectionCycle = getSortDirectionCycle(sortable.start || this.start, disableClear);\n        // Get and return the next direction in the cycle\n        let nextDirectionIndex = sortDirectionCycle.indexOf(this.direction) + 1;\n        if (nextDirectionIndex >= sortDirectionCycle.length) {\n            nextDirectionIndex = 0;\n        }\n        return sortDirectionCycle[nextDirectionIndex];\n    }\n    ngOnInit() {\n        this._markInitialized();\n    }\n    ngOnChanges() {\n        this._stateChanges.next();\n    }\n    ngOnDestroy() {\n        this._stateChanges.complete();\n    }\n}\nMatSort.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSort, deps: [{ token: MAT_SORT_DEFAULT_OPTIONS, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\nMatSort.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatSort, selector: \"[matSort]\", inputs: { disabled: [\"matSortDisabled\", \"disabled\"], active: [\"matSortActive\", \"active\"], start: [\"matSortStart\", \"start\"], direction: [\"matSortDirection\", \"direction\"], disableClear: [\"matSortDisableClear\", \"disableClear\"] }, outputs: { sortChange: \"matSortChange\" }, host: { classAttribute: \"mat-sort\" }, exportAs: [\"matSort\"], usesInheritance: true, usesOnChanges: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSort, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matSort]',\n                    exportAs: 'matSort',\n                    host: { 'class': 'mat-sort' },\n                    inputs: ['disabled: matSortDisabled'],\n                }]\n        }], ctorParameters: function () {\n        return [{ type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_SORT_DEFAULT_OPTIONS]\n                    }] }];\n    }, propDecorators: { active: [{\n                type: Input,\n                args: ['matSortActive']\n            }], start: [{\n                type: Input,\n                args: ['matSortStart']\n            }], direction: [{\n                type: Input,\n                args: ['matSortDirection']\n            }], disableClear: [{\n                type: Input,\n                args: ['matSortDisableClear']\n            }], sortChange: [{\n                type: Output,\n                args: ['matSortChange']\n            }] } });\n/** Returns the sort direction cycle to use given the provided parameters of order and clear. */\nfunction getSortDirectionCycle(start, disableClear) {\n    let sortOrder = ['asc', 'desc'];\n    if (start == 'desc') {\n        sortOrder.reverse();\n    }\n    if (!disableClear) {\n        sortOrder.push('');\n    }\n    return sortOrder;\n}\n\n// Boilerplate for applying mixins to the sort header.\n/** @docs-private */\nconst _MatSortHeaderBase = mixinDisabled(class {\n});\n/**\n * Applies sorting behavior (click to change sort) and styles to an element, including an\n * arrow to display the current sort direction.\n *\n * Must be provided with an id and contained within a parent MatSort directive.\n *\n * If used on header cells in a CdkTable, it will automatically default its id from its containing\n * column definition.\n */\nclass MatSortHeader extends _MatSortHeaderBase {\n    constructor(\n    /**\n     * @deprecated `_intl` parameter isn't being used anymore and it'll be removed.\n     * @breaking-change 13.0.0\n     */\n    _intl, _changeDetectorRef, \n    // `MatSort` is not optionally injected, but just asserted manually w/ better error.\n    // tslint:disable-next-line: lightweight-tokens\n    _sort, _columnDef, _focusMonitor, _elementRef, \n    /** @breaking-change 14.0.0 _ariaDescriber will be required. */\n    _ariaDescriber) {\n        // Note that we use a string token for the `_columnDef`, because the value is provided both by\n        // `material/table` and `cdk/table` and we can't have the CDK depending on Material,\n        // and we want to avoid having the sort header depending on the CDK table because\n        // of this single reference.\n        super();\n        this._intl = _intl;\n        this._changeDetectorRef = _changeDetectorRef;\n        this._sort = _sort;\n        this._columnDef = _columnDef;\n        this._focusMonitor = _focusMonitor;\n        this._elementRef = _elementRef;\n        this._ariaDescriber = _ariaDescriber;\n        /**\n         * Flag set to true when the indicator should be displayed while the sort is not active. Used to\n         * provide an affordance that the header is sortable by showing on focus and hover.\n         */\n        this._showIndicatorHint = false;\n        /**\n         * The view transition state of the arrow (translation/ opacity) - indicates its `from` and `to`\n         * position through the animation. If animations are currently disabled, the fromState is removed\n         * so that there is no animation displayed.\n         */\n        this._viewState = {};\n        /** The direction the arrow should be facing according to the current state. */\n        this._arrowDirection = '';\n        /**\n         * Whether the view state animation should show the transition between the `from` and `to` states.\n         */\n        this._disableViewStateAnimation = false;\n        /** Sets the position of the arrow that displays when sorted. */\n        this.arrowPosition = 'after';\n        // Default the action description to \"Sort\" because it's better than nothing.\n        // Without a description, the button's label comes from the sort header text content,\n        // which doesn't give any indication that it performs a sorting operation.\n        this._sortActionDescription = 'Sort';\n        if (!_sort && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw getSortHeaderNotContainedWithinSortError();\n        }\n        this._handleStateChanges();\n    }\n    /**\n     * Description applied to MatSortHeader's button element with aria-describedby. This text should\n     * describe the action that will occur when the user clicks the sort header.\n     */\n    get sortActionDescription() {\n        return this._sortActionDescription;\n    }\n    set sortActionDescription(value) {\n        this._updateSortActionDescription(value);\n    }\n    /** Overrides the disable clear value of the containing MatSort for this MatSortable. */\n    get disableClear() {\n        return this._disableClear;\n    }\n    set disableClear(v) {\n        this._disableClear = coerceBooleanProperty(v);\n    }\n    ngOnInit() {\n        if (!this.id && this._columnDef) {\n            this.id = this._columnDef.name;\n        }\n        // Initialize the direction of the arrow and set the view state to be immediately that state.\n        this._updateArrowDirection();\n        this._setAnimationTransitionState({\n            toState: this._isSorted() ? 'active' : this._arrowDirection,\n        });\n        this._sort.register(this);\n        this._sortButton = this._elementRef.nativeElement.querySelector('.mat-sort-header-container');\n        this._updateSortActionDescription(this._sortActionDescription);\n    }\n    ngAfterViewInit() {\n        // We use the focus monitor because we also want to style\n        // things differently based on the focus origin.\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n            const newState = !!origin;\n            if (newState !== this._showIndicatorHint) {\n                this._setIndicatorHintVisible(newState);\n                this._changeDetectorRef.markForCheck();\n            }\n        });\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._sort.deregister(this);\n        this._rerenderSubscription.unsubscribe();\n    }\n    /**\n     * Sets the \"hint\" state such that the arrow will be semi-transparently displayed as a hint to the\n     * user showing what the active sort will become. If set to false, the arrow will fade away.\n     */\n    _setIndicatorHintVisible(visible) {\n        // No-op if the sort header is disabled - should not make the hint visible.\n        if (this._isDisabled() && visible) {\n            return;\n        }\n        this._showIndicatorHint = visible;\n        if (!this._isSorted()) {\n            this._updateArrowDirection();\n            if (this._showIndicatorHint) {\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'hint' });\n            }\n            else {\n                this._setAnimationTransitionState({ fromState: 'hint', toState: this._arrowDirection });\n            }\n        }\n    }\n    /**\n     * Sets the animation transition view state for the arrow's position and opacity. If the\n     * `disableViewStateAnimation` flag is set to true, the `fromState` will be ignored so that\n     * no animation appears.\n     */\n    _setAnimationTransitionState(viewState) {\n        this._viewState = viewState || {};\n        // If the animation for arrow position state (opacity/translation) should be disabled,\n        // remove the fromState so that it jumps right to the toState.\n        if (this._disableViewStateAnimation) {\n            this._viewState = { toState: viewState.toState };\n        }\n    }\n    /** Triggers the sort on this sort header and removes the indicator hint. */\n    _toggleOnInteraction() {\n        this._sort.sort(this);\n        // Do not show the animation if the header was already shown in the right position.\n        if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n            this._disableViewStateAnimation = true;\n        }\n    }\n    _handleClick() {\n        if (!this._isDisabled()) {\n            this._sort.sort(this);\n        }\n    }\n    _handleKeydown(event) {\n        if (!this._isDisabled() && (event.keyCode === SPACE || event.keyCode === ENTER)) {\n            event.preventDefault();\n            this._toggleOnInteraction();\n        }\n    }\n    /** Whether this MatSortHeader is currently sorted in either ascending or descending order. */\n    _isSorted() {\n        return (this._sort.active == this.id &&\n            (this._sort.direction === 'asc' || this._sort.direction === 'desc'));\n    }\n    /** Returns the animation state for the arrow direction (indicator and pointers). */\n    _getArrowDirectionState() {\n        return `${this._isSorted() ? 'active-' : ''}${this._arrowDirection}`;\n    }\n    /** Returns the arrow position state (opacity, translation). */\n    _getArrowViewState() {\n        const fromState = this._viewState.fromState;\n        return (fromState ? `${fromState}-to-` : '') + this._viewState.toState;\n    }\n    /**\n     * Updates the direction the arrow should be pointing. If it is not sorted, the arrow should be\n     * facing the start direction. Otherwise if it is sorted, the arrow should point in the currently\n     * active sorted direction. The reason this is updated through a function is because the direction\n     * should only be changed at specific times - when deactivated but the hint is displayed and when\n     * the sort is active and the direction changes. Otherwise the arrow's direction should linger\n     * in cases such as the sort becoming deactivated but we want to animate the arrow away while\n     * preserving its direction, even though the next sort direction is actually different and should\n     * only be changed once the arrow displays again (hint or activation).\n     */\n    _updateArrowDirection() {\n        this._arrowDirection = this._isSorted() ? this._sort.direction : this.start || this._sort.start;\n    }\n    _isDisabled() {\n        return this._sort.disabled || this.disabled;\n    }\n    /**\n     * Gets the aria-sort attribute that should be applied to this sort header. If this header\n     * is not sorted, returns null so that the attribute is removed from the host element. Aria spec\n     * says that the aria-sort property should only be present on one header at a time, so removing\n     * ensures this is true.\n     */\n    _getAriaSortAttribute() {\n        if (!this._isSorted()) {\n            return 'none';\n        }\n        return this._sort.direction == 'asc' ? 'ascending' : 'descending';\n    }\n    /** Whether the arrow inside the sort header should be rendered. */\n    _renderArrow() {\n        return !this._isDisabled() || this._isSorted();\n    }\n    _updateSortActionDescription(newDescription) {\n        var _a, _b;\n        // We use AriaDescriber for the sort button instead of setting an `aria-label` because some\n        // screen readers (notably VoiceOver) will read both the column header *and* the button's label\n        // for every *cell* in the table, creating a lot of unnecessary noise.\n        // If _sortButton is undefined, the component hasn't been initialized yet so there's\n        // nothing to update in the DOM.\n        if (this._sortButton) {\n            // removeDescription will no-op if there is no existing message.\n            // TODO(jelbourn): remove optional chaining when AriaDescriber is required.\n            (_a = this._ariaDescriber) === null || _a === void 0 ? void 0 : _a.removeDescription(this._sortButton, this._sortActionDescription);\n            (_b = this._ariaDescriber) === null || _b === void 0 ? void 0 : _b.describe(this._sortButton, newDescription);\n        }\n        this._sortActionDescription = newDescription;\n    }\n    /** Handles changes in the sorting state. */\n    _handleStateChanges() {\n        this._rerenderSubscription = merge(this._sort.sortChange, this._sort._stateChanges, this._intl.changes).subscribe(() => {\n            if (this._isSorted()) {\n                this._updateArrowDirection();\n                // Do not show the animation if the header was already shown in the right position.\n                if (this._viewState.toState === 'hint' || this._viewState.toState === 'active') {\n                    this._disableViewStateAnimation = true;\n                }\n                this._setAnimationTransitionState({ fromState: this._arrowDirection, toState: 'active' });\n                this._showIndicatorHint = false;\n            }\n            // If this header was recently active and now no longer sorted, animate away the arrow.\n            if (!this._isSorted() && this._viewState && this._viewState.toState === 'active') {\n                this._disableViewStateAnimation = false;\n                this._setAnimationTransitionState({ fromState: 'active', toState: this._arrowDirection });\n            }\n            this._changeDetectorRef.markForCheck();\n        });\n    }\n}\nMatSortHeader.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSortHeader, deps: [{ token: MatSortHeaderIntl }, { token: i0.ChangeDetectorRef }, { token: MatSort, optional: true }, { token: 'MAT_SORT_HEADER_COLUMN_DEF', optional: true }, { token: i3.FocusMonitor }, { token: i0.ElementRef }, { token: i3.AriaDescriber, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nMatSortHeader.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatSortHeader, selector: \"[mat-sort-header]\", inputs: { disabled: \"disabled\", id: [\"mat-sort-header\", \"id\"], arrowPosition: \"arrowPosition\", start: \"start\", sortActionDescription: \"sortActionDescription\", disableClear: \"disableClear\" }, host: { listeners: { \"click\": \"_handleClick()\", \"keydown\": \"_handleKeydown($event)\", \"mouseenter\": \"_setIndicatorHintVisible(true)\", \"mouseleave\": \"_setIndicatorHintVisible(false)\" }, properties: { \"attr.aria-sort\": \"_getAriaSortAttribute()\", \"class.mat-sort-header-disabled\": \"_isDisabled()\" }, classAttribute: \"mat-sort-header\" }, exportAs: [\"matSortHeader\"], usesInheritance: true, ngImport: i0, template: \"<!--\\n  We set the `tabindex` on an element inside the table header, rather than the header itself,\\n  because of a bug in NVDA where having a `tabindex` on a `th` breaks keyboard navigation in the\\n  table (see https://github.com/nvaccess/nvda/issues/7718). This allows for the header to both\\n  be focusable, and have screen readers read out its `aria-sort` state. We prefer this approach\\n  over having a button with an `aria-label` inside the header, because the button's `aria-label`\\n  will be read out as the user is navigating the table's cell (see #13012).\\n\\n  The approach is based off of: https://dequeuniversity.com/library/aria/tables/sf-sortable-grid\\n-->\\n<div class=\\\"mat-sort-header-container mat-focus-indicator\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition == 'before'\\\"\\n     [attr.tabindex]=\\\"_isDisabled() ? null : 0\\\"\\n     [attr.role]=\\\"_isDisabled() ? null : 'button'\\\">\\n\\n  <!--\\n    TODO(crisbeto): this div isn't strictly necessary, but we have to keep it due to a large\\n    number of screenshot diff failures. It should be removed eventually. Note that the difference\\n    isn't visible with a shorter header, but once it breaks up into multiple lines, this element\\n    causes it to be center-aligned, whereas removing it will keep the text to the left.\\n  -->\\n  <div class=\\\"mat-sort-header-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  <div class=\\\"mat-sort-header-arrow\\\"\\n       *ngIf=\\\"_renderArrow()\\\"\\n       [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n       [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n       [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n       (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n       (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n    <div class=\\\"mat-sort-header-stem\\\"></div>\\n    <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n      <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"], directives: [{ type: i4.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }], animations: [\n        matSortAnimations.indicator,\n        matSortAnimations.leftPointer,\n        matSortAnimations.rightPointer,\n        matSortAnimations.arrowOpacity,\n        matSortAnimations.arrowPosition,\n        matSortAnimations.allowChildren,\n    ], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSortHeader, decorators: [{\n            type: Component,\n            args: [{ selector: '[mat-sort-header]', exportAs: 'matSortHeader', host: {\n                        'class': 'mat-sort-header',\n                        '(click)': '_handleClick()',\n                        '(keydown)': '_handleKeydown($event)',\n                        '(mouseenter)': '_setIndicatorHintVisible(true)',\n                        '(mouseleave)': '_setIndicatorHintVisible(false)',\n                        '[attr.aria-sort]': '_getAriaSortAttribute()',\n                        '[class.mat-sort-header-disabled]': '_isDisabled()',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, inputs: ['disabled'], animations: [\n                        matSortAnimations.indicator,\n                        matSortAnimations.leftPointer,\n                        matSortAnimations.rightPointer,\n                        matSortAnimations.arrowOpacity,\n                        matSortAnimations.arrowPosition,\n                        matSortAnimations.allowChildren,\n                    ], template: \"<!--\\n  We set the `tabindex` on an element inside the table header, rather than the header itself,\\n  because of a bug in NVDA where having a `tabindex` on a `th` breaks keyboard navigation in the\\n  table (see https://github.com/nvaccess/nvda/issues/7718). This allows for the header to both\\n  be focusable, and have screen readers read out its `aria-sort` state. We prefer this approach\\n  over having a button with an `aria-label` inside the header, because the button's `aria-label`\\n  will be read out as the user is navigating the table's cell (see #13012).\\n\\n  The approach is based off of: https://dequeuniversity.com/library/aria/tables/sf-sortable-grid\\n-->\\n<div class=\\\"mat-sort-header-container mat-focus-indicator\\\"\\n     [class.mat-sort-header-sorted]=\\\"_isSorted()\\\"\\n     [class.mat-sort-header-position-before]=\\\"arrowPosition == 'before'\\\"\\n     [attr.tabindex]=\\\"_isDisabled() ? null : 0\\\"\\n     [attr.role]=\\\"_isDisabled() ? null : 'button'\\\">\\n\\n  <!--\\n    TODO(crisbeto): this div isn't strictly necessary, but we have to keep it due to a large\\n    number of screenshot diff failures. It should be removed eventually. Note that the difference\\n    isn't visible with a shorter header, but once it breaks up into multiple lines, this element\\n    causes it to be center-aligned, whereas removing it will keep the text to the left.\\n  -->\\n  <div class=\\\"mat-sort-header-content\\\">\\n    <ng-content></ng-content>\\n  </div>\\n\\n  <!-- Disable animations while a current animation is running -->\\n  <div class=\\\"mat-sort-header-arrow\\\"\\n       *ngIf=\\\"_renderArrow()\\\"\\n       [@arrowOpacity]=\\\"_getArrowViewState()\\\"\\n       [@arrowPosition]=\\\"_getArrowViewState()\\\"\\n       [@allowChildren]=\\\"_getArrowDirectionState()\\\"\\n       (@arrowPosition.start)=\\\"_disableViewStateAnimation = true\\\"\\n       (@arrowPosition.done)=\\\"_disableViewStateAnimation = false\\\">\\n    <div class=\\\"mat-sort-header-stem\\\"></div>\\n    <div class=\\\"mat-sort-header-indicator\\\" [@indicator]=\\\"_getArrowDirectionState()\\\">\\n      <div class=\\\"mat-sort-header-pointer-left\\\" [@leftPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-right\\\" [@rightPointer]=\\\"_getArrowDirectionState()\\\"></div>\\n      <div class=\\\"mat-sort-header-pointer-middle\\\"></div>\\n    </div>\\n  </div>\\n</div>\\n\", styles: [\".mat-sort-header-container{display:flex;cursor:pointer;align-items:center;letter-spacing:normal;outline:0}[mat-sort-header].cdk-keyboard-focused .mat-sort-header-container,[mat-sort-header].cdk-program-focused .mat-sort-header-container{border-bottom:solid 1px currentColor}.mat-sort-header-disabled .mat-sort-header-container{cursor:default}.mat-sort-header-content{text-align:center;display:flex;align-items:center}.mat-sort-header-position-before{flex-direction:row-reverse}.mat-sort-header-arrow{height:12px;width:12px;min-width:12px;position:relative;display:flex;opacity:0}.mat-sort-header-arrow,[dir=rtl] .mat-sort-header-position-before .mat-sort-header-arrow{margin:0 0 0 6px}.mat-sort-header-position-before .mat-sort-header-arrow,[dir=rtl] .mat-sort-header-arrow{margin:0 6px 0 0}.mat-sort-header-stem{background:currentColor;height:10px;width:2px;margin:auto;display:flex;align-items:center}.cdk-high-contrast-active .mat-sort-header-stem{width:0;border-left:solid 2px}.mat-sort-header-indicator{width:100%;height:2px;display:flex;align-items:center;position:absolute;top:0;left:0}.mat-sort-header-pointer-middle{margin:auto;height:2px;width:2px;background:currentColor;transform:rotate(45deg)}.cdk-high-contrast-active .mat-sort-header-pointer-middle{width:0;height:0;border-top:solid 2px;border-left:solid 2px}.mat-sort-header-pointer-left,.mat-sort-header-pointer-right{background:currentColor;width:6px;height:2px;position:absolute;top:0}.cdk-high-contrast-active .mat-sort-header-pointer-left,.cdk-high-contrast-active .mat-sort-header-pointer-right{width:0;height:0;border-left:solid 6px;border-top:solid 2px}.mat-sort-header-pointer-left{transform-origin:right;left:0}.mat-sort-header-pointer-right{transform-origin:left;right:0}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: MatSortHeaderIntl }, { type: i0.ChangeDetectorRef }, { type: MatSort, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: ['MAT_SORT_HEADER_COLUMN_DEF']\n                    }, {\n                        type: Optional\n                    }] }, { type: i3.FocusMonitor }, { type: i0.ElementRef }, { type: i3.AriaDescriber, decorators: [{\n                        type: Optional\n                    }] }];\n    }, propDecorators: { id: [{\n                type: Input,\n                args: ['mat-sort-header']\n            }], arrowPosition: [{\n                type: Input\n            }], start: [{\n                type: Input\n            }], sortActionDescription: [{\n                type: Input\n            }], disableClear: [{\n                type: Input\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatSortModule {\n}\nMatSortModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSortModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatSortModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSortModule, declarations: [MatSort, MatSortHeader], imports: [CommonModule, MatCommonModule], exports: [MatSort, MatSortHeader] });\nMatSortModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSortModule, providers: [MAT_SORT_HEADER_INTL_PROVIDER], imports: [[CommonModule, MatCommonModule]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatSortModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CommonModule, MatCommonModule],\n                    exports: [MatSort, MatSortHeader],\n                    declarations: [MatSort, MatSortHeader],\n                    providers: [MAT_SORT_HEADER_INTL_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_SORT_DEFAULT_OPTIONS, MAT_SORT_HEADER_INTL_PROVIDER, MAT_SORT_HEADER_INTL_PROVIDER_FACTORY, MatSort, MatSortHeader, MatSortHeaderIntl, MatSortModule, matSortAnimations };\n","import * as i0 from '@angular/core';\nimport { Directive, Component, ViewEncapsulation, ChangeDetectionStrategy, Input, NgModule } from '@angular/core';\nimport * as i1 from '@angular/cdk/table';\nimport { CdkTable, CDK_TABLE, _COALESCED_STYLE_SCHEDULER, _CoalescedStyleScheduler, STICKY_POSITIONING_LISTENER, CDK_TABLE_TEMPLATE, CdkCellDef, CdkHeaderCellDef, CdkFooterCellDef, CdkColumnDef, CdkHeaderCell, CdkFooterCell, CdkCell, CdkHeaderRowDef, CdkFooterRowDef, CdkRowDef, CdkHeaderRow, CDK_ROW_TEMPLATE, CdkFooterRow, CdkRow, CdkNoDataRow, CdkTextColumn, CdkTableModule, DataSource } from '@angular/cdk/table';\nimport { _VIEW_REPEATER_STRATEGY, _RecycleViewRepeaterStrategy, _DisposeViewRepeaterStrategy } from '@angular/cdk/collections';\nimport { MatCommonModule } from '@angular/material/core';\nimport { _isNumberValue } from '@angular/cdk/coercion';\nimport { BehaviorSubject, Subject, merge, of, combineLatest } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Enables the recycle view repeater strategy, which reduces rendering latency. Not compatible with\n * tables that animate rows.\n */\nclass MatRecycleRows {\n}\nMatRecycleRows.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRecycleRows, deps: [], target: i0.ɵɵFactoryTarget.Directive });\nMatRecycleRows.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatRecycleRows, selector: \"mat-table[recycleRows], table[mat-table][recycleRows]\", providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }], ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRecycleRows, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-table[recycleRows], table[mat-table][recycleRows]',\n                    providers: [{ provide: _VIEW_REPEATER_STRATEGY, useClass: _RecycleViewRepeaterStrategy }],\n                }]\n        }] });\n/**\n * Wrapper for the CdkTable with Material design styles.\n */\nclass MatTable extends CdkTable {\n    constructor() {\n        super(...arguments);\n        /** Overrides the sticky CSS class set by the `CdkTable`. */\n        this.stickyCssClass = 'mat-table-sticky';\n        /** Overrides the need to add position: sticky on every sticky cell element in `CdkTable`. */\n        this.needsPositionStickyOnElement = false;\n    }\n}\nMatTable.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTable, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatTable.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTable, selector: \"mat-table, table[mat-table]\", host: { properties: { \"class.mat-table-fixed-layout\": \"fixedLayout\" }, classAttribute: \"mat-table\" }, providers: [\n        // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n        //  is only included in the build if used.\n        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n        { provide: CdkTable, useExisting: MatTable },\n        { provide: CDK_TABLE, useExisting: MatTable },\n        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n        // Prevent nested tables from seeing this table's StickyPositioningListener.\n        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n    ], exportAs: [\"matTable\"], usesInheritance: true, ngImport: i0, template: \"\\n  <ng-content select=\\\"caption\\\"></ng-content>\\n  <ng-content select=\\\"colgroup, col\\\"></ng-content>\\n  <ng-container headerRowOutlet></ng-container>\\n  <ng-container rowOutlet></ng-container>\\n  <ng-container noDataRowOutlet></ng-container>\\n  <ng-container footerRowOutlet></ng-container>\\n\", isInline: true, styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}.mat-table-sticky{position:sticky !important}.mat-table-fixed-layout{table-layout:fixed}\\n\"], directives: [{ type: i1.HeaderRowOutlet, selector: \"[headerRowOutlet]\" }, { type: i1.DataRowOutlet, selector: \"[rowOutlet]\" }, { type: i1.NoDataRowOutlet, selector: \"[noDataRowOutlet]\" }, { type: i1.FooterRowOutlet, selector: \"[footerRowOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTable, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-table, table[mat-table]', exportAs: 'matTable', template: CDK_TABLE_TEMPLATE, host: {\n                        'class': 'mat-table',\n                        '[class.mat-table-fixed-layout]': 'fixedLayout',\n                    }, providers: [\n                        // TODO(michaeljamesparsons) Abstract the view repeater strategy to a directive API so this code\n                        //  is only included in the build if used.\n                        { provide: _VIEW_REPEATER_STRATEGY, useClass: _DisposeViewRepeaterStrategy },\n                        { provide: CdkTable, useExisting: MatTable },\n                        { provide: CDK_TABLE, useExisting: MatTable },\n                        { provide: _COALESCED_STYLE_SCHEDULER, useClass: _CoalescedStyleScheduler },\n                        // Prevent nested tables from seeing this table's StickyPositioningListener.\n                        { provide: STICKY_POSITIONING_LISTENER, useValue: null },\n                    ], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.Default, styles: [\"mat-table{display:block}mat-header-row{min-height:56px}mat-row,mat-footer-row{min-height:48px}mat-row,mat-header-row,mat-footer-row{display:flex;border-width:0;border-bottom-width:1px;border-style:solid;align-items:center;box-sizing:border-box}mat-cell:first-of-type,mat-header-cell:first-of-type,mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] mat-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}mat-cell:last-of-type,mat-header-cell:last-of-type,mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] mat-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}mat-cell,mat-header-cell,mat-footer-cell{flex:1;display:flex;align-items:center;overflow:hidden;word-wrap:break-word;min-height:inherit}table.mat-table{border-spacing:0}tr.mat-header-row{height:56px}tr.mat-row,tr.mat-footer-row{height:48px}th.mat-header-cell{text-align:left}[dir=rtl] th.mat-header-cell{text-align:right}th.mat-header-cell,td.mat-cell,td.mat-footer-cell{padding:0;border-bottom-width:1px;border-bottom-style:solid}th.mat-header-cell:first-of-type,td.mat-cell:first-of-type,td.mat-footer-cell:first-of-type{padding-left:24px}[dir=rtl] th.mat-header-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:first-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:first-of-type:not(:only-of-type){padding-left:0;padding-right:24px}th.mat-header-cell:last-of-type,td.mat-cell:last-of-type,td.mat-footer-cell:last-of-type{padding-right:24px}[dir=rtl] th.mat-header-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-cell:last-of-type:not(:only-of-type),[dir=rtl] td.mat-footer-cell:last-of-type:not(:only-of-type){padding-right:0;padding-left:24px}.mat-table-sticky{position:sticky !important}.mat-table-fixed-layout{table-layout:fixed}\\n\"] }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Cell definition for the mat-table.\n * Captures the template of a column's data row cell as well as cell-specific properties.\n */\nclass MatCellDef extends CdkCellDef {\n}\nMatCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatCellDef, selector: \"[matCellDef]\", providers: [{ provide: CdkCellDef, useExisting: MatCellDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matCellDef]',\n                    providers: [{ provide: CdkCellDef, useExisting: MatCellDef }],\n                }]\n        }] });\n/**\n * Header cell definition for the mat-table.\n * Captures the template of a column's header cell and as well as cell-specific properties.\n */\nclass MatHeaderCellDef extends CdkHeaderCellDef {\n}\nMatHeaderCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatHeaderCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatHeaderCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatHeaderCellDef, selector: \"[matHeaderCellDef]\", providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatHeaderCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matHeaderCellDef]',\n                    providers: [{ provide: CdkHeaderCellDef, useExisting: MatHeaderCellDef }],\n                }]\n        }] });\n/**\n * Footer cell definition for the mat-table.\n * Captures the template of a column's footer cell and as well as cell-specific properties.\n */\nclass MatFooterCellDef extends CdkFooterCellDef {\n}\nMatFooterCellDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFooterCellDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatFooterCellDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatFooterCellDef, selector: \"[matFooterCellDef]\", providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFooterCellDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matFooterCellDef]',\n                    providers: [{ provide: CdkFooterCellDef, useExisting: MatFooterCellDef }],\n                }]\n        }] });\n/**\n * Column definition for the mat-table.\n * Defines a set of cells available for a table column.\n */\nclass MatColumnDef extends CdkColumnDef {\n    /** Unique name for this column. */\n    get name() {\n        return this._name;\n    }\n    set name(name) {\n        this._setNameInput(name);\n    }\n    /**\n     * Add \"mat-column-\" prefix in addition to \"cdk-column-\" prefix.\n     * In the future, this will only add \"mat-column-\" and columnCssClassName\n     * will change from type string[] to string.\n     * @docs-private\n     */\n    _updateColumnCssClassName() {\n        super._updateColumnCssClassName();\n        this._columnCssClassName.push(`mat-column-${this.cssClassFriendlyName}`);\n    }\n}\nMatColumnDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatColumnDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatColumnDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatColumnDef, selector: \"[matColumnDef]\", inputs: { sticky: \"sticky\", name: [\"matColumnDef\", \"name\"] }, providers: [\n        { provide: CdkColumnDef, useExisting: MatColumnDef },\n        { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef },\n    ], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatColumnDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matColumnDef]',\n                    inputs: ['sticky'],\n                    providers: [\n                        { provide: CdkColumnDef, useExisting: MatColumnDef },\n                        { provide: 'MAT_SORT_HEADER_COLUMN_DEF', useExisting: MatColumnDef },\n                    ],\n                }]\n        }], propDecorators: { name: [{\n                type: Input,\n                args: ['matColumnDef']\n            }] } });\n/** Header cell template container that adds the right classes and role. */\nclass MatHeaderCell extends CdkHeaderCell {\n}\nMatHeaderCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatHeaderCell, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatHeaderCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatHeaderCell, selector: \"mat-header-cell, th[mat-header-cell]\", host: { attributes: { \"role\": \"columnheader\" }, classAttribute: \"mat-header-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatHeaderCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-header-cell, th[mat-header-cell]',\n                    host: {\n                        'class': 'mat-header-cell',\n                        'role': 'columnheader',\n                    },\n                }]\n        }] });\n/** Footer cell template container that adds the right classes and role. */\nclass MatFooterCell extends CdkFooterCell {\n}\nMatFooterCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFooterCell, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatFooterCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatFooterCell, selector: \"mat-footer-cell, td[mat-footer-cell]\", host: { attributes: { \"role\": \"gridcell\" }, classAttribute: \"mat-footer-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFooterCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-footer-cell, td[mat-footer-cell]',\n                    host: {\n                        'class': 'mat-footer-cell',\n                        'role': 'gridcell',\n                    },\n                }]\n        }] });\n/** Cell template container that adds the right classes and role. */\nclass MatCell extends CdkCell {\n}\nMatCell.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatCell, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatCell.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatCell, selector: \"mat-cell, td[mat-cell]\", host: { attributes: { \"role\": \"gridcell\" }, classAttribute: \"mat-cell\" }, usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatCell, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-cell, td[mat-cell]',\n                    host: {\n                        'class': 'mat-cell',\n                        'role': 'gridcell',\n                    },\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Header row definition for the mat-table.\n * Captures the header row's template and other header properties such as the columns to display.\n */\nclass MatHeaderRowDef extends CdkHeaderRowDef {\n}\nMatHeaderRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatHeaderRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatHeaderRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatHeaderRowDef, selector: \"[matHeaderRowDef]\", inputs: { columns: [\"matHeaderRowDef\", \"columns\"], sticky: [\"matHeaderRowDefSticky\", \"sticky\"] }, providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatHeaderRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matHeaderRowDef]',\n                    providers: [{ provide: CdkHeaderRowDef, useExisting: MatHeaderRowDef }],\n                    inputs: ['columns: matHeaderRowDef', 'sticky: matHeaderRowDefSticky'],\n                }]\n        }] });\n/**\n * Footer row definition for the mat-table.\n * Captures the footer row's template and other footer properties such as the columns to display.\n */\nclass MatFooterRowDef extends CdkFooterRowDef {\n}\nMatFooterRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFooterRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatFooterRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatFooterRowDef, selector: \"[matFooterRowDef]\", inputs: { columns: [\"matFooterRowDef\", \"columns\"], sticky: [\"matFooterRowDefSticky\", \"sticky\"] }, providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFooterRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matFooterRowDef]',\n                    providers: [{ provide: CdkFooterRowDef, useExisting: MatFooterRowDef }],\n                    inputs: ['columns: matFooterRowDef', 'sticky: matFooterRowDefSticky'],\n                }]\n        }] });\n/**\n * Data row definition for the mat-table.\n * Captures the data row's template and other properties such as the columns to display and\n * a when predicate that describes when this row should be used.\n */\nclass MatRowDef extends CdkRowDef {\n}\nMatRowDef.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRowDef, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatRowDef.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatRowDef, selector: \"[matRowDef]\", inputs: { columns: [\"matRowDefColumns\", \"columns\"], when: [\"matRowDefWhen\", \"when\"] }, providers: [{ provide: CdkRowDef, useExisting: MatRowDef }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRowDef, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matRowDef]',\n                    providers: [{ provide: CdkRowDef, useExisting: MatRowDef }],\n                    inputs: ['columns: matRowDefColumns', 'when: matRowDefWhen'],\n                }]\n        }] });\n/** Header template container that contains the cell outlet. Adds the right class and role. */\nclass MatHeaderRow extends CdkHeaderRow {\n}\nMatHeaderRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatHeaderRow, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatHeaderRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatHeaderRow, selector: \"mat-header-row, tr[mat-header-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-header-row\" }, providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }], exportAs: [\"matHeaderRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, directives: [{ type: i1.CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatHeaderRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-header-row, tr[mat-header-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-header-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matHeaderRow',\n                    providers: [{ provide: CdkHeaderRow, useExisting: MatHeaderRow }],\n                }]\n        }] });\n/** Footer template container that contains the cell outlet. Adds the right class and role. */\nclass MatFooterRow extends CdkFooterRow {\n}\nMatFooterRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFooterRow, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatFooterRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatFooterRow, selector: \"mat-footer-row, tr[mat-footer-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-footer-row\" }, providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }], exportAs: [\"matFooterRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, directives: [{ type: i1.CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatFooterRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-footer-row, tr[mat-footer-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-footer-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matFooterRow',\n                    providers: [{ provide: CdkFooterRow, useExisting: MatFooterRow }],\n                }]\n        }] });\n/** Data row template container that contains the cell outlet. Adds the right class and role. */\nclass MatRow extends CdkRow {\n}\nMatRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRow, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatRow.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatRow, selector: \"mat-row, tr[mat-row]\", host: { attributes: { \"role\": \"row\" }, classAttribute: \"mat-row\" }, providers: [{ provide: CdkRow, useExisting: MatRow }], exportAs: [\"matRow\"], usesInheritance: true, ngImport: i0, template: \"<ng-container cdkCellOutlet></ng-container>\", isInline: true, directives: [{ type: i1.CdkCellOutlet, selector: \"[cdkCellOutlet]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatRow, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-row, tr[mat-row]',\n                    template: CDK_ROW_TEMPLATE,\n                    host: {\n                        'class': 'mat-row',\n                        'role': 'row',\n                    },\n                    // See note on CdkTable for explanation on why this uses the default change detection strategy.\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                    encapsulation: ViewEncapsulation.None,\n                    exportAs: 'matRow',\n                    providers: [{ provide: CdkRow, useExisting: MatRow }],\n                }]\n        }] });\n/** Row that can be used to display a message when no data is shown in the table. */\nclass MatNoDataRow extends CdkNoDataRow {\n    constructor() {\n        super(...arguments);\n        this._contentClassName = 'mat-no-data-row';\n    }\n}\nMatNoDataRow.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatNoDataRow, deps: null, target: i0.ɵɵFactoryTarget.Directive });\nMatNoDataRow.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatNoDataRow, selector: \"ng-template[matNoDataRow]\", providers: [{ provide: CdkNoDataRow, useExisting: MatNoDataRow }], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatNoDataRow, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'ng-template[matNoDataRow]',\n                    providers: [{ provide: CdkNoDataRow, useExisting: MatNoDataRow }],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Column that simply shows text content for the header and row cells. Assumes that the table\n * is using the native table implementation (`<table>`).\n *\n * By default, the name of this column will be the header text and data property accessor.\n * The header text can be overridden with the `headerText` input. Cell values can be overridden with\n * the `dataAccessor` input. Change the text justification to the start or end using the `justify`\n * input.\n */\nclass MatTextColumn extends CdkTextColumn {\n}\nMatTextColumn.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTextColumn, deps: null, target: i0.ɵɵFactoryTarget.Component });\nMatTextColumn.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTextColumn, selector: \"mat-text-column\", usesInheritance: true, ngImport: i0, template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `, isInline: true, directives: [{ type: MatColumnDef, selector: \"[matColumnDef]\", inputs: [\"sticky\", \"matColumnDef\"] }, { type: MatHeaderCellDef, selector: \"[matHeaderCellDef]\" }, { type: MatHeaderCell, selector: \"mat-header-cell, th[mat-header-cell]\" }, { type: MatCellDef, selector: \"[matCellDef]\" }, { type: MatCell, selector: \"mat-cell, td[mat-cell]\" }], changeDetection: i0.ChangeDetectionStrategy.Default, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTextColumn, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'mat-text-column',\n                    template: `\n    <ng-container matColumnDef>\n      <th mat-header-cell *matHeaderCellDef [style.text-align]=\"justify\">\n        {{headerText}}\n      </th>\n      <td mat-cell *matCellDef=\"let data\" [style.text-align]=\"justify\">\n        {{dataAccessor(data, name)}}\n      </td>\n    </ng-container>\n  `,\n                    encapsulation: ViewEncapsulation.None,\n                    // Change detection is intentionally not set to OnPush. This component's template will be provided\n                    // to the table to be inserted into its view. This is problematic when change detection runs since\n                    // the bindings in this template will be evaluated _after_ the table's view is evaluated, which\n                    // mean's the template in the table's view will not have the updated value (and in fact will cause\n                    // an ExpressionChangedAfterItHasBeenCheckedError).\n                    // tslint:disable-next-line:validate-decorators\n                    changeDetection: ChangeDetectionStrategy.Default,\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst EXPORTED_DECLARATIONS = [\n    // Table\n    MatTable,\n    MatRecycleRows,\n    // Template defs\n    MatHeaderCellDef,\n    MatHeaderRowDef,\n    MatColumnDef,\n    MatCellDef,\n    MatRowDef,\n    MatFooterCellDef,\n    MatFooterRowDef,\n    // Cell directives\n    MatHeaderCell,\n    MatCell,\n    MatFooterCell,\n    // Row directives\n    MatHeaderRow,\n    MatRow,\n    MatFooterRow,\n    MatNoDataRow,\n    MatTextColumn,\n];\nclass MatTableModule {\n}\nMatTableModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTableModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatTableModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTableModule, declarations: [\n        // Table\n        MatTable,\n        MatRecycleRows,\n        // Template defs\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        // Cell directives\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        // Row directives\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatNoDataRow,\n        MatTextColumn\n    ], imports: [CdkTableModule, MatCommonModule], exports: [MatCommonModule,\n        // Table\n        MatTable,\n        MatRecycleRows,\n        // Template defs\n        MatHeaderCellDef,\n        MatHeaderRowDef,\n        MatColumnDef,\n        MatCellDef,\n        MatRowDef,\n        MatFooterCellDef,\n        MatFooterRowDef,\n        // Cell directives\n        MatHeaderCell,\n        MatCell,\n        MatFooterCell,\n        // Row directives\n        MatHeaderRow,\n        MatRow,\n        MatFooterRow,\n        MatNoDataRow,\n        MatTextColumn] });\nMatTableModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTableModule, imports: [[CdkTableModule, MatCommonModule], MatCommonModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTableModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [CdkTableModule, MatCommonModule],\n                    exports: [MatCommonModule, EXPORTED_DECLARATIONS],\n                    declarations: EXPORTED_DECLARATIONS,\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Corresponds to `Number.MAX_SAFE_INTEGER`. Moved out into a variable here due to\n * flaky browser support and the value not being defined in Closure's typings.\n */\nconst MAX_SAFE_INTEGER = 9007199254740991;\n/** Shared base class with MDC-based implementation. */\nclass _MatTableDataSource extends DataSource {\n    constructor(initialData = []) {\n        super();\n        /** Stream emitting render data to the table (depends on ordered data changes). */\n        this._renderData = new BehaviorSubject([]);\n        /** Stream that emits when a new filter string is set on the data source. */\n        this._filter = new BehaviorSubject('');\n        /** Used to react to internal changes of the paginator that are made by the data source itself. */\n        this._internalPageChanges = new Subject();\n        /**\n         * Subscription to the changes that should trigger an update to the table's rendered rows, such\n         * as filtering, sorting, pagination, or base data changes.\n         */\n        this._renderChangesSubscription = null;\n        /**\n         * Data accessor function that is used for accessing data properties for sorting through\n         * the default sortData function.\n         * This default function assumes that the sort header IDs (which defaults to the column name)\n         * matches the data's properties (e.g. column Xyz represents data['Xyz']).\n         * May be set to a custom function for different behavior.\n         * @param data Data object that is being accessed.\n         * @param sortHeaderId The name of the column that represents the data.\n         */\n        this.sortingDataAccessor = (data, sortHeaderId) => {\n            const value = data[sortHeaderId];\n            if (_isNumberValue(value)) {\n                const numberValue = Number(value);\n                // Numbers beyond `MAX_SAFE_INTEGER` can't be compared reliably so we\n                // leave them as strings. For more info: https://goo.gl/y5vbSg\n                return numberValue < MAX_SAFE_INTEGER ? numberValue : value;\n            }\n            return value;\n        };\n        /**\n         * Gets a sorted copy of the data array based on the state of the MatSort. Called\n         * after changes are made to the filtered data or when sort changes are emitted from MatSort.\n         * By default, the function retrieves the active sort and its direction and compares data\n         * by retrieving data using the sortingDataAccessor. May be overridden for a custom implementation\n         * of data ordering.\n         * @param data The array of data that should be sorted.\n         * @param sort The connected MatSort that holds the current sort state.\n         */\n        this.sortData = (data, sort) => {\n            const active = sort.active;\n            const direction = sort.direction;\n            if (!active || direction == '') {\n                return data;\n            }\n            return data.sort((a, b) => {\n                let valueA = this.sortingDataAccessor(a, active);\n                let valueB = this.sortingDataAccessor(b, active);\n                // If there are data in the column that can be converted to a number,\n                // it must be ensured that the rest of the data\n                // is of the same type so as not to order incorrectly.\n                const valueAType = typeof valueA;\n                const valueBType = typeof valueB;\n                if (valueAType !== valueBType) {\n                    if (valueAType === 'number') {\n                        valueA += '';\n                    }\n                    if (valueBType === 'number') {\n                        valueB += '';\n                    }\n                }\n                // If both valueA and valueB exist (truthy), then compare the two. Otherwise, check if\n                // one value exists while the other doesn't. In this case, existing value should come last.\n                // This avoids inconsistent results when comparing values to undefined/null.\n                // If neither value exists, return 0 (equal).\n                let comparatorResult = 0;\n                if (valueA != null && valueB != null) {\n                    // Check if one value is greater than the other; if equal, comparatorResult should remain 0.\n                    if (valueA > valueB) {\n                        comparatorResult = 1;\n                    }\n                    else if (valueA < valueB) {\n                        comparatorResult = -1;\n                    }\n                }\n                else if (valueA != null) {\n                    comparatorResult = 1;\n                }\n                else if (valueB != null) {\n                    comparatorResult = -1;\n                }\n                return comparatorResult * (direction == 'asc' ? 1 : -1);\n            });\n        };\n        /**\n         * Checks if a data object matches the data source's filter string. By default, each data object\n         * is converted to a string of its properties and returns true if the filter has\n         * at least one occurrence in that string. By default, the filter string has its whitespace\n         * trimmed and the match is case-insensitive. May be overridden for a custom implementation of\n         * filter matching.\n         * @param data Data object used to check against the filter.\n         * @param filter Filter string that has been set on the data source.\n         * @returns Whether the filter matches against the data\n         */\n        this.filterPredicate = (data, filter) => {\n            // Transform the data into a lowercase string of all property values.\n            const dataStr = Object.keys(data)\n                .reduce((currentTerm, key) => {\n                // Use an obscure Unicode character to delimit the words in the concatenated string.\n                // This avoids matches where the values of two columns combined will match the user's query\n                // (e.g. `Flute` and `Stop` will match `Test`). The character is intended to be something\n                // that has a very low chance of being typed in by somebody in a text field. This one in\n                // particular is \"White up-pointing triangle with dot\" from\n                // https://en.wikipedia.org/wiki/List_of_Unicode_characters\n                return currentTerm + data[key] + '◬';\n            }, '')\n                .toLowerCase();\n            // Transform the filter by converting it to lowercase and removing whitespace.\n            const transformedFilter = filter.trim().toLowerCase();\n            return dataStr.indexOf(transformedFilter) != -1;\n        };\n        this._data = new BehaviorSubject(initialData);\n        this._updateChangeSubscription();\n    }\n    /** Array of data that should be rendered by the table, where each object represents one row. */\n    get data() {\n        return this._data.value;\n    }\n    set data(data) {\n        data = Array.isArray(data) ? data : [];\n        this._data.next(data);\n        // Normally the `filteredData` is updated by the re-render\n        // subscription, but that won't happen if it's inactive.\n        if (!this._renderChangesSubscription) {\n            this._filterData(data);\n        }\n    }\n    /**\n     * Filter term that should be used to filter out objects from the data array. To override how\n     * data objects match to this filter string, provide a custom function for filterPredicate.\n     */\n    get filter() {\n        return this._filter.value;\n    }\n    set filter(filter) {\n        this._filter.next(filter);\n        // Normally the `filteredData` is updated by the re-render\n        // subscription, but that won't happen if it's inactive.\n        if (!this._renderChangesSubscription) {\n            this._filterData(this.data);\n        }\n    }\n    /**\n     * Instance of the MatSort directive used by the table to control its sorting. Sort changes\n     * emitted by the MatSort will trigger an update to the table's rendered data.\n     */\n    get sort() {\n        return this._sort;\n    }\n    set sort(sort) {\n        this._sort = sort;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Instance of the MatPaginator component used by the table to control what page of the data is\n     * displayed. Page changes emitted by the MatPaginator will trigger an update to the\n     * table's rendered data.\n     *\n     * Note that the data source uses the paginator's properties to calculate which page of data\n     * should be displayed. If the paginator receives its properties as template inputs,\n     * e.g. `[pageLength]=100` or `[pageIndex]=1`, then be sure that the paginator's view has been\n     * initialized before assigning it to this data source.\n     */\n    get paginator() {\n        return this._paginator;\n    }\n    set paginator(paginator) {\n        this._paginator = paginator;\n        this._updateChangeSubscription();\n    }\n    /**\n     * Subscribe to changes that should trigger an update to the table's rendered rows. When the\n     * changes occur, process the current state of the filter, sort, and pagination along with\n     * the provided base data and send it to the table for rendering.\n     */\n    _updateChangeSubscription() {\n        var _a;\n        // Sorting and/or pagination should be watched if MatSort and/or MatPaginator are provided.\n        // The events should emit whenever the component emits a change or initializes, or if no\n        // component is provided, a stream with just a null event should be provided.\n        // The `sortChange` and `pageChange` acts as a signal to the combineLatests below so that the\n        // pipeline can progress to the next step. Note that the value from these streams are not used,\n        // they purely act as a signal to progress in the pipeline.\n        const sortChange = this._sort\n            ? merge(this._sort.sortChange, this._sort.initialized)\n            : of(null);\n        const pageChange = this._paginator\n            ? merge(this._paginator.page, this._internalPageChanges, this._paginator.initialized)\n            : of(null);\n        const dataStream = this._data;\n        // Watch for base data or filter changes to provide a filtered set of data.\n        const filteredData = combineLatest([dataStream, this._filter]).pipe(map(([data]) => this._filterData(data)));\n        // Watch for filtered data or sort changes to provide an ordered set of data.\n        const orderedData = combineLatest([filteredData, sortChange]).pipe(map(([data]) => this._orderData(data)));\n        // Watch for ordered data or page changes to provide a paged set of data.\n        const paginatedData = combineLatest([orderedData, pageChange]).pipe(map(([data]) => this._pageData(data)));\n        // Watched for paged data changes and send the result to the table to render.\n        (_a = this._renderChangesSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        this._renderChangesSubscription = paginatedData.subscribe(data => this._renderData.next(data));\n    }\n    /**\n     * Returns a filtered data array where each filter object contains the filter string within\n     * the result of the filterTermAccessor function. If no filter is set, returns the data array\n     * as provided.\n     */\n    _filterData(data) {\n        // If there is a filter string, filter out data that does not contain it.\n        // Each data object is converted to a string using the function defined by filterTermAccessor.\n        // May be overridden for customization.\n        this.filteredData =\n            this.filter == null || this.filter === ''\n                ? data\n                : data.filter(obj => this.filterPredicate(obj, this.filter));\n        if (this.paginator) {\n            this._updatePaginator(this.filteredData.length);\n        }\n        return this.filteredData;\n    }\n    /**\n     * Returns a sorted copy of the data if MatSort has a sort applied, otherwise just returns the\n     * data array as provided. Uses the default data accessor for data lookup, unless a\n     * sortDataAccessor function is defined.\n     */\n    _orderData(data) {\n        // If there is no active sort or direction, return the data without trying to sort.\n        if (!this.sort) {\n            return data;\n        }\n        return this.sortData(data.slice(), this.sort);\n    }\n    /**\n     * Returns a paged slice of the provided data array according to the provided MatPaginator's page\n     * index and length. If there is no paginator provided, returns the data array as provided.\n     */\n    _pageData(data) {\n        if (!this.paginator) {\n            return data;\n        }\n        const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n        return data.slice(startIndex, startIndex + this.paginator.pageSize);\n    }\n    /**\n     * Updates the paginator to reflect the length of the filtered data, and makes sure that the page\n     * index does not exceed the paginator's last page. Values are changed in a resolved promise to\n     * guard against making property changes within a round of change detection.\n     */\n    _updatePaginator(filteredDataLength) {\n        Promise.resolve().then(() => {\n            const paginator = this.paginator;\n            if (!paginator) {\n                return;\n            }\n            paginator.length = filteredDataLength;\n            // If the page index is set beyond the page, reduce it to the last page.\n            if (paginator.pageIndex > 0) {\n                const lastPageIndex = Math.ceil(paginator.length / paginator.pageSize) - 1 || 0;\n                const newPageIndex = Math.min(paginator.pageIndex, lastPageIndex);\n                if (newPageIndex !== paginator.pageIndex) {\n                    paginator.pageIndex = newPageIndex;\n                    // Since the paginator only emits after user-generated changes,\n                    // we need our own stream so we know to should re-render the data.\n                    this._internalPageChanges.next();\n                }\n            }\n        });\n    }\n    /**\n     * Used by the MatTable. Called when it connects to the data source.\n     * @docs-private\n     */\n    connect() {\n        if (!this._renderChangesSubscription) {\n            this._updateChangeSubscription();\n        }\n        return this._renderData;\n    }\n    /**\n     * Used by the MatTable. Called when it disconnects from the data source.\n     * @docs-private\n     */\n    disconnect() {\n        var _a;\n        (_a = this._renderChangesSubscription) === null || _a === void 0 ? void 0 : _a.unsubscribe();\n        this._renderChangesSubscription = null;\n    }\n}\n/**\n * Data source that accepts a client-side data array and includes native support of filtering,\n * sorting (using MatSort), and pagination (using MatPaginator).\n *\n * Allows for sort customization by overriding sortingDataAccessor, which defines how data\n * properties are accessed. Also allows for filter customization by overriding filterTermAccessor,\n * which defines how row data is converted to a string for filter matching.\n *\n * **Note:** This class is meant to be a simple data source to help you get started. As such\n * it isn't equipped to handle some more advanced cases like robust i18n support or server-side\n * interactions. If your app needs to support more advanced use cases, consider implementing your\n * own `DataSource`.\n */\nclass MatTableDataSource extends _MatTableDataSource {\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MatCell, MatCellDef, MatColumnDef, MatFooterCell, MatFooterCellDef, MatFooterRow, MatFooterRowDef, MatHeaderCell, MatHeaderCellDef, MatHeaderRow, MatHeaderRowDef, MatNoDataRow, MatRecycleRows, MatRow, MatRowDef, MatTable, MatTableDataSource, MatTableModule, MatTextColumn, _MatTableDataSource };\n","import * as i1 from '@angular/cdk/overlay';\nimport { Overlay, OverlayModule } from '@angular/cdk/overlay';\nimport * as i4 from '@angular/cdk/a11y';\nimport { A11yModule } from '@angular/cdk/a11y';\nimport * as i7 from '@angular/common';\nimport { DOCUMENT, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Directive, Inject, Input, Optional, Component, ViewEncapsulation, ChangeDetectionStrategy, ViewChild, NgModule } from '@angular/core';\nimport { MatCommonModule } from '@angular/material/core';\nimport * as i2 from '@angular/cdk/scrolling';\nimport { CdkScrollableModule } from '@angular/cdk/scrolling';\nimport { coerceBooleanProperty, coerceNumberProperty } from '@angular/cdk/coercion';\nimport { ESCAPE, hasModifierKey } from '@angular/cdk/keycodes';\nimport * as i6 from '@angular/cdk/layout';\nimport { Breakpoints } from '@angular/cdk/layout';\nimport * as i3 from '@angular/cdk/platform';\nimport { normalizePassiveListenerOptions } from '@angular/cdk/platform';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { ANIMATION_MODULE_TYPE } from '@angular/platform-browser/animations';\nimport { Subject } from 'rxjs';\nimport { takeUntil, take } from 'rxjs/operators';\nimport * as i5 from '@angular/cdk/bidi';\nimport { trigger, state, style, transition, animate, keyframes } from '@angular/animations';\n\n/** Time in ms to throttle repositioning after scroll events. */\nconst SCROLL_THROTTLE_MS = 20;\n/**\n * CSS class that will be attached to the overlay panel.\n * @deprecated\n * @breaking-change 13.0.0 remove this variable\n */\nconst TOOLTIP_PANEL_CLASS = 'mat-tooltip-panel';\nconst PANEL_CLASS = 'tooltip-panel';\n/** Options used to bind passive event listeners. */\nconst passiveListenerOptions = normalizePassiveListenerOptions({ passive: true });\n/**\n * Time between the user putting the pointer on a tooltip\n * trigger and the long press event being fired.\n */\nconst LONGPRESS_DELAY = 500;\n/**\n * Creates an error to be thrown if the user supplied an invalid tooltip position.\n * @docs-private\n */\nfunction getMatTooltipInvalidPositionError(position) {\n    return Error(`Tooltip position \"${position}\" is invalid.`);\n}\n/** Injection token that determines the scroll handling while a tooltip is visible. */\nconst MAT_TOOLTIP_SCROLL_STRATEGY = new InjectionToken('mat-tooltip-scroll-strategy');\n/** @docs-private */\nfunction MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY(overlay) {\n    return () => overlay.scrollStrategies.reposition({ scrollThrottle: SCROLL_THROTTLE_MS });\n}\n/** @docs-private */\nconst MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER = {\n    provide: MAT_TOOLTIP_SCROLL_STRATEGY,\n    deps: [Overlay],\n    useFactory: MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY,\n};\n/** Injection token to be used to override the default options for `matTooltip`. */\nconst MAT_TOOLTIP_DEFAULT_OPTIONS = new InjectionToken('mat-tooltip-default-options', {\n    providedIn: 'root',\n    factory: MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY,\n});\n/** @docs-private */\nfunction MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY() {\n    return {\n        showDelay: 0,\n        hideDelay: 0,\n        touchendHideDelay: 1500,\n    };\n}\nclass _MatTooltipBase {\n    constructor(_overlay, _elementRef, _scrollDispatcher, _viewContainerRef, _ngZone, _platform, _ariaDescriber, _focusMonitor, scrollStrategy, _dir, _defaultOptions, _document) {\n        this._overlay = _overlay;\n        this._elementRef = _elementRef;\n        this._scrollDispatcher = _scrollDispatcher;\n        this._viewContainerRef = _viewContainerRef;\n        this._ngZone = _ngZone;\n        this._platform = _platform;\n        this._ariaDescriber = _ariaDescriber;\n        this._focusMonitor = _focusMonitor;\n        this._dir = _dir;\n        this._defaultOptions = _defaultOptions;\n        this._position = 'below';\n        this._disabled = false;\n        this._viewInitialized = false;\n        this._pointerExitEventsInitialized = false;\n        this._viewportMargin = 8;\n        this._cssClassPrefix = 'mat';\n        this._showDelay = this._defaultOptions.showDelay;\n        this._hideDelay = this._defaultOptions.hideDelay;\n        /**\n         * How touch gestures should be handled by the tooltip. On touch devices the tooltip directive\n         * uses a long press gesture to show and hide, however it can conflict with the native browser\n         * gestures. To work around the conflict, Angular Material disables native gestures on the\n         * trigger, but that might not be desirable on particular elements (e.g. inputs and draggable\n         * elements). The different values for this option configure the touch event handling as follows:\n         * - `auto` - Enables touch gestures for all elements, but tries to avoid conflicts with native\n         *   browser gestures on particular elements. In particular, it allows text selection on inputs\n         *   and textareas, and preserves the native browser dragging on elements marked as `draggable`.\n         * - `on` - Enables touch gestures for all elements and disables native\n         *   browser gestures with no exceptions.\n         * - `off` - Disables touch gestures. Note that this will prevent the tooltip from\n         *   showing on touch devices.\n         */\n        this.touchGestures = 'auto';\n        this._message = '';\n        /** Manually-bound passive event listeners. */\n        this._passiveListeners = [];\n        /** Emits when the component is destroyed. */\n        this._destroyed = new Subject();\n        this._scrollStrategy = scrollStrategy;\n        this._document = _document;\n        if (_defaultOptions) {\n            if (_defaultOptions.position) {\n                this.position = _defaultOptions.position;\n            }\n            if (_defaultOptions.touchGestures) {\n                this.touchGestures = _defaultOptions.touchGestures;\n            }\n        }\n        _dir.change.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            if (this._overlayRef) {\n                this._updatePosition(this._overlayRef);\n            }\n        });\n    }\n    /** Allows the user to define the position of the tooltip relative to the parent element */\n    get position() {\n        return this._position;\n    }\n    set position(value) {\n        var _a;\n        if (value !== this._position) {\n            this._position = value;\n            if (this._overlayRef) {\n                this._updatePosition(this._overlayRef);\n                (_a = this._tooltipInstance) === null || _a === void 0 ? void 0 : _a.show(0);\n                this._overlayRef.updatePosition();\n            }\n        }\n    }\n    /** Disables the display of the tooltip. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = coerceBooleanProperty(value);\n        // If tooltip is disabled, hide immediately.\n        if (this._disabled) {\n            this.hide(0);\n        }\n        else {\n            this._setupPointerEnterEventsIfNeeded();\n        }\n    }\n    /** The default delay in ms before showing the tooltip after show is called */\n    get showDelay() {\n        return this._showDelay;\n    }\n    set showDelay(value) {\n        this._showDelay = coerceNumberProperty(value);\n    }\n    /** The default delay in ms before hiding the tooltip after hide is called */\n    get hideDelay() {\n        return this._hideDelay;\n    }\n    set hideDelay(value) {\n        this._hideDelay = coerceNumberProperty(value);\n        if (this._tooltipInstance) {\n            this._tooltipInstance._mouseLeaveHideDelay = this._hideDelay;\n        }\n    }\n    /** The message to be displayed in the tooltip */\n    get message() {\n        return this._message;\n    }\n    set message(value) {\n        this._ariaDescriber.removeDescription(this._elementRef.nativeElement, this._message, 'tooltip');\n        // If the message is not a string (e.g. number), convert it to a string and trim it.\n        // Must convert with `String(value)`, not `${value}`, otherwise Closure Compiler optimises\n        // away the string-conversion: https://github.com/angular/components/issues/20684\n        this._message = value != null ? String(value).trim() : '';\n        if (!this._message && this._isTooltipVisible()) {\n            this.hide(0);\n        }\n        else {\n            this._setupPointerEnterEventsIfNeeded();\n            this._updateTooltipMessage();\n            this._ngZone.runOutsideAngular(() => {\n                // The `AriaDescriber` has some functionality that avoids adding a description if it's the\n                // same as the `aria-label` of an element, however we can't know whether the tooltip trigger\n                // has a data-bound `aria-label` or when it'll be set for the first time. We can avoid the\n                // issue by deferring the description by a tick so Angular has time to set the `aria-label`.\n                Promise.resolve().then(() => {\n                    this._ariaDescriber.describe(this._elementRef.nativeElement, this.message, 'tooltip');\n                });\n            });\n        }\n    }\n    /** Classes to be passed to the tooltip. Supports the same syntax as `ngClass`. */\n    get tooltipClass() {\n        return this._tooltipClass;\n    }\n    set tooltipClass(value) {\n        this._tooltipClass = value;\n        if (this._tooltipInstance) {\n            this._setTooltipClass(this._tooltipClass);\n        }\n    }\n    ngAfterViewInit() {\n        // This needs to happen after view init so the initial values for all inputs have been set.\n        this._viewInitialized = true;\n        this._setupPointerEnterEventsIfNeeded();\n        this._focusMonitor\n            .monitor(this._elementRef)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(origin => {\n            // Note that the focus monitor runs outside the Angular zone.\n            if (!origin) {\n                this._ngZone.run(() => this.hide(0));\n            }\n            else if (origin === 'keyboard') {\n                this._ngZone.run(() => this.show());\n            }\n        });\n    }\n    /**\n     * Dispose the tooltip when destroyed.\n     */\n    ngOnDestroy() {\n        const nativeElement = this._elementRef.nativeElement;\n        clearTimeout(this._touchstartTimeout);\n        if (this._overlayRef) {\n            this._overlayRef.dispose();\n            this._tooltipInstance = null;\n        }\n        // Clean up the event listeners set in the constructor\n        this._passiveListeners.forEach(([event, listener]) => {\n            nativeElement.removeEventListener(event, listener, passiveListenerOptions);\n        });\n        this._passiveListeners.length = 0;\n        this._destroyed.next();\n        this._destroyed.complete();\n        this._ariaDescriber.removeDescription(nativeElement, this.message, 'tooltip');\n        this._focusMonitor.stopMonitoring(nativeElement);\n    }\n    /** Shows the tooltip after the delay in ms, defaults to tooltip-delay-show or 0ms if no input */\n    show(delay = this.showDelay) {\n        if (this.disabled ||\n            !this.message ||\n            (this._isTooltipVisible() &&\n                !this._tooltipInstance._showTimeoutId &&\n                !this._tooltipInstance._hideTimeoutId)) {\n            return;\n        }\n        const overlayRef = this._createOverlay();\n        this._detach();\n        this._portal =\n            this._portal || new ComponentPortal(this._tooltipComponent, this._viewContainerRef);\n        const instance = (this._tooltipInstance = overlayRef.attach(this._portal).instance);\n        instance._triggerElement = this._elementRef.nativeElement;\n        instance._mouseLeaveHideDelay = this._hideDelay;\n        instance\n            .afterHidden()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._setTooltipClass(this._tooltipClass);\n        this._updateTooltipMessage();\n        instance.show(delay);\n    }\n    /** Hides the tooltip after the delay in ms, defaults to tooltip-delay-hide or 0ms if no input */\n    hide(delay = this.hideDelay) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.hide(delay);\n        }\n    }\n    /** Shows/hides the tooltip */\n    toggle() {\n        this._isTooltipVisible() ? this.hide() : this.show();\n    }\n    /** Returns true if the tooltip is currently visible to the user */\n    _isTooltipVisible() {\n        return !!this._tooltipInstance && this._tooltipInstance.isVisible();\n    }\n    /** Create the overlay config and position strategy */\n    _createOverlay() {\n        var _a;\n        if (this._overlayRef) {\n            return this._overlayRef;\n        }\n        const scrollableAncestors = this._scrollDispatcher.getAncestorScrollContainers(this._elementRef);\n        // Create connected position strategy that listens for scroll events to reposition.\n        const strategy = this._overlay\n            .position()\n            .flexibleConnectedTo(this._elementRef)\n            .withTransformOriginOn(`.${this._cssClassPrefix}-tooltip`)\n            .withFlexibleDimensions(false)\n            .withViewportMargin(this._viewportMargin)\n            .withScrollableContainers(scrollableAncestors);\n        strategy.positionChanges.pipe(takeUntil(this._destroyed)).subscribe(change => {\n            this._updateCurrentPositionClass(change.connectionPair);\n            if (this._tooltipInstance) {\n                if (change.scrollableViewProperties.isOverlayClipped && this._tooltipInstance.isVisible()) {\n                    // After position changes occur and the overlay is clipped by\n                    // a parent scrollable then close the tooltip.\n                    this._ngZone.run(() => this.hide(0));\n                }\n            }\n        });\n        this._overlayRef = this._overlay.create({\n            direction: this._dir,\n            positionStrategy: strategy,\n            panelClass: `${this._cssClassPrefix}-${PANEL_CLASS}`,\n            scrollStrategy: this._scrollStrategy(),\n        });\n        this._updatePosition(this._overlayRef);\n        this._overlayRef\n            .detachments()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this._detach());\n        this._overlayRef\n            .outsidePointerEvents()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => { var _a; return (_a = this._tooltipInstance) === null || _a === void 0 ? void 0 : _a._handleBodyInteraction(); });\n        this._overlayRef\n            .keydownEvents()\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(event => {\n            if (this._isTooltipVisible() && event.keyCode === ESCAPE && !hasModifierKey(event)) {\n                event.preventDefault();\n                event.stopPropagation();\n                this._ngZone.run(() => this.hide(0));\n            }\n        });\n        if ((_a = this._defaultOptions) === null || _a === void 0 ? void 0 : _a.disableTooltipInteractivity) {\n            this._overlayRef.addPanelClass(`${this._cssClassPrefix}-tooltip-panel-non-interactive`);\n        }\n        return this._overlayRef;\n    }\n    /** Detaches the currently-attached tooltip. */\n    _detach() {\n        if (this._overlayRef && this._overlayRef.hasAttached()) {\n            this._overlayRef.detach();\n        }\n        this._tooltipInstance = null;\n    }\n    /** Updates the position of the current tooltip. */\n    _updatePosition(overlayRef) {\n        const position = overlayRef.getConfig().positionStrategy;\n        const origin = this._getOrigin();\n        const overlay = this._getOverlayPosition();\n        position.withPositions([\n            this._addOffset(Object.assign(Object.assign({}, origin.main), overlay.main)),\n            this._addOffset(Object.assign(Object.assign({}, origin.fallback), overlay.fallback)),\n        ]);\n    }\n    /** Adds the configured offset to a position. Used as a hook for child classes. */\n    _addOffset(position) {\n        return position;\n    }\n    /**\n     * Returns the origin position and a fallback position based on the user's position preference.\n     * The fallback position is the inverse of the origin (e.g. `'below' -> 'above'`).\n     */\n    _getOrigin() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let originPosition;\n        if (position == 'above' || position == 'below') {\n            originPosition = { originX: 'center', originY: position == 'above' ? 'top' : 'bottom' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            originPosition = { originX: 'start', originY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            originPosition = { originX: 'end', originY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(originPosition.originX, originPosition.originY);\n        return {\n            main: originPosition,\n            fallback: { originX: x, originY: y },\n        };\n    }\n    /** Returns the overlay position and a fallback position based on the user's preference */\n    _getOverlayPosition() {\n        const isLtr = !this._dir || this._dir.value == 'ltr';\n        const position = this.position;\n        let overlayPosition;\n        if (position == 'above') {\n            overlayPosition = { overlayX: 'center', overlayY: 'bottom' };\n        }\n        else if (position == 'below') {\n            overlayPosition = { overlayX: 'center', overlayY: 'top' };\n        }\n        else if (position == 'before' ||\n            (position == 'left' && isLtr) ||\n            (position == 'right' && !isLtr)) {\n            overlayPosition = { overlayX: 'end', overlayY: 'center' };\n        }\n        else if (position == 'after' ||\n            (position == 'right' && isLtr) ||\n            (position == 'left' && !isLtr)) {\n            overlayPosition = { overlayX: 'start', overlayY: 'center' };\n        }\n        else if (typeof ngDevMode === 'undefined' || ngDevMode) {\n            throw getMatTooltipInvalidPositionError(position);\n        }\n        const { x, y } = this._invertPosition(overlayPosition.overlayX, overlayPosition.overlayY);\n        return {\n            main: overlayPosition,\n            fallback: { overlayX: x, overlayY: y },\n        };\n    }\n    /** Updates the tooltip message and repositions the overlay according to the new message length */\n    _updateTooltipMessage() {\n        // Must wait for the message to be painted to the tooltip so that the overlay can properly\n        // calculate the correct positioning based on the size of the text.\n        if (this._tooltipInstance) {\n            this._tooltipInstance.message = this.message;\n            this._tooltipInstance._markForCheck();\n            this._ngZone.onMicrotaskEmpty.pipe(take(1), takeUntil(this._destroyed)).subscribe(() => {\n                if (this._tooltipInstance) {\n                    this._overlayRef.updatePosition();\n                }\n            });\n        }\n    }\n    /** Updates the tooltip class */\n    _setTooltipClass(tooltipClass) {\n        if (this._tooltipInstance) {\n            this._tooltipInstance.tooltipClass = tooltipClass;\n            this._tooltipInstance._markForCheck();\n        }\n    }\n    /** Inverts an overlay position. */\n    _invertPosition(x, y) {\n        if (this.position === 'above' || this.position === 'below') {\n            if (y === 'top') {\n                y = 'bottom';\n            }\n            else if (y === 'bottom') {\n                y = 'top';\n            }\n        }\n        else {\n            if (x === 'end') {\n                x = 'start';\n            }\n            else if (x === 'start') {\n                x = 'end';\n            }\n        }\n        return { x, y };\n    }\n    /** Updates the class on the overlay panel based on the current position of the tooltip. */\n    _updateCurrentPositionClass(connectionPair) {\n        const { overlayY, originX, originY } = connectionPair;\n        let newPosition;\n        // If the overlay is in the middle along the Y axis,\n        // it means that it's either before or after.\n        if (overlayY === 'center') {\n            // Note that since this information is used for styling, we want to\n            // resolve `start` and `end` to their real values, otherwise consumers\n            // would have to remember to do it themselves on each consumption.\n            if (this._dir && this._dir.value === 'rtl') {\n                newPosition = originX === 'end' ? 'left' : 'right';\n            }\n            else {\n                newPosition = originX === 'start' ? 'left' : 'right';\n            }\n        }\n        else {\n            newPosition = overlayY === 'bottom' && originY === 'top' ? 'above' : 'below';\n        }\n        if (newPosition !== this._currentPosition) {\n            const overlayRef = this._overlayRef;\n            if (overlayRef) {\n                const classPrefix = `${this._cssClassPrefix}-${PANEL_CLASS}-`;\n                overlayRef.removePanelClass(classPrefix + this._currentPosition);\n                overlayRef.addPanelClass(classPrefix + newPosition);\n            }\n            this._currentPosition = newPosition;\n        }\n    }\n    /** Binds the pointer events to the tooltip trigger. */\n    _setupPointerEnterEventsIfNeeded() {\n        // Optimization: Defer hooking up events if there's no message or the tooltip is disabled.\n        if (this._disabled ||\n            !this.message ||\n            !this._viewInitialized ||\n            this._passiveListeners.length) {\n            return;\n        }\n        // The mouse events shouldn't be bound on mobile devices, because they can prevent the\n        // first tap from firing its click event or can cause the tooltip to open for clicks.\n        if (this._platformSupportsMouseEvents()) {\n            this._passiveListeners.push([\n                'mouseenter',\n                () => {\n                    this._setupPointerExitEventsIfNeeded();\n                    this.show();\n                },\n            ]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            this._passiveListeners.push([\n                'touchstart',\n                () => {\n                    // Note that it's important that we don't `preventDefault` here,\n                    // because it can prevent click events from firing on the element.\n                    this._setupPointerExitEventsIfNeeded();\n                    clearTimeout(this._touchstartTimeout);\n                    this._touchstartTimeout = setTimeout(() => this.show(), LONGPRESS_DELAY);\n                },\n            ]);\n        }\n        this._addListeners(this._passiveListeners);\n    }\n    _setupPointerExitEventsIfNeeded() {\n        if (this._pointerExitEventsInitialized) {\n            return;\n        }\n        this._pointerExitEventsInitialized = true;\n        const exitListeners = [];\n        if (this._platformSupportsMouseEvents()) {\n            exitListeners.push([\n                'mouseleave',\n                event => {\n                    var _a;\n                    const newTarget = event.relatedTarget;\n                    if (!newTarget || !((_a = this._overlayRef) === null || _a === void 0 ? void 0 : _a.overlayElement.contains(newTarget))) {\n                        this.hide();\n                    }\n                },\n            ], ['wheel', event => this._wheelListener(event)]);\n        }\n        else if (this.touchGestures !== 'off') {\n            this._disableNativeGesturesIfNecessary();\n            const touchendListener = () => {\n                clearTimeout(this._touchstartTimeout);\n                this.hide(this._defaultOptions.touchendHideDelay);\n            };\n            exitListeners.push(['touchend', touchendListener], ['touchcancel', touchendListener]);\n        }\n        this._addListeners(exitListeners);\n        this._passiveListeners.push(...exitListeners);\n    }\n    _addListeners(listeners) {\n        listeners.forEach(([event, listener]) => {\n            this._elementRef.nativeElement.addEventListener(event, listener, passiveListenerOptions);\n        });\n    }\n    _platformSupportsMouseEvents() {\n        return !this._platform.IOS && !this._platform.ANDROID;\n    }\n    /** Listener for the `wheel` event on the element. */\n    _wheelListener(event) {\n        if (this._isTooltipVisible()) {\n            const elementUnderPointer = this._document.elementFromPoint(event.clientX, event.clientY);\n            const element = this._elementRef.nativeElement;\n            // On non-touch devices we depend on the `mouseleave` event to close the tooltip, but it\n            // won't fire if the user scrolls away using the wheel without moving their cursor. We\n            // work around it by finding the element under the user's cursor and closing the tooltip\n            // if it's not the trigger.\n            if (elementUnderPointer !== element && !element.contains(elementUnderPointer)) {\n                this.hide();\n            }\n        }\n    }\n    /** Disables the native browser gestures, based on how the tooltip has been configured. */\n    _disableNativeGesturesIfNecessary() {\n        const gestures = this.touchGestures;\n        if (gestures !== 'off') {\n            const element = this._elementRef.nativeElement;\n            const style = element.style;\n            // If gestures are set to `auto`, we don't disable text selection on inputs and\n            // textareas, because it prevents the user from typing into them on iOS Safari.\n            if (gestures === 'on' || (element.nodeName !== 'INPUT' && element.nodeName !== 'TEXTAREA')) {\n                style.userSelect =\n                    style.msUserSelect =\n                        style.webkitUserSelect =\n                            style.MozUserSelect =\n                                'none';\n            }\n            // If we have `auto` gestures and the element uses native HTML dragging,\n            // we don't set `-webkit-user-drag` because it prevents the native behavior.\n            if (gestures === 'on' || !element.draggable) {\n                style.webkitUserDrag = 'none';\n            }\n            style.touchAction = 'none';\n            style.webkitTapHighlightColor = 'transparent';\n        }\n    }\n}\n_MatTooltipBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTooltipBase, deps: \"invalid\", target: i0.ɵɵFactoryTarget.Directive });\n_MatTooltipBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _MatTooltipBase, inputs: { position: [\"matTooltipPosition\", \"position\"], disabled: [\"matTooltipDisabled\", \"disabled\"], showDelay: [\"matTooltipShowDelay\", \"showDelay\"], hideDelay: [\"matTooltipHideDelay\", \"hideDelay\"], touchGestures: [\"matTooltipTouchGestures\", \"touchGestures\"], message: [\"matTooltip\", \"message\"], tooltipClass: [\"matTooltipClass\", \"tooltipClass\"] }, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _MatTooltipBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i1.Overlay }, { type: i0.ElementRef }, { type: i2.ScrollDispatcher }, { type: i0.ViewContainerRef }, { type: i0.NgZone }, { type: i3.Platform }, { type: i4.AriaDescriber }, { type: i4.FocusMonitor }, { type: undefined }, { type: i5.Directionality }, { type: undefined }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    }, propDecorators: { position: [{\n                type: Input,\n                args: ['matTooltipPosition']\n            }], disabled: [{\n                type: Input,\n                args: ['matTooltipDisabled']\n            }], showDelay: [{\n                type: Input,\n                args: ['matTooltipShowDelay']\n            }], hideDelay: [{\n                type: Input,\n                args: ['matTooltipHideDelay']\n            }], touchGestures: [{\n                type: Input,\n                args: ['matTooltipTouchGestures']\n            }], message: [{\n                type: Input,\n                args: ['matTooltip']\n            }], tooltipClass: [{\n                type: Input,\n                args: ['matTooltipClass']\n            }] } });\n/**\n * Directive that attaches a material design tooltip to the host element. Animates the showing and\n * hiding of a tooltip provided position (defaults to below the element).\n *\n * https://material.io/design/components/tooltips.html\n */\nclass MatTooltip extends _MatTooltipBase {\n    constructor(overlay, elementRef, scrollDispatcher, viewContainerRef, ngZone, platform, ariaDescriber, focusMonitor, scrollStrategy, dir, defaultOptions, _document) {\n        super(overlay, elementRef, scrollDispatcher, viewContainerRef, ngZone, platform, ariaDescriber, focusMonitor, scrollStrategy, dir, defaultOptions, _document);\n        this._tooltipComponent = TooltipComponent;\n    }\n}\nMatTooltip.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTooltip, deps: [{ token: i1.Overlay }, { token: i0.ElementRef }, { token: i2.ScrollDispatcher }, { token: i0.ViewContainerRef }, { token: i0.NgZone }, { token: i3.Platform }, { token: i4.AriaDescriber }, { token: i4.FocusMonitor }, { token: MAT_TOOLTIP_SCROLL_STRATEGY }, { token: i5.Directionality, optional: true }, { token: MAT_TOOLTIP_DEFAULT_OPTIONS, optional: true }, { token: DOCUMENT }], target: i0.ɵɵFactoryTarget.Directive });\nMatTooltip.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: MatTooltip, selector: \"[matTooltip]\", host: { classAttribute: \"mat-tooltip-trigger\" }, exportAs: [\"matTooltip\"], usesInheritance: true, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTooltip, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matTooltip]',\n                    exportAs: 'matTooltip',\n                    host: {\n                        'class': 'mat-tooltip-trigger',\n                    },\n                }]\n        }], ctorParameters: function () {\n        return [{ type: i1.Overlay }, { type: i0.ElementRef }, { type: i2.ScrollDispatcher }, { type: i0.ViewContainerRef }, { type: i0.NgZone }, { type: i3.Platform }, { type: i4.AriaDescriber }, { type: i4.FocusMonitor }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [MAT_TOOLTIP_SCROLL_STRATEGY]\n                    }] }, { type: i5.Directionality, decorators: [{\n                        type: Optional\n                    }] }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [MAT_TOOLTIP_DEFAULT_OPTIONS]\n                    }] }, { type: undefined, decorators: [{\n                        type: Inject,\n                        args: [DOCUMENT]\n                    }] }];\n    } });\nclass _TooltipComponentBase {\n    constructor(_changeDetectorRef, animationMode) {\n        this._changeDetectorRef = _changeDetectorRef;\n        /** Property watched by the animation framework to show or hide the tooltip */\n        this._visibility = 'initial';\n        /** Whether interactions on the page should close the tooltip */\n        this._closeOnInteraction = false;\n        /** Whether the tooltip is currently visible. */\n        this._isVisible = false;\n        /** Subject for notifying that the tooltip has been hidden from the view */\n        this._onHide = new Subject();\n        this._animationsDisabled = animationMode === 'NoopAnimations';\n    }\n    /**\n     * Shows the tooltip with an animation originating from the provided origin\n     * @param delay Amount of milliseconds to the delay showing the tooltip.\n     */\n    show(delay) {\n        // Cancel the delayed hide if it is scheduled\n        clearTimeout(this._hideTimeoutId);\n        this._showTimeoutId = setTimeout(() => {\n            this._toggleVisibility(true);\n            this._showTimeoutId = undefined;\n        }, delay);\n    }\n    /**\n     * Begins the animation to hide the tooltip after the provided delay in ms.\n     * @param delay Amount of milliseconds to delay showing the tooltip.\n     */\n    hide(delay) {\n        // Cancel the delayed show if it is scheduled\n        clearTimeout(this._showTimeoutId);\n        this._hideTimeoutId = setTimeout(() => {\n            this._toggleVisibility(false);\n            this._hideTimeoutId = undefined;\n        }, delay);\n    }\n    /** Returns an observable that notifies when the tooltip has been hidden from view. */\n    afterHidden() {\n        return this._onHide;\n    }\n    /** Whether the tooltip is being displayed. */\n    isVisible() {\n        return this._isVisible;\n    }\n    ngOnDestroy() {\n        clearTimeout(this._showTimeoutId);\n        clearTimeout(this._hideTimeoutId);\n        this._onHide.complete();\n        this._triggerElement = null;\n    }\n    /**\n     * Interactions on the HTML body should close the tooltip immediately as defined in the\n     * material design spec.\n     * https://material.io/design/components/tooltips.html#behavior\n     */\n    _handleBodyInteraction() {\n        if (this._closeOnInteraction) {\n            this.hide(0);\n        }\n    }\n    /**\n     * Marks that the tooltip needs to be checked in the next change detection run.\n     * Mainly used for rendering the initial text before positioning a tooltip, which\n     * can be problematic in components with OnPush change detection.\n     */\n    _markForCheck() {\n        this._changeDetectorRef.markForCheck();\n    }\n    _handleMouseLeave({ relatedTarget }) {\n        if (!relatedTarget || !this._triggerElement.contains(relatedTarget)) {\n            this.hide(this._mouseLeaveHideDelay);\n        }\n    }\n    /**\n     * Callback for when the timeout in this.show() gets completed.\n     * This method is only needed by the mdc-tooltip, and so it is only implemented\n     * in the mdc-tooltip, not here.\n     */\n    _onShow() { }\n    /** Event listener dispatched when an animation on the tooltip finishes. */\n    _handleAnimationEnd({ animationName }) {\n        if (animationName === this._showAnimation || animationName === this._hideAnimation) {\n            this._finalizeAnimation(animationName === this._showAnimation);\n        }\n    }\n    /** Handles the cleanup after an animation has finished. */\n    _finalizeAnimation(toVisible) {\n        if (toVisible) {\n            this._closeOnInteraction = true;\n        }\n        else if (!this.isVisible()) {\n            this._onHide.next();\n        }\n    }\n    /** Toggles the visibility of the tooltip element. */\n    _toggleVisibility(isVisible) {\n        // We set the classes directly here ourselves so that toggling the tooltip state\n        // isn't bound by change detection. This allows us to hide it even if the\n        // view ref has been detached from the CD tree.\n        const tooltip = this._tooltip.nativeElement;\n        const showClass = this._showAnimation;\n        const hideClass = this._hideAnimation;\n        tooltip.classList.remove(isVisible ? hideClass : showClass);\n        tooltip.classList.add(isVisible ? showClass : hideClass);\n        this._isVisible = isVisible;\n        // It's common for internal apps to disable animations using `* { animation: none !important }`\n        // which can break the opening sequence. Try to detect such cases and work around them.\n        if (isVisible && !this._animationsDisabled && typeof getComputedStyle === 'function') {\n            const styles = getComputedStyle(tooltip);\n            // Use `getPropertyValue` to avoid issues with property renaming.\n            if (styles.getPropertyValue('animation-duration') === '0s' ||\n                styles.getPropertyValue('animation-name') === 'none') {\n                this._animationsDisabled = true;\n            }\n        }\n        if (isVisible) {\n            this._onShow();\n        }\n        if (this._animationsDisabled) {\n            tooltip.classList.add('_mat-animation-noopable');\n            this._finalizeAnimation(isVisible);\n        }\n    }\n}\n_TooltipComponentBase.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _TooltipComponentBase, deps: [{ token: i0.ChangeDetectorRef }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Directive });\n_TooltipComponentBase.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"12.0.0\", version: \"13.3.0\", type: _TooltipComponentBase, ngImport: i0 });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: _TooltipComponentBase, decorators: [{\n            type: Directive\n        }], ctorParameters: function () {\n        return [{ type: i0.ChangeDetectorRef }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    } });\n/**\n * Internal component that wraps the tooltip's content.\n * @docs-private\n */\nclass TooltipComponent extends _TooltipComponentBase {\n    constructor(changeDetectorRef, _breakpointObserver, animationMode) {\n        super(changeDetectorRef, animationMode);\n        this._breakpointObserver = _breakpointObserver;\n        /** Stream that emits whether the user has a handset-sized display.  */\n        this._isHandset = this._breakpointObserver.observe(Breakpoints.Handset);\n        this._showAnimation = 'mat-tooltip-show';\n        this._hideAnimation = 'mat-tooltip-hide';\n    }\n}\nTooltipComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: TooltipComponent, deps: [{ token: i0.ChangeDetectorRef }, { token: i6.BreakpointObserver }, { token: ANIMATION_MODULE_TYPE, optional: true }], target: i0.ɵɵFactoryTarget.Component });\nTooltipComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"13.3.0\", type: TooltipComponent, selector: \"mat-tooltip-component\", host: { attributes: { \"aria-hidden\": \"true\" }, listeners: { \"mouseleave\": \"_handleMouseLeave($event)\" }, properties: { \"style.zoom\": \"isVisible() ? 1 : null\" } }, viewQueries: [{ propertyName: \"_tooltip\", first: true, predicate: [\"tooltip\"], descendants: true, static: true }], usesInheritance: true, ngImport: i0, template: \"<div #tooltip\\n     class=\\\"mat-tooltip\\\"\\n     (animationend)=\\\"_handleAnimationEnd($event)\\\"\\n     [ngClass]=\\\"tooltipClass\\\"\\n     [class.mat-tooltip-handset]=\\\"(_isHandset | async)?.matches\\\">{{message}}</div>\\n\", styles: [\".mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis;transform:scale(0)}.mat-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}.mat-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-tooltip-show{0%{opacity:0;transform:scale(0)}50%{opacity:.5;transform:scale(0.99)}100%{opacity:1;transform:scale(1)}}@keyframes mat-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(1)}}.mat-tooltip-show{animation:mat-tooltip-show 200ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-tooltip-hide{animation:mat-tooltip-hide 100ms cubic-bezier(0, 0, 0.2, 1) forwards}\\n\"], directives: [{ type: i7.NgClass, selector: \"[ngClass]\", inputs: [\"class\", \"ngClass\"] }], pipes: { \"async\": i7.AsyncPipe }, changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: TooltipComponent, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-tooltip-component', encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, host: {\n                        // Forces the element to have a layout in IE and Edge. This fixes issues where the element\n                        // won't be rendered if the animations are disabled or there is no web animations polyfill.\n                        '[style.zoom]': 'isVisible() ? 1 : null',\n                        '(mouseleave)': '_handleMouseLeave($event)',\n                        'aria-hidden': 'true',\n                    }, template: \"<div #tooltip\\n     class=\\\"mat-tooltip\\\"\\n     (animationend)=\\\"_handleAnimationEnd($event)\\\"\\n     [ngClass]=\\\"tooltipClass\\\"\\n     [class.mat-tooltip-handset]=\\\"(_isHandset | async)?.matches\\\">{{message}}</div>\\n\", styles: [\".mat-tooltip{color:#fff;border-radius:4px;margin:14px;max-width:250px;padding-left:8px;padding-right:8px;overflow:hidden;text-overflow:ellipsis;transform:scale(0)}.mat-tooltip._mat-animation-noopable{animation:none;transform:scale(1)}.cdk-high-contrast-active .mat-tooltip{outline:solid 1px}.mat-tooltip-handset{margin:24px;padding-left:16px;padding-right:16px}.mat-tooltip-panel-non-interactive{pointer-events:none}@keyframes mat-tooltip-show{0%{opacity:0;transform:scale(0)}50%{opacity:.5;transform:scale(0.99)}100%{opacity:1;transform:scale(1)}}@keyframes mat-tooltip-hide{0%{opacity:1;transform:scale(1)}100%{opacity:0;transform:scale(1)}}.mat-tooltip-show{animation:mat-tooltip-show 200ms cubic-bezier(0, 0, 0.2, 1) forwards}.mat-tooltip-hide{animation:mat-tooltip-hide 100ms cubic-bezier(0, 0, 0.2, 1) forwards}\\n\"] }]\n        }], ctorParameters: function () {\n        return [{ type: i0.ChangeDetectorRef }, { type: i6.BreakpointObserver }, { type: undefined, decorators: [{\n                        type: Optional\n                    }, {\n                        type: Inject,\n                        args: [ANIMATION_MODULE_TYPE]\n                    }] }];\n    }, propDecorators: { _tooltip: [{\n                type: ViewChild,\n                args: ['tooltip', {\n                        // Use a static query here since we interact directly with\n                        // the DOM which can happen before `ngAfterViewInit`.\n                        static: true,\n                    }]\n            }] } });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass MatTooltipModule {\n}\nMatTooltipModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTooltipModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nMatTooltipModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTooltipModule, declarations: [MatTooltip, TooltipComponent], imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule], exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule] });\nMatTooltipModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTooltipModule, providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER], imports: [[A11yModule, CommonModule, OverlayModule, MatCommonModule], MatCommonModule, CdkScrollableModule] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"13.3.0\", ngImport: i0, type: MatTooltipModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [A11yModule, CommonModule, OverlayModule, MatCommonModule],\n                    exports: [MatTooltip, TooltipComponent, MatCommonModule, CdkScrollableModule],\n                    declarations: [MatTooltip, TooltipComponent],\n                    providers: [MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER],\n                }]\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Animations used by MatTooltip.\n * @docs-private\n */\nconst matTooltipAnimations = {\n    /** Animation that transitions a tooltip in and out. */\n    tooltipState: trigger('state', [\n        state('initial, void, hidden', style({ opacity: 0, transform: 'scale(0)' })),\n        state('visible', style({ transform: 'scale(1)' })),\n        transition('* => visible', animate('200ms cubic-bezier(0, 0, 0.2, 1)', keyframes([\n            style({ opacity: 0, transform: 'scale(0)', offset: 0 }),\n            style({ opacity: 0.5, transform: 'scale(0.99)', offset: 0.5 }),\n            style({ opacity: 1, transform: 'scale(1)', offset: 1 }),\n        ]))),\n        transition('* => hidden', animate('100ms cubic-bezier(0, 0, 0.2, 1)', style({ opacity: 0 }))),\n    ]),\n};\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { MAT_TOOLTIP_DEFAULT_OPTIONS, MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY, MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER, MatTooltip, MatTooltipModule, SCROLL_THROTTLE_MS, TOOLTIP_PANEL_CLASS, TooltipComponent, _MatTooltipBase, _TooltipComponentBase, getMatTooltipInvalidPositionError, matTooltipAnimations };\n"],"names":["i0","NgModule","Injectable","coerceArray","Subject","combineLatest","concat","Observable","take","skip","debounceTime","map","startWith","takeUntil","i1","LayoutModule","ɵfac","ɵmod","ɵinj","type","args","mediaQueriesForWebkitCompatibility","Set","mediaQueryStyleNode","MediaMatcher","constructor","_platform","_matchMedia","isBrowser","window","matchMedia","bind","noopMatchMedia","query","WEBKIT","BLINK","createEmptyStyleRule","Platform","ɵprov","providedIn","has","document","createElement","setAttribute","head","appendChild","sheet","insertRule","add","e","console","error","matches","media","addListener","removeListener","BreakpointObserver","_mediaMatcher","_zone","_queries","Map","_destroySubject","ngOnDestroy","next","complete","isMatched","value","queries","splitQueries","some","mediaQuery","_registerQuery","mql","observe","observables","observable","stateObservable","pipe","breakpointStates","response","breakpoints","forEach","get","queryObservable","observer","handler","run","output","set","NgZone","split","reduce","a1","a2","trim","Breakpoints","XSmall","Small","Medium","Large","XLarge","Handset","Tablet","Web","HandsetPortrait","TabletPortrait","WebPortrait","HandsetLandscape","TabletLandscape","WebLandscape","normalizePassiveListenerOptions","EventEmitter","Directive","Output","Optional","Inject","Input","coerceElement","coerceNumberProperty","coerceBooleanProperty","EMPTY","fromEvent","auditTime","DOCUMENT","listenerOptions","passive","AutofillMonitor","_ngZone","_monitoredElements","monitor","elementOrRef","element","info","subject","result","cssClass","listener","event","animationName","classList","contains","target","isAutofilled","remove","runOutsideAngular","addEventListener","unlisten","removeEventListener","stopMonitoring","delete","_info","CdkAutofill","_elementRef","_autofillMonitor","cdkAutofill","ngOnInit","subscribe","emit","ElementRef","ɵdir","selector","CdkTextareaAutosize","_destroyed","_enabled","_previousMinRows","_isViewInited","_handleFocusEvent","_hasFocus","_document","_textareaElement","nativeElement","minRows","_minRows","_setMinHeight","maxRows","_maxRows","_setMaxHeight","enabled","resizeToFitContent","reset","placeholder","_cachedPlaceholderHeight","undefined","removeAttribute","_cacheTextareaPlaceholderHeight","minHeight","_cachedLineHeight","style","maxHeight","ngAfterViewInit","_initialHeight","height","_getWindow","_cacheTextareaLineHeight","textareaClone","cloneNode","rows","position","visibility","border","padding","overflow","parentNode","clientHeight","_measureScrollHeight","previousMargin","marginBottom","isFirefox","FIREFOX","needsMarginFiller","measuringClass","scrollHeight","ngDoCheck","force","textarea","_previousValue","Math","max","requestAnimationFrame","_scrollToCaretPosition","setTimeout","_noopInputHandler","_getDocument","doc","defaultView","selectionStart","selectionEnd","isStopped","setSelectionRange","exportAs","host","decorators","TextFieldModule","declarations","exports","Component","ViewEncapsulation","ChangeDetectionStrategy","ViewChild","i2","mixinColor","mixinDisabled","mixinDisableRipple","MatRipple","MatRippleModule","MatCommonModule","ANIMATION_MODULE_TYPE","DEFAULT_ROUND_BUTTON_COLOR","BUTTON_HOST_ATTRIBUTES","_MatButtonBase","MatButton","elementRef","_focusMonitor","_animationMode","isRoundButton","_hasHostAttributes","isIconButton","attr","_getHostElement","color","focus","origin","options","focusVia","_isRippleDisabled","disableRipple","disabled","attributes","attribute","hasAttribute","FocusMonitor","ɵcmp","inputs","encapsulation","None","changeDetection","OnPush","template","styles","ripple","MatAnchor","focusMonitor","animationMode","_haltDisabledEvents","preventDefault","stopImmediatePropagation","tabIndex","MatButtonModule","imports","InjectionToken","forwardRef","Attribute","NG_VALUE_ACCESSOR","NG_VALIDATORS","CheckboxRequiredValidator","mixinTabIndex","i3","ObserversModule","MAT_CHECKBOX_DEFAULT_OPTIONS","factory","MAT_CHECKBOX_DEFAULT_OPTIONS_FACTORY","clickAction","nextUniqueId","defaults","MAT_CHECKBOX_CONTROL_VALUE_ACCESSOR","provide","useExisting","MatCheckbox","multi","MatCheckboxChange","_MatCheckboxBase","_changeDetectorRef","_options","ariaLabel","ariaLabelledby","_uniqueId","id","labelPosition","name","change","indeterminateChange","_onTouched","_currentAnimationClass","_currentCheckState","_controlValueAccessorChangeFn","_checked","_disabled","_indeterminate","defaultColor","parseInt","inputId","required","_required","focusOrigin","Promise","resolve","then","markForCheck","_syncIndeterminate","ngAfterViewChecked","checked","newValue","indeterminate","changed","_transitionCheckState","_onLabelTextChange","detectChanges","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","_getAriaChecked","newState","oldState","length","_getAnimationClassForCheckStateTransition","animationClass","_emitChangeEvent","source","_inputElement","toggle","_onInputClick","_a","stopPropagation","_onInteractionEvent","animSuffix","nativeCheckbox","ChangeDetectorRef","CdkObserveContent","providers","ariaDescribedby","MAT_CHECKBOX_REQUIRED_VALIDATOR","MatCheckboxRequiredValidator","_MatCheckboxRequiredValidatorModule","MatCheckboxModule","Version","inject","LOCALE_ID","BidiModule","VERSION","VERSION$1","CommonModule","i1$1","_isTestEnvironment","isFakeMousedownFromScreenReader","isFakeTouchstartFromScreenReader","ENTER","SPACE","hasModifierKey","AnimationCurves","STANDARD_CURVE","DECELERATION_CURVE","ACCELERATION_CURVE","SHARP_CURVE","AnimationDurations","COMPLEX","ENTERING","EXITING","MATERIAL_SANITY_CHECKS_FACTORY","MATERIAL_SANITY_CHECKS","highContrastModeDetector","_sanityChecks","_hasDoneGlobalChecks","_applyBodyHighContrastModeCssClasses","ngDevMode","_checkIsEnabled","_checkDoctypeIsDefined","_checkThemeIsPresent","_checkCdkVersionMatch","HighContrastModeDetector","Document","doctype","warn","body","getComputedStyle","testElement","computedStyle","display","full","base","_color","colorPalette","_disableRipple","defaultTabIndex","_tabIndex","mixinErrorState","stateChanges","errorState","updateErrorState","parent","_parentFormGroup","_parentForm","matcher","errorStateMatcher","_defaultErrorStateMatcher","control","ngControl","isErrorState","mixinInitialized","_isInitialized","_pendingSubscribers","initialized","subscriber","_notifySubscriber","push","_markInitialized","Error","MAT_DATE_LOCALE","MAT_DATE_LOCALE_FACTORY","DateAdapter","_localeChanges","localeChanges","getValidDateOrNull","obj","isDateInstance","isValid","deserialize","invalid","setLocale","locale","compareDate","first","second","getYear","getMonth","getDate","sameDate","firstValid","secondValid","clampDate","date","min","MAT_DATE_FORMATS","ISO_8601_REGEX","range","valueFunction","valuesArray","Array","i","NativeDateAdapter","matDateLocale","useUtcForDisplay","getFullYear","getDayOfWeek","getDay","getMonthNames","dtf","Intl","DateTimeFormat","month","timeZone","_format","Date","getDateNames","day","getDayOfWeekNames","weekday","getYearName","year","getFirstDayOfWeek","getNumDaysInMonth","_createDateWithOverflow","clone","getTime","createDate","today","parse","format","displayFormat","Object","assign","addCalendarYears","years","addCalendarMonths","months","newDate","addCalendarDays","days","toIso8601","getUTCFullYear","_2digit","getUTCMonth","getUTCDate","join","test","isNaN","NaN","d","setFullYear","setHours","n","slice","setUTCFullYear","setUTCHours","getHours","getMinutes","getSeconds","getMilliseconds","MAT_NATIVE_DATE_FORMATS","dateInput","monthYearLabel","dateA11yLabel","monthYearA11yLabel","NativeDateModule","useClass","MatNativeDateModule","useValue","ShowOnDirtyErrorStateMatcher","form","dirty","submitted","ErrorStateMatcher","touched","MatLine","setLines","lines","prefix","changes","setClass","className","isAdd","MatLineModule","RippleRef","_renderer","config","state","fadeOut","fadeOutRipple","defaultRippleAnimationConfig","enterDuration","exitDuration","ignoreMouseEventsTimeout","passiveEventOptions","pointerDownEvents","pointerUpEvents","RippleRenderer","_target","elementOrElementRef","platform","_isPointerDown","_activeRipples","_pointerUpEventsRegistered","_containerElement","fadeInRipple","x","y","containerRect","_containerRect","getBoundingClientRect","animationConfig","animation","centered","left","width","top","radius","distanceToFurthestCorner","offsetX","offsetY","duration","backgroundColor","transitionDuration","enforceStyleRecalculation","transform","rippleRef","persistent","_mostRecentTransientRipple","_runTimeoutOutsideZone","isMostRecentTransientRipple","wasActive","size","rippleEl","opacity","fadeOutAll","fadeOutAllNonPersistent","setupTriggerEvents","_triggerElement","_removeTriggerEvents","_registerEvents","handleEvent","_onMousedown","_onTouchStart","_onPointerUp","isFakeMousedown","isSyntheticEvent","_lastTouchStartEvent","now","rippleDisabled","clientX","clientY","rippleConfig","touches","changedTouches","isVisible","terminateOnPointerUp","delay","eventTypes","getPropertyValue","rect","distX","abs","right","distY","bottom","sqrt","MAT_RIPPLE_GLOBAL_OPTIONS","ngZone","globalOptions","_globalOptions","_rippleRenderer","_setupTriggerEventsIfEnabled","trigger","_trigger","launch","configOrX","unbounded","MatPseudoCheckbox","MatPseudoCheckboxModule","MAT_OPTION_PARENT_COMPONENT","_MatOptgroupMixinBase","_uniqueOptgroupIdCounter","_MatOptgroupBase","_labelId","_inert","inertGroups","label","MAT_OPTGROUP","MatOptgroup","_uniqueIdCounter","MatOptionSelectionChange","isUserInput","_MatOptionBase","_element","_parent","group","_selected","_active","_mostRecentViewValue","onSelectionChange","_stateChanges","multiple","selected","active","viewValue","textContent","select","_emitSelectionChangeEvent","deselect","_origin","setActiveStyles","setInactiveStyles","getLabel","_handleKeydown","keyCode","_selectViaInteraction","_getAriaSelected","_getTabIndex","MatOption","changeDetectorRef","NgIf","_countGroupLabelsBeforeOption","optionIndex","optionGroups","optionsArray","toArray","groups","groupCounter","_getOptionScrollPosition","optionOffset","optionHeight","currentScrollPosition","panelHeight","MatOptionModule","i4","ContentChild","ContentChildren","merge","transition","animate","nextUniqueId$2","MAT_ERROR","MatError","ariaLive","matFormFieldAnimations","transitionMessages","MatFormFieldControl","getMatFormFieldPlaceholderConflictError","getMatFormFieldDuplicatedHintError","align","getMatFormFieldMissingControlError","nextUniqueId$1","_MAT_HINT","MatHint","MatLabel","MatPlaceholder","MAT_PREFIX","MatPrefix","MAT_SUFFIX","MatSuffix","floatingLabelScale","outlineGapPadding","_MatFormFieldBase","MAT_FORM_FIELD_DEFAULT_OPTIONS","MAT_FORM_FIELD","MatFormField","_dir","_defaults","_outlineGapCalculationNeededImmediately","_outlineGapCalculationNeededOnStable","_showAlwaysAnimate","_subscriptAnimationState","_hintLabel","_hintLabelId","floatLabel","_getDefaultFloatLabelState","_animationsEnabled","appearance","_hideRequiredMarker","hideRequiredMarker","_appearance","oldValue","_shouldAlwaysFloat","_canLabelFloat","hintLabel","_processHints","_floatLabel","_control","_explicitFormFieldControl","_controlNonStatic","_controlStatic","getLabelId","_hasFloatingLabel","getConnectedOverlayOrigin","_connectionContainerRef","ngAfterContentInit","_validateControlChild","controlType","_validatePlaceholders","_syncDescribedByIds","valueChanges","onStable","updateOutlineGap","_prefixChildren","_suffixChildren","_hintChildren","_errorChildren","ngAfterContentChecked","_shouldForward","prop","_hasPlaceholder","_placeholderChild","_hasLabel","_labelChildNonStatic","_labelChildStatic","_shouldLabelFloat","shouldLabelFloat","_hideControlPlaceholder","_getDisplayedMessages","_animateAndLockLabel","_label","_validateHints","startHint","endHint","hint","ids","userAriaDescribedBy","find","setDescribedByIds","labelEl","container","outlineStartSelector","outlineGapSelector","children","gapElements","querySelectorAll","_isAttachedToDOM","startWidth","gapWidth","startEls","gapEls","containerStart","_getStartEnd","labelChildren","labelStart","labelWidth","offsetWidth","getRootNode","rootNode","documentElement","Directionality","NgSwitch","NgSwitchCase","animations","static","_inputContainerRef","descendants","MatFormFieldModule","getSupportedInputTypes","Self","Validators","i5","getMatInputUnsupportedTypeError","MAT_INPUT_VALUE_ACCESSOR","MAT_INPUT_INVALID_TYPES","_MatInputBase","MatInput","inputValueAccessor","_formField","_uid","focused","autofilled","_type","_readonly","_neverEmptyInputTypes","filter","t","_iOSKeyupListener","el","nodeName","toLowerCase","_inputValueAccessor","_previousNativeValue","IOS","_isServer","_isNativeSelect","_isTextarea","_isInFormField","_id","_b","_c","_d","hasValidator","_validateType","readonly","ngOnChanges","_dirtyCheckNativeValue","_dirtyCheckPlaceholder","_focusChanged","isFocused","_onInput","call","_previousPlaceholder","indexOf","_isNeverEmpty","_isBadInput","validity","badInput","empty","selectElement","firstOption","selectedIndex","onContainerClick","_isInlineSelect","NgControl","NgForm","FormGroupDirective","MatInputModule","i6","SkipSelf","MatSelectModule","i7","MatTooltipModule","MatPaginatorIntl","itemsPerPageLabel","nextPageLabel","previousPageLabel","firstPageLabel","lastPageLabel","getRangeLabel","page","pageSize","startIndex","endIndex","MAT_PAGINATOR_INTL_PROVIDER_FACTORY","parentIntl","MAT_PAGINATOR_INTL_PROVIDER","deps","useFactory","DEFAULT_PAGE_SIZE","PageEvent","MAT_PAGINATOR_DEFAULT_OPTIONS","_MatPaginatorMixinBase","_MatPaginatorBase","_intl","_pageIndex","_length","_pageSizeOptions","_hidePageSize","_showFirstLastButtons","_intlChanges","pageSizeOptions","hidePageSize","showFirstLastButtons","_pageSize","pageIndex","_updateDisplayedPageSizeOptions","p","_initialized","unsubscribe","nextPage","hasNextPage","previousPageIndex","_emitPageEvent","previousPage","hasPreviousPage","firstPage","lastPage","getNumberOfPages","maxPageIndex","ceil","_changePageSize","floor","_nextButtonsDisabled","_previousButtonsDisabled","_displayedPageSizeOptions","sort","a","b","MatPaginator","intl","formFieldAppearance","_formFieldAppearance","MatSelect","NgForOf","MatTooltip","MatPaginatorModule","Overlay","CdkConnectedOverlay","OverlayModule","i8","CdkScrollableModule","ActiveDescendantKeyManager","SelectionModel","DOWN_ARROW","UP_ARROW","LEFT_ARROW","RIGHT_ARROW","A","defer","switchMap","distinctUntilChanged","animateChild","matSelectAnimations","transformPanelWrap","optional","transformPanel","minWidth","getMatSelectDynamicMultipleError","getMatSelectNonArrayValueError","getMatSelectNonFunctionValueError","SELECT_PANEL_MAX_HEIGHT","SELECT_PANEL_PADDING_X","SELECT_PANEL_INDENT_PADDING_X","SELECT_ITEM_HEIGHT_EM","SELECT_MULTIPLE_PANEL_PADDING_X","SELECT_PANEL_VIEWPORT_PADDING","MAT_SELECT_SCROLL_STRATEGY","MAT_SELECT_SCROLL_STRATEGY_PROVIDER_FACTORY","overlay","scrollStrategies","reposition","MAT_SELECT_CONFIG","MAT_SELECT_SCROLL_STRATEGY_PROVIDER","MatSelectChange","_MatSelectMixinBase","MAT_SELECT_TRIGGER","MatSelectTrigger","_MatSelectBase","_viewportRuler","_parentFormField","scrollStrategyFactory","_liveAnnouncer","_defaultOptions","_panelOpen","_compareWith","o1","o2","_triggerAriaLabelledBy","_destroy","_onChange","_valueId","_panelDoneAnimatingStream","_overlayPanelClass","overlayPanelClass","_focused","_multiple","_disableOptionCentering","disableOptionCentering","optionSelectionChanges","option","openedChange","_openedStream","o","_closedStream","selectionChange","valueChange","valueAccessor","typeaheadDebounceInterval","_typeaheadDebounceInterval","_scrollStrategyFactory","_scrollStrategy","_placeholder","_selectionModel","compareWith","_initializeSelection","_value","hasAssigned","_assignValue","_panelDoneAnimating","panelOpen","_initKeyManager","added","removed","_resetOptions","newAriaLabelledby","_getTriggerAriaLabelledby","_previousControl","_keyManager","withTypeAhead","close","open","_canOpen","withHorizontalOrientation","_highlightCorrectOption","_isRtl","triggerValue","selectedOptions","reverse","_handleOpenKeydown","_handleClosedKeydown","isArrowKey","isOpenKey","manager","isTyping","altKey","previouslySelectedOption","onKeydown","selectedOption","announce","activeItem","ctrlKey","hasDeselectedOptions","opt","previouslyFocusedIndex","activeItemIndex","shiftKey","_onFocus","_onBlur","_onAttached","_overlayDir","positionChange","_positioningSettled","_getPanelTheme","isEmpty","_setSelectionByValue","clear","isArray","currentValue","_selectOptionByValue","_sortValues","correspondingOption","updateActiveItem","isSelected","withVerticalOrientation","withHomeAndEnd","withAllowedModifierKeys","tabOut","panel","_scrollOptionIntoView","changedOrDestroyed","_onSelect","wasSelected","_propagateChanges","setActiveItem","sortComparator","fallbackValue","valueToEmit","_getChangeEvent","setFirstItemActive","_getPanelAriaLabelledby","labelId","labelExpression","_getAriaActiveDescendant","isOpen","_ariaDescribedby","ViewportRuler","LiveAnnouncer","panelClass","arguments","_scrollTop","_triggerFontSize","_transformOrigin","_offsetY","_positions","originX","originY","overlayX","overlayY","_calculateOverlayScroll","scrollBuffer","maxScroll","itemHeight","_getItemHeight","optionOffsetFromScrollTop","halfOptionHeight","optimalScrollPosition","_triggerRect","fontSize","_calculateOverlayPosition","overlayRef","overlayElement","index","labelCount","scrollTop","_calculateOverlayOffsetX","overlayRect","viewportSize","getViewportSize","isRtl","paddingWidth","leftOverflow","rightOverflow","round","updatePosition","_calculateOverlayOffsetY","optionHeightAdjustment","maxOptionsDisplayed","optionOffsetFromPanelTop","firstDisplayedIndex","_getItemCount","selectedDisplayIndex","partialItemHeight","_checkOverlayWithinViewport","topSpaceAvailable","bottomSpaceAvailable","panelHeightTop","totalPanelHeight","panelHeightBottom","_adjustPanelUp","_adjustPanelDown","_getOriginBasedOnOption","distanceBelowViewport","distanceAboveViewport","items","scrollContainerHeight","selectedOptionOffset","CdkOverlayOrigin","NgSwitchDefault","NgClass","customTrigger","MAT_SLIDE_TOGGLE_DEFAULT_OPTIONS","disableToggleValue","MAT_SLIDE_TOGGLE_VALUE_ACCESSOR","MatSlideToggle","MatSlideToggleChange","_MatSlideToggleBase","_","toggleChange","_noopAnimations","_onChangeEvent","_thumbEl","_thumbBarEl","MAT_SLIDE_TOGGLE_REQUIRED_VALIDATOR","MatSlideToggleRequiredValidator","_MatSlideToggleRequiredValidatorModule","MatSlideToggleModule","keyframes","SORT_ANIMATION_TRANSITION","matSortAnimations","indicator","leftPointer","rightPointer","arrowOpacity","arrowPosition","allowChildren","getSortDuplicateSortableIdError","getSortHeaderNotContainedWithinSortError","getSortHeaderMissingIdError","getSortInvalidDirectionError","direction","MatSortHeaderIntl","MAT_SORT_HEADER_INTL_PROVIDER_FACTORY","MAT_SORT_HEADER_INTL_PROVIDER","MAT_SORT_DEFAULT_OPTIONS","_MatSortBase","MatSort","sortables","start","_direction","sortChange","disableClear","_disableClear","v","register","sortable","deregister","getNextSortDirection","sortDirectionCycle","getSortDirectionCycle","nextDirectionIndex","sortOrder","_MatSortHeaderBase","MatSortHeader","_sort","_columnDef","_ariaDescriber","_showIndicatorHint","_viewState","_arrowDirection","_disableViewStateAnimation","_sortActionDescription","_handleStateChanges","sortActionDescription","_updateSortActionDescription","_updateArrowDirection","_setAnimationTransitionState","toState","_isSorted","_sortButton","querySelector","_setIndicatorHintVisible","_rerenderSubscription","visible","_isDisabled","fromState","viewState","_toggleOnInteraction","_handleClick","_getArrowDirectionState","_getArrowViewState","_getAriaSortAttribute","_renderArrow","newDescription","removeDescription","describe","AriaDescriber","MatSortModule","CdkTable","CDK_TABLE","_COALESCED_STYLE_SCHEDULER","_CoalescedStyleScheduler","STICKY_POSITIONING_LISTENER","CDK_TABLE_TEMPLATE","CdkCellDef","CdkHeaderCellDef","CdkFooterCellDef","CdkColumnDef","CdkHeaderCell","CdkFooterCell","CdkCell","CdkHeaderRowDef","CdkFooterRowDef","CdkRowDef","CdkHeaderRow","CDK_ROW_TEMPLATE","CdkFooterRow","CdkRow","CdkNoDataRow","CdkTextColumn","CdkTableModule","DataSource","_VIEW_REPEATER_STRATEGY","_RecycleViewRepeaterStrategy","_DisposeViewRepeaterStrategy","_isNumberValue","BehaviorSubject","of","MatRecycleRows","MatTable","stickyCssClass","needsPositionStickyOnElement","HeaderRowOutlet","DataRowOutlet","NoDataRowOutlet","FooterRowOutlet","Default","MatCellDef","MatHeaderCellDef","MatFooterCellDef","MatColumnDef","_name","_setNameInput","_updateColumnCssClassName","_columnCssClassName","cssClassFriendlyName","MatHeaderCell","MatFooterCell","MatCell","MatHeaderRowDef","MatFooterRowDef","MatRowDef","MatHeaderRow","CdkCellOutlet","MatFooterRow","MatRow","MatNoDataRow","_contentClassName","MatTextColumn","EXPORTED_DECLARATIONS","MatTableModule","MAX_SAFE_INTEGER","_MatTableDataSource","initialData","_renderData","_filter","_internalPageChanges","_renderChangesSubscription","sortingDataAccessor","data","sortHeaderId","numberValue","Number","sortData","valueA","valueB","valueAType","valueBType","comparatorResult","filterPredicate","dataStr","keys","currentTerm","key","transformedFilter","_data","_updateChangeSubscription","_filterData","paginator","_paginator","pageChange","dataStream","filteredData","orderedData","_orderData","paginatedData","_pageData","_updatePaginator","filteredDataLength","lastPageIndex","newPageIndex","connect","disconnect","MatTableDataSource","A11yModule","ESCAPE","ComponentPortal","SCROLL_THROTTLE_MS","TOOLTIP_PANEL_CLASS","PANEL_CLASS","passiveListenerOptions","LONGPRESS_DELAY","getMatTooltipInvalidPositionError","MAT_TOOLTIP_SCROLL_STRATEGY","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY","scrollThrottle","MAT_TOOLTIP_SCROLL_STRATEGY_FACTORY_PROVIDER","MAT_TOOLTIP_DEFAULT_OPTIONS","MAT_TOOLTIP_DEFAULT_OPTIONS_FACTORY","showDelay","hideDelay","touchendHideDelay","_MatTooltipBase","_overlay","_scrollDispatcher","_viewContainerRef","scrollStrategy","_position","_viewInitialized","_pointerExitEventsInitialized","_viewportMargin","_cssClassPrefix","_showDelay","_hideDelay","touchGestures","_message","_passiveListeners","_overlayRef","_updatePosition","_tooltipInstance","show","hide","_setupPointerEnterEventsIfNeeded","_mouseLeaveHideDelay","message","String","_isTooltipVisible","_updateTooltipMessage","tooltipClass","_tooltipClass","_setTooltipClass","clearTimeout","_touchstartTimeout","dispose","_showTimeoutId","_hideTimeoutId","_createOverlay","_detach","_portal","_tooltipComponent","instance","attach","afterHidden","scrollableAncestors","getAncestorScrollContainers","strategy","flexibleConnectedTo","withTransformOriginOn","withFlexibleDimensions","withViewportMargin","withScrollableContainers","positionChanges","_updateCurrentPositionClass","connectionPair","scrollableViewProperties","isOverlayClipped","create","positionStrategy","detachments","outsidePointerEvents","_handleBodyInteraction","keydownEvents","disableTooltipInteractivity","addPanelClass","hasAttached","detach","getConfig","_getOrigin","_getOverlayPosition","withPositions","_addOffset","main","fallback","isLtr","originPosition","_invertPosition","overlayPosition","_markForCheck","onMicrotaskEmpty","newPosition","_currentPosition","classPrefix","removePanelClass","_platformSupportsMouseEvents","_setupPointerExitEventsIfNeeded","_disableNativeGesturesIfNecessary","_addListeners","exitListeners","newTarget","relatedTarget","_wheelListener","touchendListener","listeners","ANDROID","elementUnderPointer","elementFromPoint","gestures","userSelect","msUserSelect","webkitUserSelect","MozUserSelect","draggable","webkitUserDrag","touchAction","webkitTapHighlightColor","ScrollDispatcher","ViewContainerRef","scrollDispatcher","viewContainerRef","ariaDescriber","dir","defaultOptions","TooltipComponent","_TooltipComponentBase","_visibility","_closeOnInteraction","_isVisible","_onHide","_animationsDisabled","_toggleVisibility","_handleMouseLeave","_onShow","_handleAnimationEnd","_showAnimation","_hideAnimation","_finalizeAnimation","toVisible","tooltip","_tooltip","showClass","hideClass","_breakpointObserver","_isHandset","AsyncPipe","matTooltipAnimations","tooltipState","offset"],"sourceRoot":"webpack:///"}