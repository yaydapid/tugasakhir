{"version":3,"file":"src_app_pages_assesment_assesment_module_ts.js","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAA+C;AACS;AAC+J;AAE1J;AACF;AACsB;AACX;AACmB;AACpB;AACoB;AACnB;AACb;AAEM;AACG;AACT;AACE;AACM;AACpB;;;AA0CtC,MAAM,eAAe;;8EAAf,eAAe;4GAAf,eAAe;gHAtCf;YACL,yDAAY;YACZ,4DAAW;YACX,yDAAY;YACZ,sEAAsB;YACtB,2EAAY;YACZ,sFAAmB;YACnB,yDAAY;YACZ,yDAAY;YACZ,2DAAc;YACd,8DAAiB;YACjB,0DAAa;YACb,6DAAgB;YAChB,2DAAc;YACd,iFAAoB;YACpB,oEAAc;YACd,0EAAiB;YACjB,6EAAkB;YAClB,oEAAc;YACd,sEAAe;YACf,4EAAkB;YAClB,wDAAW;YACX,0DAAa;YACb,mEAAsB,CAAC;gBACnB,cAAc,EAAG,IAAI;gBACrB,QAAQ,EAAG,IAAI;gBACf,QAAQ,EAAG,kFAAqC;gBAChD,iBAAiB,EAAG,IAAI;gBACxB,KAAK,EAAG,CAAC;aACZ,CAAC;SACL;mIAQQ,eAAe,mBANpB,oEAAkB;QAClB,kGAAwB;QACxB,8EAAkB;QAClB,kGAAwB,aAlCxB,yDAAY;QACZ,4DAAW;QACX,yDAAY;QACZ,sEAAsB;QACtB,2EAAY;QACZ,sFAAmB;QACnB,yDAAY;QACZ,yDAAY;QACZ,2DAAc;QACd,8DAAiB;QACjB,0DAAa;QACb,6DAAgB;QAChB,2DAAc;QACd,iFAAoB;QACpB,oEAAc;QACd,0EAAiB;QACjB,6EAAkB;QAClB,oEAAc;QACd,sEAAe;QACf,4EAAkB;QAClB,wDAAW;QACX,0DAAa;;;;;;;;;;;;;;;;;;;;;AC5CkC;AACkC;AACpB;AACoB;AAC9B;;;AAE3D,MAAM,MAAM,GAAW,CAAC;QACpB,IAAI,EAAE,EAAE;QACR,SAAS,EAAE,oEAAkB;QAC7B,QAAQ,EAAE;YACR;gBACE,IAAI,EAAE,kBAAkB;gBACxB,SAAS,EAAG,kGAAwB;aACrC;YACD;gBACE,IAAI,EAAE,WAAW;gBACjB,SAAS,EAAG,8EAAkB;aAC/B;YACD;gBACE,IAAI,EAAE,kBAAkB;gBACxB,SAAS,EAAG,kGAAwB;aACrC;SACF;KACF,CAAC,CAAC;AAME,MAAM,sBAAsB;;4FAAtB,sBAAsB;mHAAtB,sBAAsB;uHAHtB,CAAC,kEAAqB,CAAC,MAAM,CAAC,CAAC,EAC9B,yDAAY;mIAEb,sBAAsB,oFAFrB,yDAAY;;;;;;;;;;;;;;;;;;AC1ByC;;;AAK5D,MAAM,sBAAsB;IAC/B,YAAoB,UAAuB;QAAvB,eAAU,GAAV,UAAU,CAAa;QACnC,WAAM,GAAG,yEAAkB,CAAC;IADW,CAAC;IAGhD,kBAAkB;QACd,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,mBAAmB,CAAC;QAC9C,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACpC,CAAC;IAED,qBAAqB,CAAC,EAAE,EAAE,IAAI;QAC1B,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,oBAAoB,GAAG,EAAE,CAAC;QACpD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IAC1C,CAAC;;4FAZQ,sBAAsB;uHAAtB,sBAAsB,WAAtB,sBAAsB,mBAFlB,MAAM;;;;;;;;;;;;;;;;;;;;;;;;;;ACJoC;AACV;AACY;AAEwB;;;;;;;;;;;;;ICW7D,yEAAuE;IAAC,sEAAU;IAAA,4DAAK;;IAAjD,0IAAgC;;;;;IACtE,6EAQC;IALG,wTAAoC,SAAS,IAAC,2eAEtB,SAAS,qBACV,OAAO,IAHgB,ySAIrC,4BAAiB,IAJoB;IAKhD,uDAA+B;IAAA,4DAAK;;;;IANlC,gQAA2F;IAM7F,0DAA+B;IAA/B,sKAA+B;;;IAGrC,oEAA0E;;;IAC1E,oEACK;;;ADhBlB,MAAM,wBAAwB;IACnC,YACU,sBAA+C,EAC/C,QAAmB,EACnB,aAA+B,EAC/B,SAAqB;QAHrB,2BAAsB,GAAtB,sBAAsB,CAAyB;QAC/C,aAAQ,GAAR,QAAQ,CAAW;QACnB,kBAAa,GAAb,aAAa,CAAkB;QAC/B,cAAS,GAAT,SAAS,CAAY;QAqC/B,kBAAa,GAAG;YACd,EAAE,IAAI,EAAG,MAAM,EAAE,IAAI,EAAG,yBAAyB,EAAE,IAAI,EAAG,yBAAyB,EAAE,KAAK,EAAG,OAAO,EAAE;YACtG,EAAE,IAAI,EAAG,OAAO,EAAE,IAAI,EAAG,QAAQ,EAAE,IAAI,EAAG,QAAQ,EAAE,KAAK,EAAG,OAAO,EAAE;YACrE,EAAE,IAAI,EAAG,WAAW,EAAE,IAAI,EAAG,gBAAgB,EAAE,IAAI,EAAG,gBAAgB,EAAE,KAAK,EAAG,MAAM,EAAE,KAAK,EAAG;oBAC9F,KAAK,EAAE,QAAQ,EAAE,MAAM;iBACxB,EAAC;YACF,EAAE,IAAI,EAAG,eAAe,EAAE,IAAI,EAAG,OAAO,EAAE,IAAI,EAAG,OAAO,EAAE,KAAK,EAAG,OAAO,EAAE;YAC3E,EAAE,IAAI,EAAG,eAAe,EAAE,IAAI,EAAG,eAAe,EAAE,IAAI,EAAG,wBAAwB,EAAE,KAAK,EAAG,OAAO,EAAE;YACpG,EAAE,IAAI,EAAG,eAAe,EAAE,IAAI,EAAG,gBAAgB,EAAE,IAAI,EAAG,gBAAgB,EAAE,KAAK,EAAG,OAAO,EAAE;YAC7F,EAAE,IAAI,EAAG,eAAe,EAAE,IAAI,EAAG,eAAe,EAAE,IAAI,EAAG,gBAAgB,EAAE,KAAK,EAAG,OAAO,EAAE;SAC7F;QAKD,qBAAgB,GAAa,CAAE,WAAW,CAAE,CAAC;IAnD1C,CAAC;IAIJ,QAAQ;QACN,IAAI,CAAC,sBAAsB,CAAC,kBAAkB,EAAE;aAC/C,SAAS,CAAC,CAAC,EAAC,IAAI,EAAO,EAAE,EAAE;;YAC1B,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;YAC7B,IAAI,CAAC,mBAAmB,CAAC,UAAI,CAAC,CAAC,CAAC,0CAAE,gBAAgB,CAAC;YAEnD,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAkB,CAAC,IAAI,CAAC,CAAC;YAC/C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACnC,CAAC,CAAC;IACJ,CAAC;IAED,mBAAmB,CAAC,gBAAgB;QAClC,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,mBAAmB,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;YAC9D,MAAM,EAAC,EAAE,EAAC,GAAG,IAAI,CAAC;YAClB,IAAG,gBAAgB,aAAhB,gBAAgB,uBAAhB,gBAAgB,CAAG,EAAE,CAAC,EAAE;gBACzB,MAAM,EAAC,cAAc,EAAE,aAAa,EAAC,GAAG,gBAAgB,CAAC,EAAE,CAAC;gBAC5D,qDACK,IAAI,GACJ,gBAAgB,CAAC,EAAE,CAAC,KACvB,MAAM,EAAG,IAAI,EACb,cAAc,EAAG,IAAI,IAAI,CAAC,cAAc,CAAC,EACzC,aAAa,EAAG,IAAI,IAAI,CAAC,aAAa,CAAC,IACxC;aACF;YACD,yBAAW,IAAI,EAAC;QAClB,CAAC,CAAC;QACF,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC,SAAS,CAAC;QACzC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,mBAAmB;IACrD,CAAC;IAuBD,QAAQ;QACN,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC;QACnE,MAAM,EAAE,GAAI,IAAI,CAAC,aAAa,CAAC,EAAE;QAEjC,MAAM,UAAU,GAAG,SAAS;aAC3B,MAAM,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,aAAJ,IAAI,uBAAJ,IAAI,CAAE,MAAM,CAAC;aAC5B,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,iCACR,IAAI,KACP,cAAc,EAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,EAAE,YAAY,CAAC,EAC3E,aAAa,EAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,EAAE,YAAY,CAAC,IACzE,CAAC;QAEH,IAAI,gBAAgB,GAAS,EAAE;QAC/B,UAAU,CAAC,OAAO,CAAC,CAAC,EAClB,EAAE,EAAE,aAAa,EAAE,cAAc,EAAE,KAAK,EAAE,cAAc,EAAE,aAAa,EAClE,EAAE,EAAE;YACT,gBAAgB,CAAC,EAAE,CAAC,GAAG;gBACrB,KAAK,EAAE,aAAa,EAAE,cAAc,EAAE,cAAc,EAAE,aAAa;aACpE;QACH,CAAC,CAAC;QAEF,IAAI,CAAC,sBAAsB,CAAC,qBAAqB,CAAC,EAAE,EAAE,EAAC,gBAAgB,EAAC,CAAC;aACxE,SAAS,CACR,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,EACrB,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,6CAA6C,EAAE,sBAAsB,CAAC,EACtG,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,wBAAwB,EAAE,uBAAuB,CAAC,CACpF;IACH,CAAC;IAED,QAAQ,CAAC,OAAO;QACZ,IAAI,CAAC,aAAa,GAAG,OAAO;QAC5B,IAAI,CAAC,mBAAmB,CAAC,OAAO,aAAP,OAAO,uBAAP,OAAO,CAAE,gBAAgB,CAAC;IACvD,CAAC;IAED,WAAW,CAAC,KAAY;QACtB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAE1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACH,CAAC;;gGAvGU,wBAAwB;sHAAxB,wBAAwB;kEAQxB,uFAAiB;kEAmDjB,qEAAY;kEACZ,2DAAO;;;;;;;QC1EpB,0EAAS;QAGO,2EAAgB;QAAA,4DAAK;QACzB,iFAAgB;QACD,8EAAmB;QAAA,4DAAY;QAC1C,8EAA2E;QAA3D,qJAAS,uBAAmB,IAAC;QAA7C,4DAA2E;QAIvF,gFAAc;QAKE,4EAAuC;QACnC,oHAAuF;QACvF,oHAQsC;QAC1C,qEAAe;QAEf,oHAA0E;QAC1E,qHACK;QACT,4DAAQ;QAER,gFAGgB;QACpB,4DAAM;QAEN,2EAAmB;QACf,gFAKiB;QACjB,2EAAiD;QAC+B,iJAAS,cAAU,IAAC;QAAC,gEAAI;QAAA,4DAAS;;QAlC1D,2DAAyB;QAAzB,sFAAyB;QAezD,0DAAmC;QAAnC,iGAAmC;QACtB,0DAA0B;QAA1B,kGAA0B;QAK3D,0DAAe;QAAf,wEAAe;QAOf,0DAAgC;QAAhC,+IAAgC;QAMgB,0DAA2B;QAA3B,wFAA2B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;IE/C/F,8EAAqD;IAAA,gGAAqC;IAAA,4DAAW;;;;IACrG,8EAKiB;;;IAHb,8IAAuC;;ADKpC,MAAM,kBAAkB;IAE7B,YACU,gBAAmC,EACnC,SAAqB;QADrB,qBAAgB,GAAhB,gBAAgB,CAAmB;QACnC,cAAS,GAAT,SAAS,CAAY;QAmC/B,cAAS,GAAS,EAAE;QACpB,kBAAa,GAAG;YACd,EAAE,IAAI,EAAG,OAAO,EAAE,IAAI,EAAG,WAAW,EAAE,IAAI,EAAG,WAAW,EAAE,KAAK,EAAG,OAAO,EAAE,GAAG,EAAG,aAAa,EAAE;YAChG,EAAE,IAAI,EAAG,MAAM,EAAE,IAAI,EAAG,SAAS,EAAE,IAAI,EAAG,cAAc,EAAE,KAAK,EAAG,OAAO,EAAE;YAC3E,EAAE,IAAI,EAAG,MAAM,EAAE,IAAI,EAAG,OAAO,EAAE,IAAI,EAAG,YAAY,EAAE,KAAK,EAAG,OAAO,EAAE;YACvE,EAAE,IAAI,EAAG,MAAM,EAAE,IAAI,EAAG,OAAO,EAAE,IAAI,EAAG,iBAAiB,EAAE,KAAK,EAAG,OAAO,EAAE;YAC5E,EAAE,IAAI,EAAG,MAAM,EAAE,IAAI,EAAG,OAAO,EAAE,IAAI,EAAG,iBAAiB,EAAE,KAAK,EAAG,OAAO,EAAE;YAC5E,EAAE,IAAI,EAAG,MAAM,EAAE,IAAI,EAAG,gBAAgB,EAAE,IAAI,EAAG,uBAAuB,EAAE,KAAK,EAAG,OAAO,EAAE;YAC3F,EAAE,IAAI,EAAG,MAAM,EAAE,IAAI,EAAG,WAAW,EAAE,IAAI,EAAG,kBAAkB,EAAE,KAAK,EAAG,OAAO,EAAE;YACjF,EAAE,IAAI,EAAG,MAAM,EAAE,IAAI,EAAG,iBAAiB,EAAE,IAAI,EAAG,iBAAiB,EAAE,KAAK,EAAG,OAAO,EAAE;YACtF,EAAE,IAAI,EAAG,MAAM,EAAE,IAAI,EAAG,mBAAmB,EAAE,IAAI,EAAG,mBAAmB,EAAE,KAAK,EAAG,OAAO,EAAE;YAC1F,EAAE,IAAI,EAAG,MAAM,EAAE,IAAI,EAAG,mBAAmB,EAAE,IAAI,EAAG,mBAAmB,EAAE,KAAK,EAAG,OAAO,EAAE;YAC1F,EAAE,IAAI,EAAG,MAAM,EAAE,IAAI,EAAG,MAAM,EAAE,IAAI,EAAG,YAAY,EAAE,KAAK,EAAG,OAAO,EAAE;SACvE;IA/CE,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,EAAE;aACvC,SAAS,CAAC,CAAC,EAAC,IAAI,EAAO,EAAE,EAAE;YAC1B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;gBAChC,MAAM,EACJ,OAAO,EACP,sBAAsB,EACtB,KAAK,EAAE,KAAK,EACZ,cAAc,EACd,SAAS,EACT,eAAe,EACf,iBAAiB,EACjB,iBAAiB,EACjB,IAAI,EACL,GAAG,IAAI,CAAC,SAAS,CAAC,uBAAuB,CAAC,KAAK,CAAC;gBACjD,uCACK,KAAK,KACR,OAAO,EAAG,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAC5B,KAAK,EAAG,sBAAsB,CAAC,OAAO,CAAC,CAAC,CAAC,EACzC,KAAK,EAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EACxB,KAAK,EAAG,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EACxB,cAAc,EAAG,cAAc,CAAC,OAAO,CAAC,CAAC,CAAC,EAC1C,SAAS,EAAG,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,EAChC,eAAe;oBACf,iBAAiB;oBACjB,iBAAiB,EACjB,IAAI,EAAG,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IACvB;YACH,CAAC,CAAC;QACJ,CAAC,CAAC;IACJ,CAAC;;oFArCU,kBAAkB;gHAAlB,kBAAkB;QCR/B,wHAAqG;QACrG,kIAKiB;;QANU,uFAAuB;QAE7C,0DAAsB;QAAtB,sFAAsB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDsB;AACY;AACF;;;;;;;;;;;;;;ICkBvC,yEAAuE;IAAC,sEAAU;IAAA,4DAAK;;IAAjD,0IAAgC;;;;;IACtE,6EAQC;IALG,yTAAoC,SAAS,IAAC,scAEtB,SAAS,qBACV,OAAO,IAHgB,0SAIrC,4BAAiB,IAJoB;IAKhD,uDAAsB;IAAA,4DAAK;;;;IANzB,wNAA0F;IAM5F,0DAAsB;IAAtB,gGAAsB;;;IAG5B,oEAA0E;;;IAC1E,oEACK;;;IA0BW,iFAMG;IAAA,uDAAU;IAAA,4DAAa;;;IANd,2EAAc;IAMvB,0DAAU;IAAV,yEAAU;;;IA+CL,iFASK;IAAA,uDAAW;IAAA,4DAAa;;;IARzB,4EAAe;IAQd,0DAAW;IAAX,0EAAW;;;IAgBpB,kFAEuC;IAC7B,uDAAmB;IAAA,4DAAO;IAChC,6EAIe;IACnB,4DAAe;;;;IANL,0DAAmB;IAAnB,6GAAmB;IAEzB,0DAAyD;IAAzD,oKAAyD;;;;IAxCrE,8EAA6E;IAE3B,uDAAqB;IAAA,4DAAQ;IACvE,iFAAgB;IACD,oEAAS;IAAA,4DAAY;IAChC,iFAIC;IACD,8IAS6B;IAC7B,4DAAa;IAIrB,0EAAmB;IACf,2EAMoB;IACxB,4DAAM;IAEN,2EAAS;IACL,oJASe;IACnB,4DAAU;;;;IA3CoC,0DAAqB;IAArB,oFAAqB;IAIvD,0DAAyE;IAAzE,yPAAyE;IAMvD,0DAMvB;IANuB,0IAMvB;IASH,0DAAsE;IAAtE,mPAAsE;IASnD,0DAAmB;IAAnB,yFAAmB;;ADjInE,MAAM,wBAAwB;IACnC,YACU,sBAA+C,EAC/C,aAA+B;QAD/B,2BAAsB,GAAtB,sBAAsB,CAAyB;QAC/C,kBAAa,GAAb,aAAa,CAAkB;QAqBzC,qBAAgB,GAAa,CAAC,WAAW,CAAC,CAAC;QAC3C,kBAAa,GAAG,CAAC,CAAC;QA4BlB,sBAAiB,GAAG;YAClB;gBACE,KAAK,EAAG,OAAO;gBACf,UAAU,EAAG;oBACX,KAAK,EAAG,OAAO;oBACf,KAAK,EAAG,iBAAiB;iBAC1B;gBACD,OAAO,EAAG;oBACR,KAAK,EAAG,eAAe;oBACvB,KAAK,EAAG,eAAe;iBACxB;gBACD,MAAM,EAAG;oBACP,EAAE,KAAK,EAAG,SAAS,EAAE,KAAK,EAAG,eAAe,EAAC;oBAC7C,EAAE,KAAK,EAAG,gBAAgB,EAAE,KAAK,EAAG,qBAAqB,EAAC;iBAC3D;aACF;YACD;gBACE,KAAK,EAAG,cAAc;gBACtB,UAAU,EAAG;oBACX,KAAK,EAAG,cAAc;oBACtB,KAAK,EAAG,wBAAwB;iBACjC;gBACD,OAAO,EAAG;oBACR,KAAK,EAAG,sBAAsB;oBAC9B,KAAK,EAAG,sBAAsB;iBAC/B;gBACD,MAAM,EACN;oBACE,EAAE,KAAK,EAAG,qBAAqB,EAAE,KAAK,EAAG,kCAAkC,EAAE;oBAC7E,EAAE,KAAK,EAAG,+BAA+B,EAAE,KAAK,EAAG,+BAA+B,EAAE;oBACpF,EAAE,KAAK,EAAG,gBAAgB,EAAE,KAAK,EAAG,8BAA8B,EAAE;iBACrE;aACF;YACD;gBACE,KAAK,EAAG,WAAW;gBACnB,UAAU,EAAG;oBACX,KAAK,EAAG,WAAW;oBACnB,KAAK,EAAG,qBAAqB;iBAC9B;gBACD,OAAO,EAAG;oBACR,KAAK,EAAG,mBAAmB;oBAC3B,KAAK,EAAG,mBAAmB;iBAC5B;gBACD,MAAM,EACN;oBACE,EAAE,KAAK,EAAG,2BAA2B,EAAE,KAAK,EAAG,8BAA8B,EAAC;oBAC9E,EAAE,KAAK,EAAG,oBAAoB,EAAE,KAAK,EAAG,8BAA8B,EAAC;oBACvE,EAAE,KAAK,EAAG,mCAAmC,EAAE,KAAK,EAAG,sBAAsB,EAAC;oBAC9E,EAAE,KAAK,EAAG,sBAAsB,EAAE,KAAK,EAAG,gCAAgC,EAAC;oBAC3E,EAAE,KAAK,EAAG,kCAAkC,EAAE,KAAK,EAAG,yBAAyB,EAAC;iBACjF;aACF;YACD;gBACE,KAAK,EAAG,WAAW;gBACnB,UAAU,EAAG;oBACX,KAAK,EAAG,WAAW;oBACnB,KAAK,EAAG,qBAAqB;iBAC9B;gBACD,OAAO,EAAG;oBACR,KAAK,EAAG,mBAAmB;oBAC3B,KAAK,EAAG,mBAAmB;iBAC5B;gBACD,MAAM,EACN;oBACE,EAAE,KAAK,EAAG,qCAAqC,EAAE,KAAK,EAAG,2BAA2B,EAAC;oBACrF,EAAE,KAAK,EAAG,gCAAgC,EAAE,KAAK,EAAG,4BAA4B,EAAC;oBACjF,EAAE,KAAK,EAAG,wBAAwB,EAAE,KAAK,EAAG,uBAAuB,EAAC;oBACpE,EAAE,KAAK,EAAG,uBAAuB,EAAE,KAAK,EAAG,gCAAgC,EAAC;oBAC5E,EAAE,KAAK,EAAG,mBAAmB,EAAE,KAAK,EAAG,6BAA6B,EAAC;iBACtE;aACF;YACD;gBACE,KAAK,EAAG,UAAU;gBAClB,UAAU,EAAG;oBACX,KAAK,EAAG,UAAU;oBAClB,KAAK,EAAG,oBAAoB;iBAC7B;gBACD,OAAO,EAAG;oBACR,KAAK,EAAG,iBAAiB;oBACzB,KAAK,EAAG,kBAAkB;iBAC3B;gBACD,MAAM,EACN;oBACE,EAAE,KAAK,EAAG,oBAAoB,EAAE,KAAK,EAAG,yBAAyB,EAAE;oBACnE,EAAE,KAAK,EAAG,+BAA+B,EAAE,KAAK,EAAG,4BAA4B,EAAE;oBACjF,EAAE,KAAK,EAAG,sBAAsB,EAAE,KAAK,EAAG,uBAAuB,EAAE;oBACnE,EAAE,KAAK,EAAG,2BAA2B,EAAE,KAAK,EAAG,2BAA2B,EAAE;oBAC5E,EAAE,KAAK,EAAG,gBAAgB,EAAE,KAAK,EAAG,yBAAyB,EAAE;oBAC/D,EAAE,KAAK,EAAG,uBAAuB,EAAE,KAAK,EAAG,wBAAwB,EAAE;oBACrE,EAAE,KAAK,EAAG,2BAA2B,EAAE,KAAK,EAAG,0BAA0B,EAAE;oBAC3E,EAAE,KAAK,EAAG,mBAAmB,EAAE,KAAK,EAAG,4BAA4B,EAAE;iBACtE;aACF;YACD;gBACE,KAAK,EAAG,YAAY;gBACpB,UAAU,EAAG;oBACX,KAAK,EAAG,YAAY;oBACpB,KAAK,EAAG,sBAAsB;iBAC/B;gBACD,OAAO,EAAG;oBACR,KAAK,EAAG,oBAAoB;oBAC5B,KAAK,EAAG,oBAAoB;iBAC7B;gBACD,MAAM,EACN;oBACE,EAAE,KAAK,EAAG,qBAAqB,EAAE,KAAK,EAAG,gCAAgC,EAAE;oBAC3E,EAAE,KAAK,EAAG,8BAA8B,EAAE,KAAK,EAAG,8BAA8B,EAAE;oBAClF,EAAE,KAAK,EAAG,uBAAuB,EAAE,KAAK,EAAG,kCAAkC,EAAE;oBAC/E,EAAE,KAAK,EAAG,SAAS,EAAE,KAAK,EAAG,oBAAoB,EAAE;oBACnD,EAAE,KAAK,EAAG,0BAA0B,EAAE,KAAK,EAAG,oBAAoB,EAAE;iBACrE;aACF;SACF;IAjKE,CAAC;IAEJ,QAAQ;QACN,IAAI,CAAC,sBAAsB,CAAC,mBAAmB,EAAE;aAChD,SAAS,CAAC,CAAC,EAAC,IAAI,EAAO,EAAE,EAAE;;YAC1B,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,CAAE,EAAE,CAAC,iCAC/B,IAAI,CAAC,MAAM,KACd,gBAAgB,kCAAO,IAAI,KAAE,MAAM,EAAG,IAAI,OAC1C,CAAC;YACH,IAAI,CAAC,SAAS,GAAG,SAAS;YAC1B,IAAI,CAAC,aAAa,GAAG,UAAI,CAAC,aAAa,mCAAI,SAAS,CAAC,CAAC,CAAC,CAAC;YAExD,IAAI,CAAC,UAAU,GAAG,IAAI,uEAAkB,CAAC,SAAS,CAAC,CAAC;YACpD,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;YAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACnC,CAAC,CAAC;IACJ,CAAC;IAUD,QAAQ,CAAC,OAAO;QACZ,IAAI,CAAC,aAAa,GAAG,OAAO;IAChC,CAAC;IAED,QAAQ,CAAC,IAAI;QACX,MAAM,EAAE,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,EAAE;QACjD,IAAI,CAAC,sBAAsB,CAAC,sBAAsB,CAAC,IAAI,EAAE,EAAE,CAAC;aAC3D,SAAS,CACR,CAAC,GAAG,EAAE,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,EACxB,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,oCAAoC,EAAE,sBAAsB,CAAC,EAC7F,GAAG,EAAE,CAAC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,wBAAwB,EAAE,uBAAuB,CAAC,CACpF;IACH,CAAC;IAED,WAAW,CAAC,KAAY;QACpB,MAAM,WAAW,GAAI,KAAK,CAAC,MAA2B,CAAC,KAAK,CAAC;QAC7D,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,WAAW,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;QAE1D,IAAI,IAAI,CAAC,UAAU,CAAC,SAAS,EAAE;YAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,SAAS,EAAE,CAAC;SACvC;IACL,CAAC;;gGAnDU,wBAAwB;sHAAxB,wBAAwB;kEA2BxB,qEAAY;kEACZ,2DAAO;;;;;;;QCvCpB,0EAAS;QAGO,2EAAgB;QAAA,4DAAK;QACzB,iFAAgB;QACD,8EAAmB;QAAA,4DAAY;QAC1C,8EAEiC;QADjC,qJAAS,uBAAmB,IAAC;QAD7B,4DAEiC;QAI7C,mFAA2B;QAQf,4EAAuC;QACnC,oHAAuF;QACvF,oHAQ6B;QACjC,qEAAe;QAEf,oHAA0E;QAC1E,qHACK;QACT,4DAAQ;QAER,gFAIgB;QACpB,4DAAM;QAEN,gFAAoG;QAAlD,mSAAY,uBAAmC,IAAC;QAC9F,oFAAoB;QAEU,mEAAO;QAAA,4DAA2B;QAC5D,0FAAwB;QAGgB,wDAA8C;QAAA,4DAAO;QACrF,uEAAK;QAEc,qEAAS;QAAA,4DAAY;QAChC,kFAIC;QACD,qIAM0B;QAC1B,4DAAa;QAKzB,0EAA4C;QAGM,mEAAO;QAAA,4DAAQ;QACzD,2EAKkC;QACtC,4DAAM;QAEN,2EAAwB;QAC4B,yEAAa;QAAA,4DAAQ;QACrE,2EAK8B;QAClC,4DAAM;QAMd,yFAAmC;QACL,8EAAkB;QAAA,4DAA2B;QACvE,0FAAyB;QAGjB,gIA8CU;QACd,4DAAM;QAKlB,8EAAkI;QAAA,kEAAM;QAAA,4DAAS;;;QA3IvI,2DAAyB;QAAzB,sFAAyB;QAgBX,0DAAmC;QAAnC,iGAAmC;QACtB,0DAA0B;QAA1B,kGAA0B;QAK3D,0DAAwB;QAAxB,qFAAwB;QAagB,2DAA8C;QAA9C,wJAA8C;QAKtE,0DAA8D;QAA9D,gNAA8D;QAIlB,0DAMjD;QANiD,2IAMjD;QAWC,0DAA4D;QAA5D,8MAA4D;QAa5D,0DAAkE;QAAlE,oNAAkE;QAaX,0DAAoB;QAApB,0FAAoB;QAoDvC,0DAA+D;QAA/D,4GAA+D;;;;;;;;;;;;;;;;;;;AC3J5D;;;AAM5D,MAAM,sBAAsB;IAC/B,YAAoB,UAAuB;QAAvB,eAAU,GAAV,UAAU,CAAa;QACnC,WAAM,GAAG,yEAAkB,CAAC;IADW,CAAC;IAGhD,mBAAmB;QACf,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,mBAAmB,CAAC;QAC9C,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;IACpC,CAAC;IAED,sBAAsB,CAAC,IAAI,EAAE,EAAE;QAC3B,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,GAAG,oBAAoB,GAAG,EAAE,CAAC;QACpD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC;IAC1C,CAAC;;4FAZQ,sBAAsB;uHAAtB,sBAAsB,WAAtB,sBAAsB,mBAFnB,MAAM","sources":["./src/app/pages/assesment/assesment.module.ts","./src/app/pages/assesment/assesment.routing.ts","./src/app/pages/assesment/demage-mechanism/damage-mechanism.service.ts","./src/app/pages/assesment/demage-mechanism/demage-mechanism.component.ts","./src/app/pages/assesment/demage-mechanism/demage-mechanism.component.html","./src/app/pages/assesment/thickness/thickness.component.ts","./src/app/pages/assesment/thickness/thickness.component.html","./src/app/pages/assesment/visual-condition/visual-condition.component.ts","./src/app/pages/assesment/visual-condition/visual-condition.component.html","./src/app/pages/assesment/visual-condition/visual-condition.service.ts"],"sourcesContent":["import { CommonModule } from \"@angular/common\";\r\nimport { ThemeModule } from \"../../@theme/theme.module\";\r\nimport { NbAccordionModule, NbAlertModule, NbButtonModule, NbCardModule, NbCheckboxModule, NbGlobalPhysicalPosition, NbInputModule, NbListModule, NbMenuModule, NbSelectModule, NbToastrModule } from \"@nebular/theme\";\r\nimport { NgModule } from \"@angular/core\";\r\nimport { AssesmentRoutingModule } from \"./assesment.routing\";\r\nimport { AssesmentComponent } from \"./assesment.component\";\r\nimport { MaterialTableModule } from \"../../component/mat-table/mat-table.module\";\r\nimport { TopBarModule } from \"../../component/top-bar/top-bar.module\";\r\nimport { DemageMechanismComponent } from \"./demage-mechanism/demage-mechanism.component\";\r\nimport { ThicknessComponent } from \"./thickness/thickness.component\";\r\nimport { VisualConditionComponent } from \"./visual-condition/visual-condition.component\";\r\nimport { MatSlideToggleModule } from \"@angular/material/slide-toggle\";\r\nimport { MatTableModule } from \"@angular/material/table\";\r\n\r\nimport { MatCheckboxModule } from \"@angular/material/checkbox\";\r\nimport { MatFormFieldModule } from \"@angular/material/form-field\";\r\nimport { MatInputModule } from \"@angular/material/input\";\r\nimport { MatSelectModule } from \"@angular/material/select\";\r\nimport { MatPaginatorModule } from \"@angular/material/paginator\";\r\nimport { FormsModule } from \"@angular/forms\";\r\nimport { Variables } from \"../../component/common-variable\";\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        ThemeModule,\r\n        NbMenuModule,\r\n        AssesmentRoutingModule,\r\n        TopBarModule,\r\n        MaterialTableModule,\r\n        NbCardModule,\r\n        NbListModule,\r\n        NbSelectModule,\r\n        NbAccordionModule,\r\n        NbInputModule,\r\n        NbCheckboxModule,\r\n        NbButtonModule,\r\n        MatSlideToggleModule,\r\n        MatTableModule, \r\n        MatCheckboxModule,\r\n        MatFormFieldModule, \r\n        MatInputModule,\r\n        MatSelectModule,\r\n        MatPaginatorModule,\r\n        FormsModule,\r\n        NbAlertModule,\r\n        NbToastrModule.forRoot({\r\n            destroyByClick\t: true,\r\n            duration : 3000,\r\n            position : NbGlobalPhysicalPosition.BOTTOM_RIGHT,\r\n            preventDuplicates : true,\r\n            limit : 3\r\n        }),\r\n    ],\r\n    declarations: [\r\n        AssesmentComponent,\r\n        DemageMechanismComponent,\r\n        ThicknessComponent,\r\n        VisualConditionComponent,\r\n    ],\r\n  })\r\nexport class AssesmentModule { }","import { NgModule } from \"@angular/core\";\r\nimport { RouterModule, Routes } from \"@angular/router\";\r\nimport { VisualConditionComponent } from \"./visual-condition/visual-condition.component\";\r\nimport { ThicknessComponent } from \"./thickness/thickness.component\";\r\nimport { DemageMechanismComponent } from \"./demage-mechanism/demage-mechanism.component\";\r\nimport { AssesmentComponent } from \"./assesment.component\";\r\n\r\nconst routes: Routes = [{\r\n    path: '',\r\n    component: AssesmentComponent,\r\n    children: [\r\n      {\r\n        path: 'visual-condition',\r\n        component : VisualConditionComponent\r\n      },\r\n      {\r\n        path: 'thickness',\r\n        component : ThicknessComponent\r\n      },\r\n      {\r\n        path: 'damage-mechanism',\r\n        component : DemageMechanismComponent\r\n      },\r\n    ],\r\n  }];\r\n  \r\n@NgModule({\r\n    imports: [RouterModule.forChild(routes)],\r\n    exports: [RouterModule],\r\n})\r\nexport class AssesmentRoutingModule { }","import { HttpClient } from \"@angular/common/http\";\r\nimport { Injectable } from \"@angular/core\";\r\nimport { environment } from \"../../../../environments/environment\";\r\n\r\n@Injectable({\r\n    providedIn : 'root'\r\n})\r\nexport class DamageMechanismService {\r\n    constructor(private httpClient : HttpClient) { }\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    getDamageMechanism() {\r\n        const url = this.apiUrl + \"/damage_mechanism\";\r\n        return this.httpClient.get(url);\r\n    }\r\n\r\n    updateDamageMechanism(id, data) {\r\n        const url = this.apiUrl + \"/damage_mechanism/\" + id;\r\n        return this.httpClient.put(url, data);\r\n    }\r\n}","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { MatTableDataSource } from '@angular/material/table';\r\nimport { DamageMechanismService } from './damage-mechanism.service';\r\nimport { MatTableComponent } from '../../../component/mat-table/mat-table.component';\r\nimport { DatePipe } from '@angular/common';\r\nimport { NbToastrService } from '@nebular/theme';\r\nimport { Variables } from '../../../component/common-variable';\r\n\r\n@Component({\r\n  selector: 'ngx-demage-mechanism',\r\n  templateUrl: './demage-mechanism.component.html',\r\n})\r\nexport class DemageMechanismComponent implements OnInit {\r\n  constructor(\r\n    private damageMechanismService : DamageMechanismService,\r\n    private datePipe : DatePipe,\r\n    private toastrService : NbToastrService,\r\n    private variables : Variables\r\n  ) {}\r\n\r\n  @ViewChild(MatTableComponent) viewTable : MatTableComponent;\r\n\r\n  ngOnInit(): void {\r\n    this.damageMechanismService.getDamageMechanism()\r\n    .subscribe(({data} : any) => {\r\n      this.selectionData = data[0];\r\n      this.regenerateTableData(data[0]?.damage_mechanism)\r\n\r\n      this.dataSource = new MatTableDataSource(data);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    })\r\n  }\r\n\r\n  regenerateTableData(damage_mechanism) {\r\n    const tableData = this.variables.damageMechanismName.map(item => {\r\n      const {id} = item;\r\n      if(damage_mechanism?.[id]) { \r\n        const {last_insp_date, insp_due_date} = damage_mechanism[id]\r\n        return {\r\n          ...item,\r\n          ...damage_mechanism[id],\r\n          active : true,\r\n          last_insp_date : new Date(last_insp_date), \r\n          insp_due_date : new Date(insp_due_date)\r\n        }\r\n      }\r\n      return {...item}\r\n    })\r\n    this.viewTable.regenerateTable(tableData)\r\n    this.tableData = this.variables.damageMechanismName \r\n  }\r\n\r\n  tableData\r\n  columnDetails = [ \r\n    { type : 'text', prop : 'piping_damage_mechanism', head : 'Piping Damage Mechanism', width : '200px' },\r\n    { type : 'check', prop : 'active', head : 'Active', width : '100px' },\r\n    { type : 'drop-down', prop : 'susceptibility', head : 'Susceptibility', width : '50px', value : [\r\n      \"Low\", \"Medium\", \"High\"\r\n    ]},\r\n    { type : 'editable text', prop : 'notes', head : 'Notes', width : '800px' },\r\n    { type : 'editable text', prop : 'type_location', head : 'Expected Type/Location', width : '200px' },\r\n    { type : 'editable date', prop : 'last_insp_date', head : 'Last Insp.Date', width : '200px' },\r\n    { type : 'editable date', prop : 'insp_due_date', head : 'Insp. Due Date', width : '200px' },\r\n  ]\r\n\r\n  selectionData : any;\r\n\r\n  dataSource \r\n  displayedColumns: string[] = [ 'piping_id' ];\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  onSubmit() {\r\n    const tableData = this.viewTable.getDataSource()[\"_data\"][\"_value\"]\r\n    const id  = this.selectionData.id\r\n\r\n    const updateData = tableData\r\n    .filter(item => item?.active)\r\n    .map(item => ({\r\n      ...item,\r\n      last_insp_date : this.datePipe.transform(item.last_insp_date, 'yyyy-MM-dd'),\r\n      insp_due_date : this.datePipe.transform(item.insp_due_date, 'yyyy-MM-dd')\r\n    }))\r\n\r\n    let damage_mechanism : any = {}\r\n    updateData.forEach(({\r\n      id, insp_due_date, last_insp_date, notes, susceptibility, type_location\r\n    } : any) => {\r\n      damage_mechanism[id] = {\r\n        notes, type_location, susceptibility, last_insp_date, insp_due_date\r\n      }\r\n    })\r\n\r\n    this.damageMechanismService.updateDamageMechanism(id, {damage_mechanism})\r\n    .subscribe(\r\n      () => this.ngOnInit(),\r\n      () => this.toastrService.danger('Please check your connection and try again.', 'Your request failed.'),\r\n      () => this.toastrService.success('Data has been updated.', 'Your request success.')\r\n    )\r\n  }\r\n\r\n  showData(element) {\r\n      this.selectionData = element\r\n      this.regenerateTableData(element?.damage_mechanism)\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n    const filterValue = (event.target as HTMLInputElement).value;\r\n    this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n    if (this.dataSource.paginator) {\r\n      this.dataSource.paginator.firstPage();\r\n    }\r\n  }\r\n}\r\n","<nb-card>\r\n    <nb-card-header class=\"d-flex justify-content-between\">\r\n        <div>\r\n            <h5>Damage Mechanism</h5>\r\n            <mat-form-field>\r\n                <mat-label>Hit Enter To Search</mat-label>\r\n                <input matInput (keyup)=\"applyFilter($event)\" placeholder=\"Ex. Mia\" #input>\r\n            </mat-form-field>\r\n        </div>\r\n    </nb-card-header>\r\n    <nb-card-body>\r\n        <div class=\"row\">\r\n            <div class=\"col-3\">\r\n                <table style=\"width: 100%; box-shadow: none;\" mat-table [dataSource]=\"dataSource\" class=\"mat-elevation-z8\">\r\n                    <!-- Position Column -->\r\n                    <ng-container matColumnDef=\"piping_id\">\r\n                        <th mat-header-cell *matHeaderCellDef [ngStyle]=\" {'width' : '40px'} \"> Piping ID </th>\r\n                        <td mat-cell *matCellDef=\"let element\" #nameCell\r\n                            style=\"cursor : pointer\"\r\n                            [ngStyle]=\"{'color' : selectionData?.piping_id == element.piping_id ? '#0492c2' : 'black'}\"\r\n                            (mouseover)=\"nameCell.style.color = '#0492c2'\"\r\n                            (mouseout)=\"selectionData?.piping_id == element.piping_id \r\n                            ? nameCell.style.color = '#0492c2' \r\n                            : nameCell.style.color = 'black'\"\r\n                            (click)=\"showData(element)\"\r\n                        > {{element?.piping?.piping_id}} </td>\r\n                    </ng-container>\r\n        \r\n                    <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n                    <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                    </tr>\r\n                </table>\r\n\r\n                <mat-paginator \r\n                    [pageSize]=\"30\" \r\n                    aria-label=\"Select page of GitHub search results\">\r\n                </mat-paginator>\r\n            </div>\r\n\r\n            <div class=\"col-9\">\r\n                <ngx-mat-table \r\n                    [tableHeader]=\"{ show : false }\"\r\n                    [tableFooter]=\"{ show : false }\"\r\n                    [columnDetails]=\"columnDetails\"\r\n                    [tableData]=\"tableData\"\r\n                ></ngx-mat-table>\r\n                <div class=\"w-100 d-flex justify-content-center\">\r\n                    <button nbButton size=\"medium\" status=\"success\" [disabled]=\"!selectionData\" (click)=\"onSubmit()\">Save</button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </nb-card-body>\r\n</nb-card>\r\n\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ThicknessService } from './thickness-service';\r\nimport { Variables } from '../../../component/common-variable';\r\n\r\n@Component({\r\n  selector: 'ngx-thickness',\r\n  templateUrl: './thickness.component.html',\r\n})\r\nexport class ThicknessComponent implements OnInit {\r\n\r\n  constructor (\r\n    private thicknessService : ThicknessService,\r\n    private variables : Variables,\r\n  ) {}\r\n\r\n  ngOnInit(): void {\r\n    this.thicknessService.getDataThickness()\r\n    .subscribe(({data} : any) => {\r\n      this.tableData = data.map(asset => {\r\n        const { \r\n          reading, \r\n          min_required_thickness, \r\n          lt_cr, st_cr, \r\n          remaining_life, \r\n          half_life, \r\n          retirement_date, \r\n          next_tm_insp_date, \r\n          next_ve_insp_date, \r\n          mawp \r\n        } = this.variables.getThicknessCalculation(asset)\r\n        return {\r\n          ...asset,\r\n          reading : reading.toFixed(3),\r\n          t_min : min_required_thickness.toFixed(3),\r\n          lt_cr : lt_cr.toFixed(3),\r\n          st_cr : st_cr.toFixed(3),\r\n          remaining_life : remaining_life.toFixed(2),\r\n          half_life : half_life.toFixed(2),\r\n          retirement_date,\r\n          next_tm_insp_date,\r\n          next_ve_insp_date,\r\n          mawp : mawp.toFixed(2)\r\n        }\r\n      })\r\n    })\r\n  }\r\n\r\n  tableData:any[] = []\r\n  columnDetails = [ \r\n    { type : 'navto', prop : 'piping_id', head : 'Piping ID', width : '200px', nav : '/pages/cml/' },\r\n    { type : 'text', prop : 'reading', head : 'Reading (mm)', width : '200px' },\r\n    { type : 'text', prop : 't_min', head : 'T min (mm)', width : '200px' },\r\n    { type : 'text', prop : 'lt_cr', head : 'LT CR (mm/Year)', width : '200px' },\r\n    { type : 'text', prop : 'st_cr', head : 'ST CR (mm/Year)', width : '200px' },\r\n    { type : 'text', prop : 'remaining_life', head : 'Remaining Life (Year)', width : '200px' },\r\n    { type : 'text', prop : 'half_life', head : 'Half Life (Year)', width : '200px' },\r\n    { type : 'text', prop : 'retirement_date', head : 'Retirement Date', width : '200px' },\r\n    { type : 'text', prop : 'next_tm_insp_date', head : 'Next TM Insp Date', width : '200px' },\r\n    { type : 'text', prop : 'next_ve_insp_date', head : 'Next VE Insp Date', width : '200px' },\r\n    { type : 'text', prop : 'mawp', head : 'MAWP (psi)', width : '200px' },\r\n  ]\r\n}\r\n","<nb-alert status=\"danger\" *ngIf=\"!tableData.length\" >Data Not Available. Please add asset.</nb-alert>\r\n<ngx-mat-table \r\n    *ngIf=\"tableData.length\"\r\n    [tableHeader]=\"{ title : 'Thickness' }\"\r\n    [columnDetails]=\"columnDetails\"\r\n    [tableData]=\"tableData\"\r\n></ngx-mat-table>\r\n\r\n","import { Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport { MatSort } from \"@angular/material/sort\";\r\nimport { MatTableDataSource } from \"@angular/material/table\";\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { VisualConditionService } from \"./visual-condition.service\";\r\nimport { NbToastrService } from \"@nebular/theme\";\r\n\r\n@Component({\r\n  selector: 'ngx-visual-condition',\r\n  templateUrl: './visual-condition.component.html',\r\n})\r\nexport class VisualConditionComponent implements OnInit {\r\n  constructor(\r\n    private visualConditionService : VisualConditionService,\r\n    private toastrService : NbToastrService\r\n  ) {}\r\n  \r\n  ngOnInit(): void {\r\n    this.visualConditionService.getVisualConditions()\r\n    .subscribe(({data} : any) => {\r\n      const tableData = data.map(item  => ({\r\n        ...item.piping,\r\n        visual_condition : {...item, piping : null}\r\n      }))\r\n      this.tableData = tableData\r\n      this.selectionData = this.selectionData ?? tableData[0];\r\n\r\n      this.dataSource = new MatTableDataSource(tableData);\r\n      this.dataSource.paginator = this.paginator;\r\n      this.dataSource.sort = this.sort;\r\n    })\r\n  }\r\n\r\n  tableData\r\n  dataSource \r\n  displayedColumns: string[] = ['piping_id'];\r\n  resultsLength = 0;\r\n  selectionData : any;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  showData(element) {\r\n      this.selectionData = element\r\n  }\r\n\r\n  onSubmit(data) {\r\n    const id = this.selectionData.visual_condition.id\r\n    this.visualConditionService.updateVisualConditions(data, id)\r\n    .subscribe(\r\n      (res) => this.ngOnInit(),\r\n      () => this.toastrService.danger('Please input all conditions field.', 'Your request failed.'),\r\n      () => this.toastrService.success('Data has been updated.', 'Your request success.')\r\n    )\r\n  }\r\n\r\n  applyFilter(event: Event) {\r\n      const filterValue = (event.target as HTMLInputElement).value;\r\n      this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n      if (this.dataSource.paginator) {\r\n        this.dataSource.paginator.firstPage();\r\n      }\r\n  }\r\n\r\n  externalCheckList = [\r\n    { \r\n      title : \"Leaks\" , \r\n      conditions : {\r\n        title : \"Leaks\",\r\n        props : 'leaks_condition'\r\n      }, \r\n      comment : {\r\n        title : 'Leaks Comment',\r\n        props : 'leaks_comment'\r\n      },\r\n      source : [ \r\n        { title : \"Process\", props : 'leaks_process'}, \r\n        { title : \"Steam Tracking\", props : 'leaks_steam_tracing'}, \r\n      ] \r\n    },\r\n    { \r\n      title : \"Misalignment\" , \r\n      conditions : {\r\n        title : \"Misalignment\",\r\n        props : 'misalignment_condition'\r\n      }, \r\n      comment : {\r\n        title : 'Misalignment Comment',\r\n        props : 'misalignment_comment'\r\n      },\r\n      source : \r\n      [ \r\n        { title : \"Piping Misalignment\", props : 'misalignment_piping_misalignment' }, \r\n        { title : \"Expainsion Joint Misalignment\", props : 'misalignment_expainsion_joint' }, \r\n        { title : \"Existing Clamp\", props : 'misalignment_existing_clamps' }, \r\n      ] \r\n    },\r\n    { \r\n      title : \"Vibration\" , \r\n      conditions : {\r\n        title : \"Vibration\",\r\n        props : 'vibration_condition'\r\n      }, \r\n      comment : {\r\n        title : 'Vibration Comment',\r\n        props : 'vibration_comment'\r\n      },\r\n      source : \r\n      [ \r\n        { title : 'Excessive Overhung Weight', props : 'vibration_excessive_overhung'},\r\n        { title : 'Inadequate Support', props : 'vibration_inadequate_support'},\r\n        { title : 'Thin, Small-bore, or Alloy Piping', props : 'vibration_thin_small'},\r\n        { title : 'Threaded Connections', props : 'vibration_threaded_connections'},\r\n        { title : 'Loose Support Causing Metal Wear', props : 'vibration_loose_support'},\r\n      ] \r\n    },\r\n    { \r\n      title : \"Corrosion\" , \r\n      conditions : {\r\n        title : \"Corrosion\",\r\n        props : 'corrosion_condition'\r\n      }, \r\n      comment : {\r\n        title : 'Corrosion Comment',\r\n        props : 'corrosion_comment'\r\n      },\r\n      source : \r\n      [ \r\n        { title : 'Bolting Support Points Under Clamps', props : 'corrosion_bolting_support'},\r\n        { title : 'Coating/Painting Deterioration', props : 'corrosion_coating_painting'},\r\n        { title : 'Soil-to-air Interfaces', props : 'corrosion_soil_to_air'},\r\n        { title : 'Insulation Interfaces', props : 'corrosion_insulation_interface'},\r\n        { title : 'Biloogical Growth', props : 'corrosion_biological_growth'},\r\n      ] \r\n    },\r\n    { \r\n      title : \"Supports\" , \r\n      conditions : {\r\n        title : \"Supports\",\r\n        props : 'supports_condition'\r\n      }, \r\n      comment : {\r\n        title : 'Support Comment',\r\n        props : 'supports_comment'\r\n      },\r\n      source : \r\n      [ \r\n        { title : 'Shoes Off Supports', props : 'supports_shoes_supports' },\r\n        { title : 'Hanger Distortion of Breakage', props : 'supports_hanger_distortion' },\r\n        { title : 'Bottomed Out Springs', props : 'supports_bottomed_out' },\r\n        { title : 'Brace Distorsion/Breakage', props : 'supports_brace_distortion' },\r\n        { title : 'Loose Brackets', props : 'supports_loose_brackets' },\r\n        { title : 'Slides Plates/Rollers', props : 'supports_slides_plates' },\r\n        { title : 'Counter Balance Condition', props : 'supports_counter_balance' },\r\n        { title : 'Support Corrosion', props : 'supports_support_corrosion' },\r\n      ] \r\n    },\r\n    { \r\n      title : \"Insulation\" , \r\n      conditions : {\r\n        title : \"Insulation\",\r\n        props : 'insulation_condition'\r\n      }, \r\n      comment : {\r\n        title : 'Insulation Comment',\r\n        props : 'insulation_comment'\r\n      },\r\n      source : \r\n      [ \r\n        { title : 'Damage/Penetrations', props : 'insulation_damage_penetrations' },\r\n        { title : 'Missing Jacketing Insulation', props : 'insulation_missing_jacketing' },\r\n        { title : 'Sealing Deterioration', props : 'insulation_sealing_deterioration' },\r\n        { title : 'Bulging', props : 'insulation_bulging' },\r\n        { title : 'Banding (Broken/Missing)', props : 'insulation_banding' },\r\n      ] \r\n    },\r\n  ]\r\n\r\n}\r\n","<nb-card>\r\n    <nb-card-header class=\"d-flex justify-content-between\">\r\n        <div>\r\n            <h5>Visual Condition</h5>\r\n            <mat-form-field>\r\n                <mat-label>Hit Enter To Search</mat-label>\r\n                <input matInput \r\n                (keyup)=\"applyFilter($event)\"\r\n                    placeholder=\"Ex. Mia\" #input>\r\n            </mat-form-field>\r\n        </div>\r\n    </nb-card-header>\r\n    <nb-card-body class=\"row\" > \r\n\r\n        <div class=\"col-3\">\r\n            <table \r\n            style=\"width: 100%; box-shadow: none;\" \r\n            mat-table [dataSource]=\"dataSource\" \r\n            class=\"mat-elevation-z8\">\r\n                <!-- Position Column -->\r\n                <ng-container matColumnDef=\"piping_id\">\r\n                    <th mat-header-cell *matHeaderCellDef [ngStyle]=\" {'width' : '40px'} \"> Piping ID </th>\r\n                    <td mat-cell *matCellDef=\"let element\" #nameCell\r\n                        style=\"cursor : pointer\"\r\n                        [ngStyle]=\"{'color' : selectionData.piping_id == element.piping_id ? '#0492c2' : 'black'}\"\r\n                        (mouseover)=\"nameCell.style.color = '#0492c2'\"\r\n                        (mouseout)=\"selectionData.piping_id == element.piping_id \r\n                        ? nameCell.style.color = '#0492c2' \r\n                        : nameCell.style.color = 'black'\"\r\n                        (click)=\"showData(element)\"\r\n                    > {{element.piping_id}} </td>\r\n                </ng-container>\r\n    \r\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumns; sticky: true\"></tr>\r\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\">\r\n                </tr>\r\n            </table>\r\n            \r\n            <mat-paginator \r\n                [length]=\"resultsLength\" \r\n                [pageSize]=\"30\" \r\n                aria-label=\"Select page of GitHub search results\">\r\n            </mat-paginator>\r\n        </div>\r\n\r\n        <form class=\"col-9\" #visualConditionForm=\"ngForm\" (ngSubmit)=\"onSubmit(visualConditionForm.value)\" >\r\n            <nb-accordion multi>\r\n                <nb-accordion-item expanded=\"true\">\r\n                <nb-accordion-item-header>General</nb-accordion-item-header>\r\n                <nb-accordion-item-body>\r\n\r\n                    <div class=\"d-flex justify-content-between\">\r\n                        <span class=\"fw-bold text-info\">Selected Pipe : {{ selectionData?.piping_id }}</span>\r\n                        <div>\r\n                            <mat-form-field class=\"my-2\">\r\n                                <mat-label>Condition</mat-label>\r\n                                <mat-select\r\n                                [ngModel]=\"selectionData?.visual_condition?.general_condition\" \r\n                                name=\"general_condition\"\r\n                                required\r\n                                >\r\n                                <mat-option [value]=\"item\" *ngFor=\"let item of [\r\n                                    'Excellent',\r\n                                    'Good',\r\n                                    'Average',\r\n                                    'Below Average',\r\n                                    'Poor'\r\n                                ]\">{{ item }}</mat-option>\r\n                                </mat-select>\r\n                            </mat-form-field>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div class=\"d-flex justify-content-between\">\r\n                        \r\n                        <div class=\"w-100 px-2\">\r\n                            <label class=\"d-block mb-2\" for=\"finding\">Finding</label>\r\n                            <textarea \r\n                            [ngModel]=\"selectionData?.visual_condition?.general_finding\"\r\n                            nbInput \r\n                            id=\"finding\" \r\n                            fullWidth rows=\"5\" \r\n                            name=\"general_finding\"></textarea>\r\n                        </div>\r\n                \r\n                        <div class=\"w-100 px-2\">\r\n                            <label class=\"d-block mb-2\" for=\"recomendation\">Recomendation</label>\r\n                            <textarea \r\n                            nbInput \r\n                            name=\"general_recomendation\" \r\n                            id=\"recomendation\" \r\n                            [ngModel]=\"selectionData?.visual_condition?.general_recomendation\"\r\n                            fullWidth rows=\"5\"></textarea>\r\n                        </div>\r\n                    </div>\r\n\r\n                </nb-accordion-item-body>\r\n                </nb-accordion-item>\r\n\r\n                <nb-accordion-item expanded=\"true\">\r\n                    <nb-accordion-item-header>External Checklist</nb-accordion-item-header>\r\n                    <nb-accordion-item-body >\r\n\r\n                        <div class=\"row\">\r\n                            <section class=\"pb-5 px-4 col-6\" *ngFor=\"let checkList of externalCheckList\">\r\n                                <div class=\"d-flex align-items-center justify-content-between\">\r\n                                    <label class=\"d-block mb-2\" for=\"finding\">{{ checkList.title }}</label>\r\n                                    <mat-form-field>\r\n                                        <mat-label>Condition</mat-label>\r\n                                        <mat-select\r\n                                            [ngModel]=\"selectionData?.visual_condition[checkList?.conditions?.props]\"\r\n                                            [name]=\"checkList?.conditions?.props\"   \r\n                                            required\r\n                                        >\r\n                                        <mat-option \r\n                                            [value]=\"level\" \r\n                                            *ngFor=\"let level of [\r\n                                                'Excellent',\r\n                                                'Good',\r\n                                                'Average',\r\n                                                'Below Average',\r\n                                                'Poor'\r\n                                            ]\"\r\n                                            >{{ level }}</mat-option>\r\n                                        </mat-select>\r\n                                    </mat-form-field>\r\n                                </div>\r\n                \r\n                                <div class=\"w-100\">\r\n                                    <textarea \r\n                                    nbInput \r\n                                    [ngModel]=\"selectionData?.visual_condition[checkList?.comment?.props]\"\r\n                                    [name]=\"checkList?.comment?.props\" \r\n                                    [id]=\"checkList?.comment?.props\" \r\n                                    fullWidth \r\n                                    rows=\"5\"></textarea>\r\n                                </div>\r\n                \r\n                                <nb-list>\r\n                                    <nb-list-item \r\n                                    *ngFor=\"let source of checkList.source\" \r\n                                    class=\"d-flex justify-content-between\">\r\n                                        <span>{{ source?.title }}</span>\r\n                                        <nb-checkbox \r\n                                        [ngModel]=\"selectionData?.visual_condition[source.props]\"\r\n                                        [name]=\"source?.props\"\r\n                                        class=\"mx-2\"\r\n                                        ></nb-checkbox>\r\n                                    </nb-list-item>\r\n                                </nb-list>\r\n                            </section>\r\n                        </div>\r\n\r\n                    </nb-accordion-item-body>\r\n                </nb-accordion-item>\r\n            </nb-accordion>\r\n            <button nbButton status=\"success\" class=\"w-100 m-2\" [disabled]=\"!(visualConditionForm.form.valid && selectionData)\" type=\"submit\">Submit</button>\r\n        </form>\r\n    </nb-card-body>\r\n</nb-card>","import { Injectable } from \"@angular/core\";\r\nimport { environment } from \"../../../../environments/environment\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n}) \r\nexport class VisualConditionService {\r\n    constructor(private httpClient : HttpClient) { }\r\n    private apiUrl = environment.apiUrl;\r\n\r\n    getVisualConditions() {\r\n        const url = this.apiUrl + \"/visual_condition\";\r\n        return this.httpClient.get(url);\r\n    }\r\n\r\n    updateVisualConditions(data, id) {\r\n        const url = this.apiUrl + \"/visual_condition/\" + id;\r\n        return this.httpClient.put(url, data);\r\n    }\r\n}"],"names":[],"sourceRoot":"webpack:///"}